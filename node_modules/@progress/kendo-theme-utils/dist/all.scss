// This file is auto-generated. Do not edit!
// baka:source scss/all.scss

// #region @import "./index.import.scss"; -> scss/index.import.scss
// #region @import "./_functions.scss"; -> scss/_functions.scss
// #region @import "@progress/kendo-theme-core/scss/functions/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/index.import.scss
// #region @import "./_color.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_color.import.scss
/// Returns the alpha channel of a color.
/// @param {Color} $color - The color to get the alpha channel for.
/// @return {Number} - The alpha channel of the color.
///
/// @example scss - Usage
///   @debug k-color-alpha( rgba( 0, 0, 0, 0.5 ) ); // => 0.5
///   @debug k-color-alpha( #000 ); // => 1
@function k-color-alpha( $color ) {
    @return alpha( $color );
}

/// Returns the red channel of a color.
/// @param {Color} $color - The color to get the red channel for.
/// @return {Number} - The red channel of the color.
///
/// @example scss - Usage
///   @debug k-color-red( #ff0000 ); // => 255
@function k-color-red( $color ) {
    @return red( $color );
}

/// Returns the green channel of a color.
/// @param {Color} $color - The color to get the green channel for.
/// @return {Number} - The green channel of the color.
///
/// @example scss - Usage
///   @debug k-color-green( #00ff00 ); // => 255
@function k-color-green( $color ) {
    @return green( $color );
}

/// Returns the blue channel of a color.
/// @param {Color} $color - The color to get the blue channel for.
/// @return {Number} - The blue channel of the color.
///
/// @example scss - Usage
///   @debug k-color-blue( #0000ff ); // => 255
@function k-color-blue( $color ) {
    @return blue( $color );
}

/// Returns the hue of a color.
/// @param {Color} $color - The color to get the hue for.
/// @return {Number} - The hue of the color.
///
/// @example scss - Usage
///   @debug k-color-hue( #e1d7d2 ); // => 20deg
@function k-color-hue( $color ) {
    @return hue( $color );
}

/// Returns the saturation of a color.
/// @param {Color} $color - The color to get the saturation for.
/// @return {Number} - The saturation of the color.
///
/// @example scss - Usage
///   @debug k-color-saturation( #e1d7d2 ); // => 20%
@function k-color-saturation( $color ) {
    @return saturation( $color );
}

/// Returns the lightness of a color.
/// @param {Color} $color - The color to get the lightness for.
/// @return {Number} - The lightness of the color.
///
/// @example scss - Usage
///   @debug k-color-lightness( #e1d7d2 ); // => 80%
@function k-color-lightness( $color ) {
    @return lightness( $color );
}

/// Returns a color that is a mix of two colors.
/// @param {Color} $color1 - The first color.
/// @param {Color} $color2 - The second color.
/// @param {Number} $weight - The weight of the first color in the mix.
/// @return {Color} - The mixed color.
///
/// @example scss - Usage
///   @debug k-color-mix( #f00, #00f ); // => #800080
@function k-color-mix( $color1, $color2, $weight: 50% ) {
    @return mix( $color1, $color2, $weight );
}

/// Makes a color darker by decreasing its lightness.
/// @param {Color} $color - The color to darken.
/// @param {Number} $amount - The amount to darken the color.
/// @return {Color} - The darkened color.
///
/// @example scss - Usage
///   @debug k-color-darken( #f00, 10% ); // => #e60000
@function k-color-darken( $color, $amount) {
    @return darken( $color, $amount );
}

/// Makes a color lighter by increasing its lightness.
/// @param {Color} $color - The color to lighten.
/// @param {Number} $amount - The amount to lighten the color.
/// @return {Color} - The lightened color.
///
/// @example scss - Usage
///   @debug k-color-lighten( #f00, 10% ); // => #ff1a1a
@function k-color-lighten( $color, $amount) {
    @return lighten( $color, $amount );
}

/// Increases or decreases the hue of a color.
/// @param {Color} $color - The color to adjust the hue for.
/// @param {Number} $degrees - The amount to adjust the hue.
/// @return {Color} - The adjusted color.
///
/// @example scss - Usage
///   @debug k-color-adjust-hue( #f00, 10deg ); // => #ff1a00
@function k-color-adjust-hue( $color, $degrees ) {
    @return adjust-hue( $color, $degrees );
}

/// Increases the saturation of a color.
/// @param {Color} $color - The color to saturate.
/// @param {Number} $amount - The amount to saturate the color.
/// @return {Color} - The saturated color.
///
/// @example scss - Usage
///   @debug k-color-saturate( #f00, 10% ); // => #ff3333
@function k-color-saturate( $color, $amount ) {
    @return saturate( $color, $amount );
}

/// Decreases the saturation of a color.
/// @param {Color} $color - The color to desaturate.
/// @param {Number} $amount - The amount to desaturate the color.
/// @return {Color} - The desaturated color.
///
/// @example scss - Usage
///   @debug k-color-desaturate( #f00, 10% ); // => #e60000
@function k-color-desaturate( $color, $amount ) {
    @return desaturate( $color, $amount );
}

/// Returns a gray color with the same lightness as the input color.
/// @param {Color} $color - The color to convert to grayscale.
/// @return {Color} - The grayscale color.
///
/// @example scss - Usage
///   @debug k-color-grayscale( #f00 ); // => #808080
@function k-color-grayscale( $color ) {
    @return grayscale( $color );
}

/// Returns the RGB complement of a color. This identical to adjusting the hue
/// by 180 degrees.
/// @param {Color} $color - The color to get the complement for.
/// @return {Color} - The complement color.
///
/// @example scss - Usage
///   @debug k-color-complement( #f00 ); // => #00ffff
@function k-color-complement( $color ) {
    @return complement( $color );
}

/// Returns the inverse of a color.
/// @param {Color} $color - The color to invert.
/// @return {Color} - The inverted color.
///
/// @example scss - Usage
///   @debug k-color-invert( #f00 ); // => #00ffff
@function k-color-invert( $color ) {
    @return invert( $color );
}

// #endregion
// #region @import "./_color-contrast.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_color-contrast.import.scss
// Adapted from https://gist.github.com/sgomes/ccc72f71137fe29039c92c0a9fe9b657
// Adapted from https://github.com/twbs/bootstrap/commit/03908ea37a55eaa44c12ce5694dddc1630c980b3

//  Precomputed linear color channel values, for use in contrast calculations.
//  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
//  Algorithm, for c in 0 to 255:
//  f(c) {
//    c = c / 255;
//    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
//  }
//  This lookup table is needed since there is no `pow` in SASS.
// stylelint-disable number-max-precision
$_linear-channel-values: (
    0
    .0003035269835488375
    .000607053967097675
    .0009105809506465125
    .00121410793419535
    .0015176349177441874
    .001821161901293025
    .0021246888848418626
    .0024282158683907
    .0027317428519395373
    .003035269835488375
    .003346535763899161
    .003676507324047436
    .004024717018496307
    .004391442037410293
    .004776953480693729
    .005181516702338386
    .005605391624202723
    .006048833022857054
    .006512090792594475
    .006995410187265387
    .007499032043226175
    .008023192985384994
    .008568125618069307
    .009134058702220787
    .00972121732023785
    .010329823029626936
    .010960094006488246
    .011612245179743885
    .012286488356915872
    .012983032342173012
    .013702083047289686
    .014443843596092545
    .01520851442291271
    .01599629336550963
    .016807375752887384
    .017641954488384078
    .018500220128379697
    .019382360956935723
    .0202885630566524
    .021219010376003555
    .022173884793387385
    .02315336617811041
    .024157632448504756
    .02518685962736163
    .026241221894849898
    .027320891639074894
    .028426039504420793
    .0295568344378088
    .030713443732993635
    .03189603307301153
    .033104766570885055
    .03433980680868217
    .03560131487502034
    .03688945040110004
    .0382043715953465
    .03954623527673284
    .04091519690685319
    .042311410620809675
    .043735029256973465
    .04518620438567554
    .046665086336880095
    .04817182422688942
    .04970656598412723
    .05126945837404324
    .052860647023180246
    .05448027644244237
    .05612849004960009
    .05780543019106723
    .0595112381629812
    .06124605423161761
    .06301001765316767
    .06480326669290577
    .06662593864377289
    .06847816984440017
    .07036009569659588
    .07227185068231748
    .07421356838014963
    .07618538148130785
    .07818742180518633
    .08021982031446832
    .0822827071298148
    .08437621154414882
    .08650046203654976
    .08865558628577294
    .09084171118340768
    .09305896284668745
    .0953074666309647
    .09758734714186246
    .09989872824711389
    .10224173308810132
    .10461648409110419
    .10702310297826761
    .10946171077829933
    .1119324278369056
    .11443537382697373
    .11697066775851084
    .11953842798834562
    .12213877222960187
    .12477181756095049
    .12743768043564743
    .1301364766903643
    .13286832155381798
    .13563332965520566
    .13843161503245183
    .14126329114027164
    .14412847085805777
    .14702726649759498
    .14995978981060856
    .15292615199615017
    .1559264637078274
    .1589608350608804
    .162029375639111
    .1651321945016676
    .16826940018969075
    .1714411007328226
    .17464740365558504
    .17788841598362912
    .18116424424986022
    .184474994500441
    .18782077230067787
    .19120168274079138
    .1946178304415758
    .19806931955994886
    .20155625379439707
    .20507873639031693
    .20863687014525575
    .21223075741405523
    .21586050011389926
    .2195261997292692
    .2232279573168085
    .22696587351009836
    .23074004852434915
    .23455058216100522
    .238397573812271
    .24228112246555486
    .24620132670783548
    .25015828472995344
    .25415209433082675
    .2581828529215958
    .26225065752969623
    .26635560480286247
    .2704977910130658
    .27467731206038465
    .2788942634768104
    .2831487404299921
    .2874408377269175
    .29177064981753587
    .2961382707983211
    .3005437944157765
    .3049873140698863
    .30946892281750854
    .31398871337571754
    .31854677812509186
    .32314320911295075
    .3277780980565422
    .33245153634617935
    .33716361504833037
    .3419144249086609
    .3467040563550296
    .35153259950043936
    .3564001441459435
    .3613067797835095
    .3662525955988395
    .3712376804741491
    .3762621229909065
    .38132601143253014
    .386429433787049
    .39157247774972326
    .39675523072562685
    .4019777798321958
    .4072402119017367
    .41254261348390375
    .4178850708481375
    .4232676699860717
    .4286904966139066
    .43415363617474895
    .4396571738409188
    .44520119451622786
    .45078578283822346
    .45641102318040466
    .4620769996544071
    .467783796112159
    .47353149614800955
    .4793201831008268
    .4851499400560704
    .4910208498478356
    .4969329950608704
    .5028864580325687
    .5088813208549338
    .5149176653765214
    .5209955732043543
    .5271151257058131
    .5332764040105052
    .5394794890121072
    .5457244613701866
    .5520114015120001
    .5583403896342679
    .5647115057049292
    .5711248294648731
    .5775804404296506
    .5840784178911641
    .5906188409193369
    .5972017883637634
    .6038273388553378
    .6104955708078648
    .6172065624196511
    .6239603916750761
    .6307571363461468
    .6375968739940326
    .6444796819705821
    .6514056374198242
    .6583748172794485
    .665387298282272
    .6724431569576875
    .6795424696330938
    .6866853124353135
    .6938717612919899
    .7011018919329731
    .7083757798916868
    .7156935005064807
    .7230551289219693
    .7304607400903537
    .7379104087727308
    .7454042095403874
    .7529422167760779
    .7605245046752924
    .768151147247507
    .7758222183174236
    .7835377915261935
    .7912979403326302
    .799102738014409
    .8069522576692516
    .8148465722161012
    .8227857543962835
    .8307698767746546
    .83879901174074
    .846873231509858
    .8549926081242338
    .8631572134541023
    .8713671191987972
    .8796223968878317
    .8879231178819663
    .8962693533742664
    .9046611743911496
    .9130986517934192
    .9215818562772946
    .9301108583754237
    .938685728457888
    .9473065367331999
    .9559733532492861
    .9646862478944651
    .9734452903984125
    .9822505503331171
    .9911020971138298
    1
);
// stylelint-enable number-max-precision

/// The contrast ratio to reach against white, to determine if color changes from "light" to "dark".
/// Acceptable values for WCAG 2.0 are 3, 4.5 and 7.
/// @type Number
/// @group accessibility
///
/// @link https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast
/// @link https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
$wcag-min-contrast-ratio: 7 !default;
/// Default dark color for WCAG 2.0.
/// @type Color
/// @group accessibility
$wcag-dark: black !default;
/// Default light color for WCAG 2.0.
/// @type Color
/// @group accessibility
$wcag-light: white !default;

/// Calculate the relative luminance for a color.
/// @param {Color} $color - The color to calculate the relative luminance for.
/// @return {Number} - The relative luminance for the color.
///
/// @group accessibility
///
/// @link https://www.w3.org/TR/WCAG/#dfn-relative-luminance
/// @link https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
@function k-color-luminance( $color ) {
    $red: k-list-nth( $_linear-channel-values, k-color-red( $color ) + 1 );
    $green: k-list-nth( $_linear-channel-values, k-color-green( $color ) + 1 );
    $blue: k-list-nth( $_linear-channel-values, k-color-blue( $color ) + 1 );

    @return .2126 * $red + .7152 * $green + .0722 * $blue;
}

/// Calculates contrast ratio between two colors
/// @param {Color} $background - The background color
/// @param {Color} $foreground - The foreground color
/// @return {Number} - The contrast ratio between the two colors
///
/// @group accessibility
///
/// @link https://www.w3.org/TR/WCAG/#dfn-contrast-ratio
/// @link https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
@function k-color-contrast-ratio( $background, $foreground ) {
    $backLum: k-color-luminance( $background ) + .05;
    $foreLum: k-color-luminance( $foreground ) + .05;

    @return k-math-div( k-math-max( $backLum, $foreLum ), k-math-min( $backLum, $foreLum ) );
}

/// Checks if a color is dark
/// @param {Color} $color - The color to check
/// @return {Boolean} - True if the color is dark, false otherwise
///
/// @group accessibility
@function k-is-dark( $color ) {
    @return if( k-color-luminance( $color ) < .5, true, false );
}

/// Checks if a color is light
/// @param {Color} $color - The color to check
/// @return {Boolean} - True if the color is light, false otherwise
///
/// @group accessibility
@function k-is-light( $color ) {
    @return if( k-color-luminance( $color ) < .5, false, true );
}


/// Calculates the contrast ratio between a background color and a foreground color.
/// If the contrast ratio is not high enough, it will return the color with the highest contrast ratio.
/// @param {Color} $background - The background color
/// @param {Color} $dark - The dark color to use as a fallback
/// @param {Color} $light - The light color to use as a fallback
/// @param {Number} $min-ratio - The minimum contrast ratio to reach
/// @return {Color} - The color with the highest contrast ratio
///
/// @group accessibility
@function k-contrast-color( $background, $dark: $wcag-dark, $light: $wcag-light, $min-ratio: $wcag-min-contrast-ratio ) {
    $foregrounds: $light, $dark, #ffffff, #000000;
    $max-ratio: 0;
    $max-ratio-color: null;

    @each $color in $foregrounds {
        $contrast-ratio: k-color-contrast-ratio( $background, $color );

        @if ( $contrast-ratio > $min-ratio ) {
            @return $color;
        } @else if ( $contrast-ratio > $max-ratio ) {
            $max-ratio: $contrast-ratio;
            $max-ratio-color: $color;
        }
    }

    @warn "Found no color leading to #{$min-ratio}:1 contrast ratio against #{$background}...";

    @return $max-ratio-color;
}


// Legacy functions
@function k-yiq-luma-information($color) {
    $r: k-color-red($color);
    $g: k-color-green($color);
    $b: k-color-blue($color);

    $yiq: k-math-div( (($r * 299) + ($g * 587) + ($b * 114)), 1000 );

    @return $yiq;
}
@function k-contrast-yiq($color, $dark: $yiq-dark, $light: $yiq-light) {
    $yiq: k-yiq-luma-information($color);
    $out: if($yiq >= $yiq-threshold, $dark, $light);
    // @debug yiq;
    @return $out;
}
@function k-contrast-legacy($color, $dark: $wcag-dark, $light: $wcag-light) {
    $luma: k-color-luminance($color);
    $out: if($luma < .5, $light, $dark);
    // @debug $luma;
    @return $out;
}

// #endregion
// #region @import "./_color-manipulation.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_color-manipulation.import.scss
$kendo-light-color-level-step: 8% !default;
$kendo-dark-color-level-step: 16% !default;

/// Set a specific jump point for requesting color jumps
/// @group color-system
/// @access private
$kendo-color-level-step: 8% !default;

@function k-color-level( $color, $level: 0 ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );
    $_color-level-step: if( $_dark-theme, $kendo-dark-color-level-step, $kendo-light-color-level-step );

    @if ( $level == 0 ) or ( $level == 0% ) {
        @return $color;
    }

    $base: if( $level < 0, #ffffff, #000000 );
    $level: k-math-abs( $level );


    @if ( k-math-unit($level) == "%" ) {
        @return k-color-mix( $base, $color, $level );
    }

    @return k-color-mix( $base, $color, k-math-clamp( $level * $_color-level-step, 0%, 100% ) );
}

/// Makes a color lighter by mixing it with white
/// @param {Color} $color - The color to lighten
/// @param {Number} $level - The amount to lighten the color
/// @return {Color} - The lightened color
///
/// @group color-system
///
/// @example scss - Usage
///   @debug k-color-tint( #f00, 1 ); // => #ff1a1a
@function k-color-tint( $color, $level: 1 ) {
    @return k-color-level( $color, -$level );
}

/// Makes a color darker by mixing it with black
/// @param {Color} $color - The color to darken
/// @param {Number} $level - The amount to darken the color
/// @return {Color} - The darkened color
///
/// @group color-system
///
/// @example scss - Usage
///   @debug k-color-shade( #f00, 1 ); // => #e60000
@function k-color-shade( $color, $level: 1 ) {
    @return k-color-level( $color, $level );
}

/// Shades the color in light themes and tints it in dark themes
/// @param {Color} $color - The color to shade or tint
/// @param {Number} $level - The amount to shade or tint the color
/// @return {Color} - The shaded or tinted color
///
/// @group color-system
@function k-try-shade( $color, $level: 1 ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-tint( $color, $level );
    }

    @return k-color-shade( $color, $level );
}

/// Tints the color in light themes and shades it in dark themes
/// @param {Color} $color - The color to tint or shade
/// @param {Number} $level - The amount to tint or shade the color
/// @return {Color} - The tinted or shaded color
///
/// @group color-system
@function k-try-tint( $color, $level: 1 ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-shade( $color, $level );
    }

    @return k-color-tint( $color, $level );
}

/// Darkens the color in light themes and lightens it in dark themes
/// @param {Color} $color - The color to darken or lighten
/// @param {Number} $level - The amount to darken or lighten the color
/// @return {Color} - The darkened or lightened color
///
/// @group color-system
@function k-try-darken( $color, $amount ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-lighten( $color, $amount );
    }
    @return k-color-darken( $color, $amount );
}

/// Lightens the color in light themes and darkens it in dark themes
/// @param {Color} $color - The color to lighten or darken
/// @param {Number} $level - The amount to lighten or darken the color
/// @return {Color} - The lightened or darkened color
///
/// @group color-system
@function k-try-lighten( $color, $amount ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-darken( $color, $amount );
    }
    @return k-color-lighten( $color, $amount );
}

/// Converts a color with alpha to solid color mixed with a background color
/// @param {Color} $color - The color to convert
/// @param {Color} $bg - The background color
/// @return {Color} - The converted color
///
/// @group color-system
///
/// @example scss - Usage
///   @debug k-rgba-to-mix( rgba( #f00, 0.5 ), #fff ); // => #ff8080
@function k-rgba-to-mix( $color, $bg ) {
    $percent: k-color-alpha( $color ) * 100%;

    @return k-color-mix( rgba( $color, 1 ), $bg, $percent );
}

// TODO: Remove this function or rethink the logic
@function k-true-mix( $color1, $color2, $weight: 50% ) {
    @return k-color-mix( rgba( $color1, 1 ), rgba( $color2, 1 ), $weight );
}

// #endregion
// #region @import "./_color-system.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_color-system.import.scss
/// Generates all color variations of a given main color
/// @param {String} $name - The name of the main color
/// @param {Color} $color - The color value to be assigned to the main color
/// @param {String} $theme - The theme the colors will be generated for
/// @return {Map} - A map with the generated keys and values
///
/// @group color-system
@function k-generate-color-variations( $name, $color, $theme: null ) {
    $result: ();

    // DataViz
    @if ( 
            $name == 'series-a' or
            $name == 'series-b' or
            $name == 'series-c' or
            $name == 'series-d' or
            $name == 'series-e' or
            $name == 'series-f'
        ) {
        $_variations: (
            #{$name}: $color,
            #{$name}-bold: k-color-mix(black, $color, 25%),
            #{$name}-bolder: k-color-mix(black, $color, 50%),
            #{$name}-subtle: k-color-mix(white, $color, 25%),
            #{$name}-subtler: k-color-mix(white, $color, 50%),
        );

        $result: k-map-merge($result, $_variations);
    } @else {
        // Default
        @if ( $theme == 'default' or $theme == null ) { // stylelint-disable-line
            $_variations: (
                #{$name}-subtle: if( $name == 'base', k-try-shade( $color, 4% ), k-try-tint( $color, 80% )),
                #{$name}-subtle-hover: if( $name == 'base', k-try-shade( $color, 8% ), k-try-tint($color, 65% )),
                #{$name}-subtle-active: if( $name == 'base', k-try-shade( $color, 13% ), k-try-tint( $color, 50% )),
                #{$name}: $color,
                #{$name}-hover: k-try-shade( $color, 0.5 ),
                #{$name}-active: k-try-shade( $color, 1.5 ),
                #{$name}-emphasis: if( $name == 'base', k-try-shade( $color, 21% ), k-try-tint( $color, 25% )),
                #{$name}-on-subtle: if( $name == 'base', k-try-shade( $color, 75% ), k-try-shade( $color, 65% )),
                on-#{$name}: if( $name == 'base', k-try-shade( $color, 75% ), k-contrast-legacy( $color )),
                #{$name}-on-surface: if( $name == 'base', k-try-shade( $color, 75% ), k-try-shade( $color, 25% )),
            );

            $result: k-map-merge($result, $_variations);
        }

        // Bootstrap
        @if ( $theme == 'bootstrap' ) {
            $_variations: (
                #{$name}-subtle: if( $name == 'base', k-try-tint( $color, 30% ), k-try-tint( $color, 80% )),
                #{$name}-subtle-hover: if( $name == 'base', $color, k-try-tint($color, 65% )),
                #{$name}-subtle-active: if( $name == 'base', k-try-shade( $color, 8% ), k-try-tint( $color, 50% )),
                #{$name}: $color,
                #{$name}-hover: k-color-darken( $color, 7.5% ),
                #{$name}-active: k-color-darken( $color, 10% ),
                #{$name}-emphasis: if( $name == 'base', k-try-shade( $color, 21% ), k-try-tint( $color, 25% )),
                #{$name}-on-subtle: if( $name == 'base', k-try-shade( $color, 84% ), k-try-shade( $color, 65% )),
                on-#{$name}: if( $name == 'base', k-try-shade( $color, 84% ), k-contrast-legacy( $color )),
                #{$name}-on-surface: if( $name == 'base', k-try-shade( $color, 84% ), k-try-shade( $color, 25% )),
            );

            $result: k-map-merge($result, $_variations);
        }

        // Material
        @if ( $theme == 'material' ) {
            $_variations: (
                #{$name}-subtle: if( $name == 'base', k-try-shade( $color, 12% ), k-try-tint( $color, 80% )),
                #{$name}-subtle-hover: if( $name == 'base', k-try-shade( $color, 16% ), k-try-tint($color, 65% )),
                #{$name}-subtle-active: if( $name == 'base', k-try-shade( $color, 24% ), k-try-tint( $color, 50% )),
                #{$name}: $color,
                #{$name}-hover: k-try-shade( $color, 0.5 ),
                #{$name}-active: k-try-shade( $color, 1.5 ),
                #{$name}-emphasis: if( $name == 'base', k-try-shade( $color, 32% ), k-try-tint( $color, 25% )),
                #{$name}-on-subtle: if( $name == 'base', k-try-shade( $color, 87% ), k-try-shade( $color, 65% )),
                on-#{$name}: if( $name == 'base', k-try-shade( $color, 87% ), k-contrast-color( $color )),
                #{$name}-on-surface: if( $name == 'base', k-try-shade( $color, 87% ), k-try-shade( $color, 50% )),
            );

            $result: k-map-merge($result, $_variations);
        }

        // Fluent
        @if ( $theme == 'fluent' ) {
            $_variations: (
                #{$name}-subtle: if( $name == 'base', k-try-shade( $color, 2% ), k-try-tint( $color, 80% )),
                #{$name}-subtle-hover: if( $name == 'base', k-try-shade( $color, 8% ), k-try-tint($color, 65% )),
                #{$name}-subtle-active: if( $name == 'base', k-try-shade( $color, 12% ), k-try-tint( $color, 50% )),
                #{$name}: $color,
                #{$name}-hover: k-try-shade( $color, 0.5 ),
                #{$name}-active: k-try-shade( $color, 1.5 ),
                #{$name}-emphasis: if( $name == 'base', k-try-shade( $color, 18% ), k-try-tint( $color, 25% )),
                #{$name}-on-subtle: if( $name == 'base', k-try-shade( $color, 74% ), k-try-shade( $color, 65% )),
                on-#{$name}: if( $name == 'base', k-try-shade( $color, 86% ), k-contrast-legacy( $color )),
                #{$name}-on-surface: if( $name == 'base', k-try-shade( $color, 86% ), k-try-shade( $color, 25% )),
            );

            $result: k-map-merge($result, $_variations);
        }

        // Classic
        @if ( $theme == 'classic' ) {
            $_variations: (
                #{$name}-subtle: if( $name == 'base', k-try-tint( $color, 20% ), k-try-tint( $color, 80% )),
                #{$name}-subtle-hover: if( $name == 'base', k-try-tint( $color, 8% ), k-try-tint($color, 65% )),
                #{$name}-subtle-active: if( $name == 'base', k-try-shade( $color, 6% ), k-try-tint( $color, 50% )),
                #{$name}: $color,
                #{$name}-hover: k-try-shade( $color, 1 ),
                #{$name}-active: k-try-shade( $color, 2 ),
                #{$name}-emphasis: if( $name == 'base', k-try-shade( $color, 14% ), k-try-tint( $color, 25% )),
                #{$name}-on-subtle: if( $name == 'base', k-try-shade( $color, 84% ), k-try-shade( $color, 65% )),
                on-#{$name}: if( $name == 'base', k-try-shade( $color, 84% ), k-contrast-legacy( $color )),
                #{$name}-on-surface: if( $name == 'base', k-try-shade( $color, 84% ), k-try-shade( $color, 25% )),
            );

            $result: k-map-merge($result, $_variations);
        }
    }

    @return $result;
}

/// Takes a color name from the $kendo-colors map as a parameter
/// and returns a CSS variable with the actual color as a fallback
/// @param {String} $key - The name of a color/key in the $kendo-colors map
/// @return {String} - CSS variable with the actual color as a fallback
///
/// @group color-system
@function k-color($key) {
    $_color: k-map-get($kendo-colors, $key);

    @if ($_color) {
        @return var(--kendo-color-#{$key}, $_color);
    } @else {
        @error "Color Variable \`#{$key}\` does not exists in the color collection.";
    }
}
// #endregion
// #region @import "./_custom-properties.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_custom-properties.import.scss
@function k-var( $prefix: kendo-, $var: null, $fallback: null ) {
    $_prefix: $prefix;
    $_var: $var;
    $_fallback: $fallback;

    @if ( k-string-index( $prefix, "--" ) == 1 ) {
        $_prefix: "";
        $_var: k-string-slice( $prefix, 3 );
        $_fallback: $var;
    }

    @if not $_var {
        @return null;
    }

    @if $_prefix == null { // stylelint-disable-line
        $_prefix: "";
    }

    @if ($_fallback != null and $_fallback != "") {
        @return var( --#{$_prefix}#{$_var}, #{$_fallback} );
    }

    @return var( --#{$_prefix}#{$_var} );
}

@function k-vars( $prefix: kendo-, $vars... ) {
    $vars: k-list-reverse( $vars );
    $result: null;

    // @debug $prefix;
    @each $var in $vars {
        $result: k-var( $prefix, $var, $result );
    }

    @return $result;
}

// #endregion
// #region @import "./_escape-string.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_escape-string.import.scss
$_kendo-svg-escaped-characters: (
    ("%", "%25"),
    ("<", "%3c"),
    (">", "%3e"),
    ("#", "%23"),
    ("(", "%28"),
    (")", "%29")
) !default;

/// Escapes SVG characters in a string
/// @param {String} $string - The string to escape
/// @return {String} - The escaped string
///
/// @link https://codepen.io/kevinweber/pen/dXWoRw
@function k-escape-svg($string) {
    @if k-string-index($string, "data:image/svg+xml") {
        @each $char, $encoded in $_kendo-svg-escaped-characters {
            // Do not escape the url brackets
            @if k-string-index($string, "url(") == 1 {
                $string: url("#{k-string-replace(k-string-slice($string, 6, -3), $char, $encoded)}");
            } @else {
                $string: k-string-replace($string, $char, $encoded);
            }
        }
    }

    @return $string;
}



$_kendo-escape-class-name: (
    ".": "\\.",
    "/": "\\/"
);

/// Escapes special characters in a class name
/// @param {String} $text - The string to escape
/// @return {String} - The escaped string
@function k-escape-class-name( $text ) {
    $_text: $text;

    @each $char, $rep in $_kendo-escape-class-name {
        $_text: k-string-replace( $_text, k-string-unquote( $char ), k-string-unquote( $rep ) );
    }

    @return $_text;
}

// #endregion
// #region @import "./_lang.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_lang.import.scss
/// Returns the value of a variable if it is not null,
/// otherwise returns the fallback value.
/// @param {Any} $var - The variable to check.
/// @param {Any} $fallback - The fallback value.
/// @return {Any} - The value of the variable or the fallback value.
///
/// @example scss - Usage
///   $foo: null;
///   @debug k-if-var( $foo, "bar" ); // => "bar"
///   $foo: "baz";
///   @debug k-if-var( $foo, "bar" ); // => "baz"
@function k-if-var( $var, $fallback ) {
    @return if( $var != null, $var, $fallback );
}

// #endregion
// #region @import "./_list.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_list.import.scss
/// Returns a copy of `$list` with `$val` appended to the end.
/// @param {List} $list - The list to process.
/// @param {Any} $val - The value to append to `$list`.
/// @param {String} $separator - The separator to use between `$list` and `$val`.
/// @return {List} - A copy of `$list` with `$val` appended to the end.
///
/// @example scss - Usage
///   @debug k-list-append( ( "foo", "bar" ), "baz" ); // => "foo, bar, baz"
@function k-list-append( $list, $val, $separator: auto ) {
    @return append( $list, $val, $separator );
}

/// Checks whether `$list` contains `$value`.
/// @param {List} $list - The list to check.
/// @param {Any} $value - The value to check for.
/// @return {Boolean} - Whether `$list` contains `$value`.
///
/// @example scss - Usage
///   @debug k-list-includes( ( "foo", "bar" ), "foo" ); // => true
///   @debug k-list-includes( ( "foo", "bar" ), "baz" ); // => false
@function k-list-includes( $list, $value ) {
    @return k-list-index( $list, $value ) != null;
}

/// Returns the index of `$value` in `$list`.
/// @param {List} $list - The list to check.
/// @param {Any} $value - The value to check for.
/// @return {Number} - The index of `$value` in `$list`.
///
/// @example scss - Usage
///   @debug k-list-index( ( "foo", "bar" ), "foo" ); // => 1
@function k-list-index( $list, $value ) {
    @return index( $list, $value );
}

/// Returns whether `$list` is bracketed.
/// @param {List} $list - The list to check.
/// @return {Boolean} - Whether `$list` is bracketed.
///
/// @example scss - Usage
///   @debug k-list-is-bracketed( ( "foo", "bar" ) ); // => false
///   @debug k-list-is-bracketed( [ "foo", "bar" ] ); // => true
@function k-list-is-bracketed( $list ) {
    @return is-bracketed( $list );
}

/// Joins two lists together.
/// @param {List} $list1 - The first list to join.
/// @param {List} $list2 - The second list to join.
/// @param {String} $separator - The separator to use between `$list1` and `$list2`.
/// @param {Boolean} $bracketed - Whether the result should be bracketed.
/// @return {List} - The joined list.
///
/// @example scss - Usage
///   @debug k-list-join( ( "foo", "bar" ), ( "baz", "qux" ) ); // => "foo, bar, baz, qux"
///   @debug k-list-join( ( "foo", "bar" ), ( "baz", "qux" ), " " ); // => "foo bar baz qux"
@function k-list-join( $list1, $list2, $separator: auto, $bracketed: auto ) {
    @return join( $list1, $list2, $separator, $bracketed );
}

/// Returns the length of `$list`.
/// @param {List} $list - The list to check.
/// @return {Number} - The length of `$list`.
///
/// @example scss - Usage
///   @debug k-list-length( ( "foo", "bar" ) ); // => 2
@function k-list-length( $list ) {
    @return length( $list );
}

/// Returns the nth item in `$list`.
/// @param {List} $list - The list to check.
/// @param {Number} $n - The index of the item to return.
/// @return {Any} - The nth item in `$list`.
///
/// @example scss - Usage
///   @debug k-list-nth( ( "foo", "bar" ), 1 ); // => "foo"
@function k-list-nth( $list, $n ) {
    @return nth( $list, $n );
}

/// Reverse the order of items in `$list`.
/// @param {List} $list - The list to reverse.
/// @return {List} - The reversed list.
///
/// @example scss - Usage
///   @debug k-list-reverse( ( "foo", "bar" ) ); // => "bar, foo"
@function k-list-reverse( $list: null ) {
    $result: ();

    @if ($list) {
        $len: k-list-length( $list );

        @for $i from $len through 1 {
            $result: k-list-append( $result, k-list-nth( $list, $i ) );
        }

        @return $result;
    }

    @warn "No list passed.";
    @return $result;
}

/// Returns the separator of `$list`.
/// @param {List} $list - The list to check.
/// @return {String} - The separator of `$list`.
///
/// @example scss - Usage
///   @debug k-list-separator( ( "foo", "bar" ) ); // => ","
@function k-list-separator( $list ) {
    @return list-separator( $list );
}

/// Returns a copy of `$list` with `$val` inserted at `$n`.
/// @param {List} $list - The list to process.
/// @param {Number} $n - The index at which to insert `$val`.
/// @param {Any} $val - The value to insert.
/// @return {List} - A copy of `$list` with `$val` inserted at `$n`.
///
/// @example scss - Usage
///   @debug k-list-set-nth( ( "foo", "bar" ), 1, "baz" ); // => "baz, bar"
@function k-list-set-nth( $list, $n, $value ) {
    @return set-nth( $list, $n, $value );
}

/// Combines two lists into a single list of two-item lists.
/// @param {List} $list1 - The first list to combine.
/// @param {List} $list2 - The second list to combine.
/// @return {List} - A list of two-item lists.
///
/// @example scss - Usage
///   @debug k-list-zip( ( "foo", "bar" ), ( "baz", "qux" ) ); // => ((foo, baz), (bar, qux))
@function k-list-zip( $lists... ) {
    @return zip( $lists... );
}

// #endregion
// #region @import "./_math.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_math.import.scss
/// Returns the absolute value of a number.
/// @param {Number} $number - The number to get the absolute value of.
/// @return {Number} - The absolute value of `$number`.
///
/// @example scss - Usage
///   @debug k-math-abs( -10 ); // => 10
@function k-math-abs( $number ) {
    @return abs( $number );
}

/// Returns the smallest integer greater than or equal to a number.
/// @param {Number} $number - The number to get the ceiling of.
/// @return {Number} - The ceiling of `$number`.
///
/// @example scss - Usage
///   @debug k-math-ceil( 10.1 ); // => 11
@function k-math-ceil( $number ) {
    @return ceil( $number );
}

/// Returns the largest integer less than or equal to a number.
/// @param {Number} $number - The number to get the floor of.
/// @return {Number} - The floor of `$number`.
///
/// @example scss - Usage
///   @debug k-math-floor( 10.9 ); // => 10
@function k-math-floor( $number ) {
    @return floor( $number );
}

/// Restricts `$number` to the range between `$min` and `$max`. If `$number` is
/// less than `$min`, `$min` is returned. If `$number` is greater than `$max`,
/// `$max` is returned. Otherwise, `$number` is returned.
/// @param {Number} $number - The number to clamp.
/// @param {Number} $min - The minimum value.
/// @param {Number} $max - The maximum value.
/// @return {Number} - The clamped number.
///
/// @example scss - Usage
///   @debug k-math-clamp( 10, 0, 5 ); // => 5
@function k-math-clamp( $number, $min, $max ) {
    @return k-math-max( $min, k-math-min( $max, $number ) );
}

/// Returns whether two numbers have compatible units.
/// @param {Number} $a - The first number.
/// @param {Number} $b - The second number.
/// @return {Boolean} - Whether the numbers have compatible units.
///
/// @example scss - Usage
///   @debug k-math-compatible( 10px, 10px ); // => true
///   @debug k-math-compatible( 10px, 10em ); // => false
@function k-math-compatible( $a, $b ) {
    @return comparable( $a, $b );
}

/// Returns the quotient of two numbers.
/// @param {Number} $a - The dividend.
/// @param {Number} $b - The divisor.
/// @return {Number} - The quotient of `$a` and `$b`.
///
/// @example scss - Usage
///   @debug k-math-div( 10, 2 ); // => 5
///   @debug k-math-div( 10px, 2 ); // => 5px
@function k-math-div( $a, $b )  {
    @return ( $a / $b );
}

/// Returns whether `$number` has no units.
/// @param {Number} $number - The number to check.
/// @return {Boolean} - Whether `$number` has no units.
///
/// @example scss - Usage
///   @debug k-math-is-unitless( 10 ); // => true
///   @debug k-math-is-unitless( 10px ); // => false
@function k-math-is-unitless( $number ) {
    @return unitless( $number );
}

/// Returns the larger of two numbers.
/// @param {Number} $a - The first number.
/// @param {Number} $b - The second number.
/// @return {Number} - The larger of `$a` and `$b`.
///
/// @example scss - Usage
///   @debug k-math-max( 10, 20 ); // => 20
///   @debug k-math-max( 10px, 20px ); // => 20px
@function k-math-max( $a, $b ) {
    @return max( $a, $b );
}

/// Returns the smaller of two numbers.
/// @param {Number} $a - The first number.
/// @param {Number} $b - The second number.
/// @return {Number} - The smaller of `$a` and `$b`.
///
/// @example scss - Usage
///   @debug k-math-min( 10, 20 ); // => 10
///   @debug k-math-min( 10px, 20px ); // => 10px
@function k-math-min( $a, $b ) {
    @return min( $a, $b );
}

/// Returns the remainder of two numbers.
/// @param {Number} $a - The dividend.
/// @param {Number} $b - The divisor.
/// @return {Number} - The remainder of `$a` and `$b`.
///
/// @example scss - Usage
///   @debug k-math-mod( 10, 3 ); // => 1
///   @debug k-math-mod( 10px, 3 ); // => 1px
@function k-math-mod( $a, $b ) {
    @return ( $a % $b );
}

/// Returns the product of two numbers.
/// @param {Number} $a - The first number.
/// @param {Number} $b - The second number.
/// @return {Number} - The product of `$a` and `$b`.
///
/// @example scss - Usage
///   @debug k-math-mul( 10, 2 ); // => 20
///   @debug k-math-mul( 10px, 2 ); // => 20px
@function k-math-mul( $a, $b ) {
    @return ( $a * $b );
}

/// Converts a unitless number to a percentage.
/// @param {Number} $number - The number to convert.
/// @return {Number} - The percentage.
///
/// @example scss - Usage
///   @debug k-math-percentage( 0.5 ); // => 50%
@function k-math-percentage( $number ) {
    @return percentage( $number );
}

/// Returns the result of raising `$x` to the power of `$n`.
/// @param {Number} $x - The base.
/// @param {Number} $n - The exponent.
/// @return {Number} - The result of raising `$x` to the power of `$n`.
///
/// @example scss - Usage
///   @debug k-math-pow( 2, 3 ); // => 8
@function k-math-pow( $x, $n ) {
    $ret: 1;

    @if ( $n == 0 ) {
        @return $ret;
    }

    @if ( $n > 0 ) {
        @for $i from 1 through $n {
            $ret: $ret * $x;
        }
        @return $ret;
    }

    @for $i from $n to 0 {
        $ret: k-math-div( $ret, $x );
    }
    @return $ret;

}

/// Returns a random number between 0 and 1.
/// @param {Number} $limit - The upper limit of the random number.
/// @return {Number} - A random number between 0 and 1.
///
/// @example scss - Usage
///   @debug k-math-random(); // => 0.123456789
@function k-math-random( $limit: null ) {
    @if ( $limit == null ) { // stylelint-disable-line
        @return random();
    }

    @return random( $limit );
}

/// Returns the result of rounding `$number` to the nearest integer
/// using the specified `$precision`.
/// @param {Number} $number - The number to round.
/// @param {Number} $precision - The number of decimal places to round to.
/// @return {Number} - The rounded number.
///
/// @example scss - Usage
///   @debug k-math-round( 10.123456789, 3 ); // => 10.123
@function k-math-round( $number, $precision: 0 ) {

    @if ( $precision == 0 ) {
        @return round( $number );
    }

    $pow: k-math-pow( 10, $precision );

    @return k-math-div( round( $number * $pow ), $pow );
}

/// Returns a string representation of `$number`'s unit.
/// @param {Number} $number - The number to get the unit of.
/// @return {String} - The unit of `$number`.
///
/// @example scss - Usage
///   @debug k-math-unit( 10px ); // => px
@function k-math-unit( $number ) {
    @return unit( $number );
}

/// Remove the unit from a number.
/// @param {Number} $number - The number to remove the unit from.
/// @return {Number} - The unitless number.
///
/// @example scss - Usage
///   @debug k-math-strip-unit( 10px ); // => 10
@function k-math-strip-unit($number) {
    @if ( k-meta-type-of( $number ) == "number" ) and not k-math-is-unitless( $number ) {
        @return k-math-div( $number, 1 * k-math-unit( $number) );
    }

    @return $number;
}

// #endregion
// #region @import "./_map.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_map.import.scss
/// Returns the value at `$key` in `$map`.
/// @param {Map} $map - The map to get the value from.
/// @param {Any} $key - The key to get the value for.
///
/// @example scss - Usage
///   @debug k-map-get( ( "foo": "bar" ), "foo" ); // => "bar"
@function k-map-get( $map, $keys... ) {
    @each $key in $keys {
        $map: map-get( $map, $key ); // stylelint-disable-line
    }
    @return $map;
}

/// Returns whether `$map` has a value at `$key`.
/// @param {Map} $map - The map to check.
/// @param {Any} $key - The key to check.
/// @return {Boolean} - Whether `$map` has a value at `$key`.
///
/// @example scss - Usage
///   @debug k-map-has( ( "foo": "bar" ), "foo" ); // => true
///   @debug k-map-has( ( "foo": "bar" ), "bar" ); // => false
@function k-map-has-key( $map, $key ) {
    @return map-has-key( $map, $key );
}

/// Returns a comma separated list of the keys in `$map`.
/// @param {Map} $map - The map to get the keys from.
/// @return {List} - A comma separated list of the keys in `$map`.
///
/// @example scss - Usage
///   @debug k-map-keys( ( "foo": "bar", "baz": "qux" ) ); // => "foo, baz"
@function k-map-keys( $map ) {
    @return map-keys( $map );
}

/// Returns a map with the keys and values from `$map` and `$args`.
/// @param {Map} $map - The map to merge.
/// @param {Map} $args - The map to merge into `$map`.
/// @return {Map} - A map with the keys and values from `$map` and `$args`.
///
/// @example scss - Usage
///   @debug k-map-merge( ( "foo": "bar" ), ( "baz": "qux" ) ); // => ( "foo": "bar", "baz": "qux" )
@function k-map-merge( $map, $args... ) {
    @each $arg in $args {
        $map: map-merge( $map, $arg ); // stylelint-disable-line
    }
    @return $map;
}

/// Returns a deep-map with the keys and values from `$map` and `$args`.
/// @param {Map} $maps - The maps to deep-merge.
/// @return {Map} - A map with the keys and values from `$map` and `$args`.
///
/// @example scss - Usage
///   @debug k-map-deep-merge( ( "foo": ("bar": "baz", "baz": "qux" ) ), ( "foo": ("bar": "foo") ) ); // => ( "foo": ("bar": "foo", "baz": "qux" ))
@function k-map-deep-merge($maps...) {
    $merged: ();

    @each $map in $maps {
      @each $key, $val in $map {
        @if (k-meta-type-of($val) == 'map') {
          $current: k-map-get($merged, $key);
          @if (k-meta-type-of($current) == 'map') {
            $val: k-map-deep-merge($current, $val);
            $map: k-map-merge(
              $map,
              (
                $key: $val
              )
            );
          }
        }
      }
      $merged: k-map-merge($merged, $map);
    }

    @return $merged;
  }

/// Returns a map with the keys and values from `$map` except for `$keys`.
/// @param {Map} $map - The map to remove keys from.
/// @param {Any} $keys - The keys to remove from `$map`.
/// @return {Map} - A map with the keys and values from `$map` except for `$keys`.
///
/// @example scss - Usage
///   @debug k-map-remove( ( "foo": "bar", "baz": "qux" ), "foo" ); // => ( "baz": "qux" )
@function k-map-remove( $map, $keys... ) {
    @return map-remove( $map, $keys... );
}

/// Sets a single key and value in `$map`.
/// @param {Map} $map - The map to set the value in.
/// @param {Any} $key - The key to set the value for.
/// @param {Any} $value - The value to set.
/// @return {Map} - A map with the key and value set.
///
/// @example scss - Usage
///   @debug k-map-set( ( "foo": "bar" ), "baz", "qux" ); // => ( "foo": "bar", "baz": "qux" )
@function k-map-set( $map, $key, $value ) {
    @return k-map-merge( $map, ( $key: $value ) );
}

/// Returns a comma separated list of the values in `$map`.
/// @param {Map} $map - The map to get the values from.
/// @return {List} - A comma separated list of the values in `$map`.
///
/// @example scss - Usage
///   @debug k-map-values( ( "foo": "bar", "baz": "qux" ) ); // => "bar, qux"
@function k-map-values( $map ) {
    @return map-values( $map );
}

/// Returns negative values of a number or numbers in a list.
/// @param {Map} $map - The map to get the values from.
/// @return {Map} - A comma separated list of the values in `$map`.
///
/// @example scss - Usage
///   @debug k-map-negate( ( 0: 0, 1: 1px, 2: 2px ) ); // => ("-1": -1px, "-2": -2px)
@function k-map-negate($map) {
    $_map-neg: ();

    @if( k-meta-type-of($map) != map ) {
        @error "expected type of #{$map} is map, was #{k-meta-type-of($map)}";
    };
    @each $key, $value in $map {
        $_key-neg: "-" + $key;

        @if( k-meta-type-of($value) == number and $value != 0) {
            $_map-neg: k-map-set($_map-neg, $_key-neg, -1 * $value );
        }
    }

    @return $_map-neg;

}

// #endregion
// #region @import "./_meta.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_meta.import.scss
// Adapted from https://css-tricks.com/snippets/sass/advanced-type-checking/

/// A wrapper around the `call()` function.
/// Calls the function `$function` with the arguments `$args`.
/// @param {Function} $function - The function to call.
/// @param {List} $args - The arguments to pass to `$function`.
/// @return {Any} - The result of calling `$function` with `$args`.
///
/// @example scss - Usage
///   @debug k-meta-call( k-meta-get-function( "k-string-replace" ), "foo bar", "bar", "baz" ); // => "foo baz"
@function k-meta-call( $function, $args... ) {
    @return call( $function, $args... );
}

/// A wrapper around the `function-exists()` function.
/// Returns whether a function with the name `$name` exists.
/// @param {String} $name - The name of the function to check.
/// @return {Boolean} - Whether a function with the name `$name` exists.
///
/// @example scss - Usage
///   @debug k-meta-function-exists( "k-string-replace" ); // => true
@function k-meta-function-exists( $name ) {
    @if $name == "" {
        @return false;
    }

    @return function-exists( $name );
}

/// A wrapper around the `get-function()` function.
/// Returns the function with the name `$name`.
/// @param {String} $name - The name of the function to get.
/// @param {Boolean} $css - Whether to return the CSS representation of the function.
/// @param {Module} $module - The module to get the function from.
/// @return {Function} - The function with the name `$name`.
///
/// @example scss - Usage
///   @debug k-meta-get-function( "k-string-replace" ); // => Function
@function k-meta-get-function( $name, $args... ) {
    @return get-function( $name, $args... );
}

/// A wrapper around the `inspect()` function.
/// Returns a string representation of `$value`.
/// @param {Any} $value - The value to inspect.
/// @return {String} - A string representation of `$value`.
///
/// @example scss - Usage
///   @debug k-meta-inspect( "foo bar" ); // => "foo bar"
@function k-meta-inspect( $value ) {
    @return inspect( $value );
}

/// A wrapper around the `keywords()` function.
/// Returns a map of the keywords in `$args`.
/// @param {List} $args - The arguments to process.
/// @return {Map} - A map of the keywords in `$args`.
///
/// @example scss - Usage
///   @debug k-meta-keywords( ( "foo" "bar" "baz" "qux" ) ); // => ( "foo": "bar", "baz": "qux" )
@function k-meta-keywords( $args ) {
    @return keywords( $args );
}

/// A wrapper around the `type-of()` function.
/// Returns the type of `$value`.
/// @param {Any} $value - The value to get the type of.
/// @return {String} - The type of `$value`.
///
/// @example scss - Usage
///   @debug k-meta-type-of( "foo bar" ); // => "string"
@function k-meta-type-of( $value ) {
    @return type-of( $value );
}

/// A wrapper around the `variable-exists()` function.
/// Returns whether a variable with the name `$name` exists.
/// @param {String} $name - The name of the variable to check.
/// @return {Boolean} - Whether a variable with the name `$name` exists.
///
/// @example scss - Usage
///   @debug k-meta-variable-exists( "foo" ); // => true
@function k-meta-variable-exists( $name ) {
    @return variable-exists( $name );
}

/// Checks whether `$value` is a <number> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a number.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/number
///
/// @example scss - Usage
///   @debug k-meta-is-number( 1 ); // => true
///   @debug k-meta-is-number( "foo" ); // => false
@function k-meta-is-number( $value ) {
    @return k-meta-type-of( $value ) == "number";
}

/// Checks whether `$value` is a <integer> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a integer.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/integer
///
/// @example scss - Usage
///   @debug k-meta-is-integer( 1 ); // => true
///   @debug k-meta-is-integer( 1.5 ); // => false
@function k-meta-is-integer( $value ) {
    @return k-meta-is-number( $value ) and k-math-round( $value ) == $value;
}

/// Checks whether `$value` is a <time> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a time.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/time
///
/// @example scss - Usage
///   @debug k-meta-is-time( 1s ); // => true
///   @debug k-meta-is-time( 1 ); // => false
@function k-meta-is-time( $value ) {
    @return k-meta-is-number( $value ) and k-string-index( "ms" "s", k-math-unit( $value ) ) != null;
}

/// Checks whether `$value` is a valid duration period.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a duration.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/time
///
/// @example scss - Usage
///   @debug k-meta-is-duration( 1s ); // => true
///   @debug k-meta-is-duration( 1 ); // => false
@function k-meta-is-duration( $value ) {
    @return k-meta-is-time( $value );
}

/// Checks whether `$value` is a <angle> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a angle.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/angle
///
/// @example scss - Usage
///   @debug k-meta-is-angle( 1deg ); // => true
///   @debug k-meta-is-angle( 1 ); // => false
@function k-meta-is-angle( $value ) {
    @return k-meta-is-number( $value ) and k-string-index( "deg" "rad" "grad" "turn", k-math-unit( $value ) ) != null;
}

/// Checks whether `$value` is a <frequency> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a frequency.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/frequency
///
/// @example scss - Usage
///   @debug k-meta-is-frequency( 1Hz ); // => true
///   @debug k-meta-is-frequency( 1 ); // => false
@function k-meta-is-frequency( $value ) {
    @return k-meta-is-number( $value ) and k-string-index( "Hz" "kHz", k-math-unit( $value ) ) != null;
}

/// Checks whether `$value` is a relative <length> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a relative length.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/length#relative_length_units_based_on_font
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/length#relative_length_units_based_on_viewport
///
/// @example scss - Usage
///   @debug k-meta-is-relative-length( 1em ); // => true
///   @debug k-meta-is-relative-length( 1ch ); // => true
///   @debug k-meta-is-relative-length( 1 ); // => false
@function k-meta-is-relative-length( $value ) {
    @return k-meta-is-number( $value ) and k-string-index( "em" "ex" "ch" "rem" "vw" "vh" "vmin" "vmax", k-math-unit( $value ) ) != null;
}

/// Checks whether `$value` is an absolute <length> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is an absolute length.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/length#absolute_length_units
///
/// @example scss - Usage
///   @debug k-meta-is-absolute-length( 1cm ); // => true
///   @debug k-meta-is-absolute-length( 1 ); // => false
@function k-meta-is-absolute-length( $value ) {
    @return k-meta-is-number( $value ) and k-string-index( "cm" "mm" "in" "px" "pt" "pc", k-math-unit( $value ) ) != null;
}

/// Checks whether `$value` is a <percentage> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a percentage.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/percentage
///
/// @example scss - Usage
///   @debug k-meta-is-percentage( 1% ); // => true
///   @debug k-meta-is-percentage( 1 ); // => false
@function k-meta-is-percentage( $value ) {
    @return k-meta-is-number( $value ) and k-math-unit( $value ) == "%";
}

/// Checks whether `$value` is a <length> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a length.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/length
///
/// @example scss - Usage
///   @debug k-meta-is-length( 1em ); // => true
///   @debug k-meta-is-length( 1cm ); // => true
///   @debug k-meta-is-length( 1 ); // => false
@function k-meta-is-length( $value ) {
    @return k-meta-is-relative-length( $value ) or k-meta-is-absolute-length( $value );
}

/// Checks whether `$value` is a <resolution> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a resolution.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/resolution
///
/// @example scss - Usage
///   @debug k-meta-is-resolution( 1dpi ); // => true
///   @debug k-meta-is-resolution( 1 ); // => false
@function k-meta-is-resolution( $value ) {
    @return k-meta-is-number( $value ) and k-string-index( "dpi" "dpcm" "dppx", k-math-unit( $value ) ) != null;
}

/// Checks whether `$value` is a <position> CSS data type.
/// @param {Any} $value - The value to check.
/// @return {Boolean} - Whether `$value` is a position.
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/position
///
/// @example scss - Usage
///   @debug k-meta-is-position( center ); // => true
@function k-meta-is-position( $value ) {
    @return k-meta-is-length( $value ) or k-meta-is-percentage( $value ) or k-string-index( "top" "right" "bottom" "left" "center", $value ) != null;
}

// #endregion
// #region @import "./_string.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/_string.import.scss
$svg-escaped-characters: (
    ("%", "%25"),
    ("<", "%3c"),
    (">", "%3e"),
    ("#", "%23"),
    ("(", "%28"),
    (")", "%29")
) !default;

/// Returns the first index of `$substring` in `$string`, or `null` if `$string` doesn’t contain `$substring`.
/// @param {String} $string - The string to process.
/// @param {String} $substring - The substring to look for.
/// @return {Number} - The first index of `$substring` in `$string`, or `null` if `$string` doesn’t contain `$substring`.
///
/// @example scss - Usage
///   @debug k-string-index( "foo bar", "bar" ); // => 5
@function k-string-index( $string, $substring ) {
    @return str-index( $string, $substring );
}

/// Returns a copy of `$string` with `$insert` inserted at `$index`.
/// @param {String} $string - The string to process.
/// @param {String} $insert - The string to insert.
/// @param {Number} $index - The index at which to insert `$insert`.
/// @return {String} - The resulting string.
///
/// @example scss - Usage
///   @debug k-string-insert( "foo bar", "baz", 5 ); // => "foo baz bar"
@function k-string-insert( $string, $insert, $index ) {
    @return str-insert( $string, $insert, $index );
}

/// Returns the length of `$string`.
/// @param {String} $string - The string to process.
/// @return {Number} - The length of `$string`.
///
/// @example scss - Usage
///   @debug k-string-length( "foo bar" ); // => 7
@function k-string-length( $string ) {
    @return str-length( $string );
}

/// Returns a copy of `$string` with quotes added.
/// @param {String} $string - The string to process.
/// @return {String} - The resulting string.
///
/// @example scss - Usage
///   @debug k-string-quote( "foo bar" ); // => "foo bar"
@function k-string-quote( $string ) {
    @return quote( $string );
}

/// Returns a copy of `$string` with all occurrences of `$search`
/// replaced by `$replace`.
/// @param {String} $string - The string to process.
/// @param {String} $search - The substring to look for.
/// @param {String} $replace - The replacement string.
/// @return {String} - The resulting string.
///
/// @link https://www.sassmeister.com/gist/1b4f2da5527830088e4d
///
/// @example scss - Usage
///   @debug k-string-replace( "foo bar", "bar", "baz" ); // => "foo baz"
@function k-string-replace( $string, $search, $replace: "" ) {
    @if k-meta-type-of( $string ) == number {
        $string: $string + "";
    }

    $index: k-string-index( $string, $search );

    @if $index {
        @return k-string-slice( $string, 1, $index - 1 ) + $replace + k-string-replace( k-string-slice( $string, $index + k-string-length( $search ) ), $search, $replace );
    }

    @return $string;
}

/// Returns a substring of `$string` starting at `$start-at` and ending at `$end-at`.
/// @param {String} $string - The string to process.
/// @param {Number} $start-at - The index at which to start the substring.
/// @param {Number} $end-at - The index at which to end the substring.
/// @return {String} - The resulting string.
///
/// @example scss - Usage
///   @debug k-string-slice( "foo bar", 5 ); // => "bar"
@function k-string-slice( $string, $start-at, $end-at: -1 ) {
    @return str-slice( $string, $start-at, $end-at );
}

/// Returns a copy of `$string` with all uppercase letters converted to lowercase.
/// @param {String} $string - The string to process.
/// @return {String} - The resulting string.
///
/// @example scss - Usage
///   @debug k-string-to-lower-case( "FOO BAR" ); // => "foo bar"
@function k-string-to-lower-case( $string ) {
    @return to-lower-case( $string );
}

/// Returns a copy of `$string` with all lowercase letters converted to uppercase.
/// @param {String} $string - The string to process.
/// @return {String} - The resulting string.
///
/// @example scss - Usage
///   @debug k-string-to-upper-case( "foo bar" ); // => "FOO BAR"
@function k-string-to-upper-case( $string ) {
    @return to-upper-case( $string );
}

/// Returns a unique identifier.
/// @return {String} - The unique identifier.
///
/// @example scss - Usage
///   @debug k-string-unique-id(); // => UNIQUE_ID
@function k-string-unique-id() {
    @return unique-id();
}

/// Returns a copy of `$string` with quotes removed.
/// @param {String} $string - The string to process.
/// @return {String} - The resulting string.
///
/// @example scss - Usage
///   @debug k-string-unquote( "foo bar" ); // => foo bar
@function k-string-unquote( $string ) {
    @return unquote( $string );
}


// See https://www.sassmeister.com/gist/1b4f2da5527830088e4d
@function str-replace($string, $search, $replace: "") {
    $index: k-string-index($string, $search);

    @if $index {
        @return k-string-slice($string, 1, $index - 1) + $replace + str-replace(k-string-slice($string, $index + k-string-length($search)), $search, $replace);
    }

    @return $string;
}

// See https://codepen.io/kevinweber/pen/dXWoRw
@function escape-svg($string) {
    @if k-string-index($string, "data:image/svg+xml") {
        @each $char, $encoded in $svg-escaped-characters {
            // Do not escape the url brackets
            @if k-string-index($string, "url(") == 1 {
                $string: url("#{str-replace(k-string-slice($string, 6, -3), $char, $encoded)}");
            } @else {
                $string: str-replace($string, $char, $encoded);
            }
        }
    }

    @return $string;
}

// #endregion

// #endregion

// #endregion
// #region @import "./_variables.scss"; -> scss/_variables.scss
// #region @import "@progress/kendo-theme-core/scss/color-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/index.import.scss
// #region @import "./_functions.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/_functions.import.scss
// #region @import "./_palettes.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/_palettes.scss
/// Color palettes to be used in the Kendo UI themes.
/// @access private
/// @type Record<String, ColorMap>
/// @prop {ColorMap} neutral - The neutral palette
/// @prop {ColorMap} marsala - The marsala palette
/// @prop {ColorMap} bootstrapGray - The Bootstrap gray palette
/// @prop {ColorMap} bootstrapBlue - The Bootstrap blue palette
/// @prop {ColorMap} bootstrapIndigo - The Bootstrap indigo palette
/// @prop {ColorMap} bootstrapPurple - The Bootstrap purple palette
/// @prop {ColorMap} bootstrapPink - The Bootstrap pink palette
/// @prop {ColorMap} bootstrapRed - The Bootstrap red palette
/// @prop {ColorMap} bootstrapOrange - The Bootstrap orange palette
/// @prop {ColorMap} bootstrapYellow - The Bootstrap yellow palette
/// @prop {ColorMap} bootstrapGreen - The Bootstrap green palette
/// @prop {ColorMap} bootstrapTeal - The Bootstrap teal palette
/// @prop {ColorMap} bootstrapCyan - The Bootstrap cyan palette
/// @prop {ColorMap} fluentNeutral - The Fluent neutral palette
/// @prop {ColorMap} materialGray - The Material gray palette
/// @prop {ColorMap} materialBlueGray - The Material blue gray palette
/// @prop {ColorMap} materialRed - The Material red palette
/// @prop {ColorMap} materialPink - The Material pink palette
/// @prop {ColorMap} materialPurple - The Material purple palette
/// @prop {ColorMap} materialDeepPurple - The Material deep purple palette
/// @prop {ColorMap} materialIndigo - The Material indigo palette
/// @prop {ColorMap} materialBlue - The Material blue palette
/// @prop {ColorMap} materialLightBlue - The Material light blue palette
/// @prop {ColorMap} materialCyan - The Material cyan palette
/// @prop {ColorMap} materialTeal - The Material teal palette
/// @prop {ColorMap} materialGreen - The Material green palette
/// @prop {ColorMap} materialLightGreen - The Material light green palette
/// @prop {ColorMap} materialLime - The Material lime palette
/// @prop {ColorMap} materialYellow - The Material yellow palette
/// @prop {ColorMap} materialAmber - The Material amber palette
/// @prop {ColorMap} materialOrange - The Material orange palette
/// @prop {ColorMap} materialDeepOrange - The Material deep orange palette
/// @prop {ColorMap} materialBrown - The Material brown palette
/// @prop {ColorMap} primerGray - The Primer gray palette
/// @prop {ColorMap} primerBlue - The Primer blue palette
/// @prop {ColorMap} primerGreen - The Primer green palette
/// @prop {ColorMap} primerYellow - The Primer yellow palette
/// @prop {ColorMap} primerOrange - The Primer orange palette
/// @prop {ColorMap} primerRed - The Primer red palette
/// @prop {ColorMap} primerPurple - The Primer purple palette
/// @prop {ColorMap} primerPink - The Primer pink palette
/// @prop {ColorMap} primerCoral - The Primer coral palette
/// @prop {ColorMap} tailwindNeutral - The Tailwind neutral palette
/// @prop {ColorMap} tailwindSlate - The Tailwind slate palette
/// @prop {ColorMap} tailwindGray - The Tailwind gray palette
/// @prop {ColorMap} tailwindZinc - The Tailwind zinc palette
/// @prop {ColorMap} tailwindStone - The Tailwind stone palette
/// @prop {ColorMap} tailwindRed - The Tailwind red palette
/// @prop {ColorMap} tailwindOrange - The Tailwind orange palette
/// @prop {ColorMap} tailwindAmber - The Tailwind amber palette
/// @prop {ColorMap} tailwindYellow - The Tailwind yellow palette
/// @prop {ColorMap} tailwindLime - The Tailwind lime palette
/// @prop {ColorMap} tailwindGreen - The Tailwind green palette
/// @prop {ColorMap} tailwindEmerald - The Tailwind emerald palette
/// @prop {ColorMap} tailwindTeal - The Tailwind teal palette
/// @prop {ColorMap} tailwindCyan - The Tailwind cyan palette
/// @prop {ColorMap} tailwindSky - The Tailwind sky palette
/// @prop {ColorMap} tailwindBlue - The Tailwind blue palette
/// @prop {ColorMap} tailwindIndigo - The Tailwind indigo palette
/// @prop {ColorMap} tailwindViolet - The Tailwind violet palette
/// @prop {ColorMap} tailwindPurple - The Tailwind purple palette
/// @prop {ColorMap} tailwindFuchsia - The Tailwind fuchsia palette
/// @prop {ColorMap} tailwindPink - The Tailwind pink palette
/// @prop {ColorMap} tailwindRose - The Tailwind rose palette
///
/// @group color-system
$kendo-palettes: (

    // Kendo
    neutral: (
        0: #ffffff,
        50: #f8f8f8,
        100: #ededed,
        200: #d6d6d6,
        300: #b7b7b7,
        400: #949494,
        500: #767676,
        600: #5f5f5f,
        700: #494949,
        800: #373737,
        900: #282828,
        1000: #000000
    ),
    marsala: (
        0: #ffffff,
        50: #faf0f2,
        100: #f3dde0,
        200: #e197a3,
        300: #c54e69,
        400: #8b3548,
        500: #622331,
        600: #551d2a,
        700: #441620,
        800: #340f17,
        900: #23080e,
        1000: #000000
    ),


    // Bootstrap
    bootstrapGray: (
        0: #ffffff,
        100: #f8f9fa,
        200: #e9ecef,
        300: #dee2e6,
        400: #ced4da,
        500: #adb5bd,
        600: #6c757d,
        700: #495057,
        800: #343a40,
        900: #212529,
        1000: #000000
    ),
    bootstrapBlue: (
        0: #ffffff,
        100: #cfe2ff,
        200: #9ec5fe,
        300: #6ea8fe,
        400: #3d8bfd,
        500: #0d6efd,
        600: #0a58ca,
        700: #084298,
        800: #052c65,
        900: #031633,
        1000: #000000
    ),
    bootstrapIndigo: (
        0: #ffffff,
        100: #e0cffc,
        200: #c29ffa,
        300: #a370f7,
        400: #8540f5,
        500: #6610f2,
        600: #520dc2,
        700: #3d0a91,
        800: #290661,
        900: #140330,
        1000: #000000
    ),
    bootstrapPurple: (
        0: #ffffff,
        100: #e2d9f3,
        200: #c5b3e6,
        300: #a98eda,
        400: #8c68cd,
        500: #6f42c1,
        600: #59359a,
        700: #432874,
        800: #2c1a4d,
        900: #160d27,
        1000: #000000
    ),
    bootstrapPink: (
        0: #ffffff,
        100: #f7d6e6,
        200: #efadce,
        300: #e685b5,
        400: #de5c9d,
        500: #d63384,
        600: #ab296a,
        700: #801f4f,
        800: #561435,
        900: #2b0a1a,
        1000: #000000
    ),
    bootstrapRed: (
        0: #ffffff,
        100: #f8d7da,
        200: #f1aeb5,
        300: #ea868f,
        400: #e35d6a,
        500: #dc3545,
        600: #b02a37,
        700: #842029,
        800: #58151c,
        900: #2c0b0e,
        1000: #000000
    ),
    bootstrapOrange: (
        0: #ffffff,
        100: #ffe5d0,
        200: #fecba1,
        300: #feb272,
        400: #fd9843,
        500: #fd7e14,
        600: #ca6510,
        700: #984c0c,
        800: #653208,
        900: #331904,
        1000: #000000
    ),
    bootstrapYellow: (
        0: #ffffff,
        100: #fff3cd,
        200: #ffe69c,
        300: #ffda6a,
        400: #ffcd39,
        500: #ffc107,
        600: #cc9a06,
        700: #997404,
        800: #664d03,
        900: #332701,
        1000: #000000
    ),
    bootstrapGreen: (
        0: #ffffff,
        100: #d1e7dd,
        200: #a3cfbb,
        300: #75b798,
        400: #479f76,
        500: #198754,
        600: #146c43,
        700: #0f5132,
        800: #0a3622,
        900: #051b11,
        1000: #000000
    ),
    bootstrapTeal: (
        0: #ffffff,
        100: #d2f4ea,
        200: #a6e9d5,
        300: #79dfc1,
        400: #4dd4ac,
        500: #20c997,
        600: #1aa179,
        700: #13795b,
        800: #0d503c,
        900: #06281e,
        1000: #000000
    ),
    bootstrapCyan: (
        0: #ffffff,
        100: #cff4fc,
        200: #9eeaf9,
        300: #6edff6,
        400: #3dd5f3,
        500: #0dcaf0,
        600: #0aa2c0,
        700: #087990,
        800: #055160,
        900: #032830,
        1000: #000000
    ),


    // Fluent
    fluentNeutral: (
        0: #ffffff,
        50: #faf9f8,
        100: #edebe9,
        150: #e1dfdd,
        200: #d2d0ce,
        250: #c8c6c4,
        300: #bdbbb8,
        350: #b3b0ad,
        400: #a19f9d,
        450: #8a8886,
        500: #797775,
        550: #605e5c,
        600: #484644,
        650: #3b3a39,
        700: #323130,
        750: #292827,
        800: #201f1e,
        850: #1b1a19,
        900: #161514,
        950: #11100f,
        1000: #000000
    ),


    // Material
    materialGray: (
        0: #ffffff,
        50: #fafafa,
        100: #f5f5f5,
        200: #eeeeee,
        300: #e0e0e0,
        400: #bdbdbd,
        500: #9e9e9e,
        600: #757575,
        700: #616161,
        800: #424242,
        900: #212121,
        1000: #000000
    ),
    materialBlueGray: (
        0: #ffffff,
        50: #eceff1,
        100: #cfd8dc,
        200: #b0bec5,
        300: #90a4ae,
        400: #78909c,
        500: #607d8b,
        600: #546e7a,
        700: #455a64,
        800: #37474f,
        900: #263238,
        1000: #000000
    ),
    materialRed: (
        0: #ffffff,
        50: #ffebee,
        100: #ffcdd2,
        200: #ef9a9a,
        300: #e57373,
        400: #ef5350,
        500: #f44336,
        600: #e53935,
        700: #d32f2f,
        800: #c62828,
        900: #b71c1c,
        1000: #000000
    ),
    materialPink: (
        0: #ffffff,
        50: #fce4ec,
        100: #f8bbd0,
        200: #f48fb1,
        300: #f06292,
        400: #ec407a,
        // 500 was #e91e63, but changed for better contrast against white
        500: #e51a5f,
        600: #d81b60,
        700: #c2185b,
        800: #ad1457,
        900: #880e4f,
        1000: #000000
    ),
    materialPurple: (
        0: #ffffff,
        50: #f3e5f5,
        100: #e1bee7,
        200: #ce93d8,
        300: #ba68c8,
        400: #ab47bc,
        500: #9c27b0,
        600: #8e24aa,
        700: #7b1fa2,
        800: #6a1b9a,
        900: #4a148c,
        1000: #000000
    ),
    materialDeepPurple: (
        0: #ffffff,
        50: #ede7f6,
        100: #d1c4e9,
        200: #b39ddb,
        300: #9575cd,
        400: #7e57c2,
        500: #673ab7,
        600: #5e35b1,
        700: #512da8,
        800: #4527a0,
        900: #311b92,
        1000: #000000
    ),
    materialIndigo: (
        0: #ffffff,
        50: #e8eaf6,
        100: #c5cae9,
        200: #9fa8da,
        300: #7986cb,
        400: #5c6bc0,
        500: #3f51b5,
        600: #3949ab,
        700: #303f9f,
        800: #283593,
        900: #1a237e,
        1000: #000000
    ),
    materialBlue: (
        0: #ffffff,
        50: #e3f2fd,
        100: #bbdefb,
        200: #90caf9,
        300: #64b5f6,
        400: #42a5f5,
        500: #2196f3,
        600: #1e88e5,
        700: #1976d2,
        800: #1565c0,
        900: #0d47a1,
        1000: #000000
    ),
    materialLightBlue: (
        0: #ffffff,
        50: #e1f5fe,
        100: #b3e5fc,
        200: #81d4fa,
        300: #4fc3f7,
        400: #29b6f6,
        500: #03a9f4,
        600: #039be5,
        700: #0288d1,
        800: #0277bd,
        900: #01579b,
        1000: #000000
    ),
    materialCyan: (
        0: #ffffff,
        50: #e0f7fa,
        100: #b2ebf2,
        200: #80deea,
        300: #4dd0e1,
        400: #26c6da,
        500: #00bcd4,
        600: #00acc1,
        700: #0097a7,
        800: #00838f,
        900: #006064,
        1000: #000000
    ),
    materialTeal: (
        0: #ffffff,
        50: #e0f2f1,
        100: #b2dfdb,
        200: #80cbc4,
        300: #4db6ac,
        400: #26a69a,
        500: #009688,
        600: #00897b,
        700: #00796b,
        800: #00695c,
        900: #004d40,
        1000: #000000
    ),
    materialGreen: (
        0: #ffffff,
        50: #e8f5e9,
        100: #c8e6c9,
        200: #a5d6a7,
        300: #81c784,
        400: #66bb6a,
        500: #4caf50,
        600: #43a047,
        700: #388e3c,
        800: #2e7d32,
        900: #1b5e20,
        1000: #000000
    ),
    materialLightGreen: (
        0: #ffffff,
        50: #f1f8e9,
        100: #dcedc8,
        200: #c5e1a5,
        300: #aed581,
        400: #9ccc65,
        500: #8bc34a,
        600: #7cb342,
        700: #689f38,
        800: #558b2f,
        900: #33691e,
        1000: #000000
    ),
    materialLime: (
        0: #ffffff,
        50: #f9fbe7,
        100: #f0f4c3,
        200: #e6ee9c,
        300: #dce775,
        400: #d4e157,
        500: #cddc39,
        600: #c0ca33,
        700: #afb42b,
        800: #9e9d24,
        900: #827717,
        1000: #000000
    ),
    materialYellow: (
        0: #ffffff,
        50: #fffde7,
        100: #fff9c4,
        200: #fff59d,
        300: #fff176,
        400: #ffee58,
        500: #ffeb3b,
        600: #fdd835,
        700: #fbc02d,
        800: #f9a825,
        900: #f57f17,
        1000: #000000
    ),
    materialAmber: (
        0: #ffffff,
        50: #fff8e1,
        100: #ffecb3,
        200: #ffe082,
        300: #ffd54f,
        400: #ffca28,
        500: #ffc107,
        600: #ffb300,
        700: #ffa000,
        800: #ff8f00,
        900: #ff6f00,
        1000: #000000
    ),
    materialOrange: (
        0: #ffffff,
        50: #fff3e0,
        100: #ffe0b2,
        200: #ffcc80,
        300: #ffb74d,
        400: #ffa726,
        500: #ff9800,
        600: #fb8c00,
        700: #f57c00,
        800: #ef6c00,
        900: #e65100,
        1000: #000000
    ),
    materialDeepOrange: (
        0: #ffffff,
        50: #fbe9e7,
        100: #ffccbc,
        200: #ffab91,
        300: #ff8a65,
        400: #ff7043,
        500: #ff5722,
        600: #f4511e,
        700: #e64a19,
        800: #d84315,
        900: #bf360c,
        1000: #000000
    ),
    materialBrown: (
        0: #ffffff,
        50: #efebe9,
        100: #d7ccc8,
        200: #bcaaa4,
        300: #a1887f,
        400: #8d6e63,
        500: #795548,
        600: #6d4c41,
        700: #5d4037,
        800: #4e342e,
        900: #3e2723,
        1000: #000000
    ),


    // Primer
    primerGray: (
        0: #ffffff,
        50: #f6f8fa,
        100: #eaeef2,
        200: #d0d7de,
        300: #afb8c1,
        400: #8c959f,
        500: #6e7781,
        600: #57606a,
        700: #424a53,
        800: #32383f,
        900: #24292f,
        1000: #000000
    ),
    primerBlue: (
        0: #ffffff,
        50: #ddf4ff,
        100: #b6e3ff,
        200: #80ccff,
        300: #54aeff,
        400: #218bff,
        500: #0969da,
        600: #0550ae,
        700: #033d8b,
        800: #0a3069,
        900: #002155,
        1000: #000000
    ),
    primerGreen: (
        0: #ffffff,
        50: #dafbe1,
        100: #aceebb,
        200: #6fdd8b,
        300: #4ac26b,
        400: #2da44e,
        500: #1a7f37,
        600: #116329,
        700: #044f1e,
        800: #003d16,
        900: #002d11,
        1000: #000000
    ),
    primerYellow: (
        0: #ffffff,
        50: #fff8c5,
        100: #fae17d,
        200: #eac54f,
        300: #d4a72c,
        400: #bf8700,
        500: #9a6700,
        600: #7d4e00,
        700: #633c01,
        800: #4d2d00,
        900: #3b2300,
        1000: #000000
    ),
    primerOrange: (
        0: #ffffff,
        50: #fff1e5,
        100: #ffd8b5,
        200: #ffb77c,
        300: #fb8f44,
        400: #e16f24,
        500: #bc4c00,
        600: #953800,
        700: #762c00,
        800: #5c2200,
        900: #471700,
        1000: #000000
    ),
    primerRed: (
        0: #ffffff,
        50: #ffebe9,
        100: #ffcecb,
        200: #ffaba8,
        300: #ff8182,
        400: #fa4549,
        500: #cf222e,
        600: #a40e26,
        700: #82071e,
        800: #660018,
        900: #4c0014,
        1000: #000000
    ),
    primerPurple: (
        0: #ffffff,
        50: #fbefff,
        100: #ecd8ff,
        200: #d8b9ff,
        300: #c297ff,
        400: #a475f9,
        500: #8250df,
        600: #6639ba,
        700: #512a97,
        800: #3e1f79,
        900: #2e1461,
        1000: #000000
    ),
    primerPink: (
        0: #ffffff,
        50: #ffeff7,
        100: #ffd3eb,
        200: #ffadda,
        300: #ff80c8,
        400: #e85aad,
        500: #bf3989,
        600: #99286e,
        700: #772057,
        800: #611347,
        900: #4d0336,
        1000: #000000
    ),
    primerCoral: (
        0: #ffffff,
        50: #fff0eb,
        100: #ffd6cc,
        200: #ffb4a1,
        300: #fd8c73,
        400: #ec6547,
        500: #c4432b,
        600: #9e2f1c,
        700: #801f0f,
        800: #691105,
        900: #510901,
        1000: #000000
    ),


    // Tailwind
    tailwindNeutral: (
        0: #ffffff,
        50: #fafafa,
        100: #f5f5f5,
        200: #e5e5e5,
        300: #d4d4d4,
        400: #a3a3a3,
        500: #737373,
        600: #525252,
        700: #404040,
        800: #262626,
        900: #171717,
        1000: #000000
    ),
    tailwindSlate: (
        0: #ffffff,
        50: #f8fafc,
        100: #f1f5f9,
        200: #e2e8f0,
        300: #cbd5e1,
        400: #94a3b8,
        500: #64748b,
        600: #475569,
        700: #334155,
        800: #1e293b,
        900: #0f172a,
        1000: #000000
    ),
    tailwindGray: (
        0: #ffffff,
        50: #f9fafb,
        100: #f3f4f6,
        200: #e5e7eb,
        300: #d1d5db,
        400: #9ca3af,
        500: #6b7280,
        600: #4b5563,
        700: #374151,
        800: #1f2937,
        900: #111827,
        1000: #000000
    ),
    tailwindZinc: (
        0: #ffffff,
        50: #fafafa,
        100: #f4f4f5,
        200: #e4e4e7,
        300: #d4d4d8,
        400: #a1a1aa,
        500: #71717a,
        600: #52525b,
        700: #3f3f46,
        800: #27272a,
        900: #18181b,
        1000: #000000
    ),
    tailwindStone: (
        0: #ffffff,
        50: #fafaf9,
        100: #f5f5f4,
        200: #e7e5e4,
        300: #d6d3d1,
        400: #a8a29e,
        500: #78716c,
        600: #57534e,
        700: #44403c,
        800: #292524,
        900: #1c1917,
        1000: #000000
    ),
    tailwindRed: (
        0: #ffffff,
        50: #fef2f2,
        100: #fee2e2,
        200: #fecaca,
        300: #fca5a5,
        400: #f87171,
        500: #ef4444,
        600: #dc2626,
        700: #b91c1c,
        800: #991b1b,
        900: #7f1d1d,
        1000: #000000
    ),
    tailwindOrange: (
        0: #ffffff,
        50: #fff7ed,
        100: #ffedd5,
        200: #fed7aa,
        300: #fdba74,
        400: #fb923c,
        500: #f97316,
        600: #ea580c,
        700: #c2410c,
        800: #9a3412,
        900: #7c2d12,
        1000: #000000
    ),
    tailwindAmber: (
        0: #ffffff,
        50: #fffbeb,
        100: #fef3c7,
        200: #fde68a,
        300: #fcd34d,
        400: #fbbf24,
        500: #f59e0b,
        600: #d97706,
        700: #b45309,
        800: #92400e,
        900: #78350f,
        1000: #000000
    ),
    tailwindYellow: (
        0: #ffffff,
        50: #fefce8,
        100: #fef9c3,
        200: #fef08a,
        300: #fde047,
        400: #facc15,
        500: #eab308,
        600: #ca8a04,
        700: #a16207,
        800: #854d0e,
        900: #713f12,
        1000: #000000
    ),
    tailwindLime: (
        0: #ffffff,
        50: #f7fee7,
        100: #ecfccb,
        200: #d9f99d,
        300: #bef264,
        400: #a3e635,
        500: #84cc16,
        600: #65a30d,
        700: #4d7c0f,
        800: #3f6212,
        900: #365314,
        1000: #000000
    ),
    tailwindGreen: (
        0: #ffffff,
        50: #f0fdf4,
        100: #dcfce7,
        200: #bbf7d0,
        300: #86efac,
        400: #4ade80,
        500: #22c55e,
        600: #16a34a,
        700: #15803d,
        800: #166534,
        900: #14532d,
        1000: #000000
    ),
    tailwindEmerald: (
        0: #ffffff,
        50: #ecfdf5,
        100: #d1fae5,
        200: #a7f3d0,
        300: #6ee7b7,
        400: #34d399,
        500: #10b981,
        600: #059669,
        700: #047857,
        800: #065f46,
        900: #064e3b,
        1000: #000000
    ),
    tailwindTeal: (
        0: #ffffff,
        50: #f0fdfa,
        100: #ccfbf1,
        200: #99f6e4,
        300: #5eead4,
        400: #2dd4bf,
        500: #14b8a6,
        600: #0d9488,
        700: #0f766e,
        800: #115e59,
        900: #134e4a,
        1000: #000000
    ),
    tailwindCyan: (
        0: #ffffff,
        50: #ecfeff,
        100: #cffafe,
        200: #a5f3fc,
        300: #67e8f9,
        400: #22d3ee,
        500: #06b6d4,
        600: #0891b2,
        700: #0e7490,
        800: #155e75,
        900: #164e63,
        1000: #000000
    ),
    tailwindSky: (
        0: #ffffff,
        50: #f0f9ff,
        100: #e0f2fe,
        200: #bae6fd,
        300: #7dd3fc,
        400: #38bdf8,
        500: #0ea5e9,
        600: #0284c7,
        700: #0369a1,
        800: #075985,
        900: #0c4a6e,
        1000: #000000
    ),
    tailwindBlue: (
        0: #ffffff,
        50: #eff6ff,
        100: #dbeafe,
        200: #bfdbfe,
        300: #93c5fd,
        400: #60a5fa,
        500: #3b82f6,
        600: #2563eb,
        700: #1d4ed8,
        800: #1e40af,
        900: #1e3a8a,
        1000: #000000
    ),
    tailwindIndigo: (
        0: #ffffff,
        50: #eef2ff,
        100: #e0e7ff,
        200: #c7d2fe,
        300: #a5b4fc,
        400: #818cf8,
        500: #6366f1,
        600: #4f46e5,
        700: #4338ca,
        800: #3730a3,
        900: #312e81,
        1000: #000000
    ),
    tailwindViolet: (
        0: #ffffff,
        50: #f5f3ff,
        100: #ede9fe,
        200: #ddd6fe,
        300: #c4b5fd,
        400: #a78bfa,
        500: #8b5cf6,
        600: #7c3aed,
        700: #6d28d9,
        800: #5b21b6,
        900: #4c1d95,
        1000: #000000
    ),
    tailwindPurple: (
        0: #ffffff,
        50: #faf5ff,
        100: #f3e8ff,
        200: #e9d5ff,
        300: #d8b4fe,
        400: #c084fc,
        500: #a855f7,
        600: #9333ea,
        700: #7e22ce,
        800: #6b21a8,
        900: #581c87,
        1000: #000000
    ),
    tailwindFuchsia: (
        0: #ffffff,
        50: #fdf4ff,
        100: #fae8ff,
        200: #f5d0fe,
        300: #f0abfc,
        400: #e879f9,
        500: #d946ef,
        600: #c026d3,
        700: #a21caf,
        800: #86198f,
        900: #701a75,
        1000: #000000
    ),
    tailwindPink: (
        0: #ffffff,
        50: #fdf2f8,
        100: #fce7f3,
        200: #fbcfe8,
        300: #f9a8d4,
        400: #f472b6,
        500: #ec4899,
        600: #db2777,
        700: #be185d,
        800: #9d174d,
        900: #831843,
        1000: #000000
    ),
    tailwindRose: (
        0: #ffffff,
        50: #fff1f2,
        100: #ffe4e6,
        200: #fecdd3,
        300: #fda4af,
        400: #fb7185,
        500: #f43f5e,
        600: #e11d48,
        700: #be123c,
        800: #9f1239,
        900: #881337,
        1000: #000000
    )

) !default;

// #endregion

@function k-generate-theme-variant( $variant, $matrix, $src-palette-name ) {
    $result: ();

    @each $ui-state, $indices in $matrix {
        $prefix: if( $ui-state == DEFAULT, "", "#{$ui-state}-" );
        $indices-count: k-list-length( $indices );

        $bg-prop: k-list-nth( $indices, 1 );
        $text-prop: k-list-nth( $indices, 2 );
        $border-prop: k-list-nth( $indices, 3 );
        $gradient-prop: if( $indices-count > 3, k-list-nth( $indices, 4 ), null );
        $shadow-prop: if( $indices-count > 4, k-list-nth( $indices, 5 ), null );
        $outline-prop: if( $indices-count > 5, k-list-nth( $indices, 6 ), null );

        // Take value from the palette only if it is a number
        $bg: if( k-meta-type-of( $bg-prop ) == number, k-get-theme-color( $src-palette-name, $bg-prop ), $bg-prop );
        $text: if( k-meta-type-of( $text-prop ) == number, k-get-theme-color( $src-palette-name, $text-prop ), $text-prop );
        $border: if( k-meta-type-of( $border-prop ) == number, k-get-theme-color( $src-palette-name, $border-prop ), $border-prop );
        $gradient: $gradient-prop;
        $shadow: $shadow-prop;
        $outline: $outline-prop;

        $result: k-map-merge($result, (
            #{$prefix}bg: $bg,
            #{$prefix}text: $text,
            #{$prefix}border: $border,
            #{$prefix}gradient: $gradient,
            #{$prefix}shadow: $shadow,
            #{$prefix}outline: $outline
        ));
    }

    $result: (
        #{$variant}: $result
    );

    @return $result;

};


@function k-process-variant-matrices( $theme-matrix, $palette-matrix: () ) {
    $result: ();

    // @debug $theme-matrix;
    // @debug $palette-matrix;

    @each $variant, $definition in $theme-matrix {
        $tc-index: k-string-index( $variant, "THEME_COLOR" );
        $src-palette-name: k-map-get( $definition, PALETTE );
        $matrix: k-map-remove( $definition, PALETTE );

        @if ($tc-index == null ) { // stylelint-disable-line
            $tmp-result: k-generate-theme-variant( $variant, $matrix, $src-palette-name );
            $result: k-map-merge( $result, $tmp-result);
        } @else {
            @each $color, $palette in $palette-matrix {
                $variant-name: k-string-replace( $variant, THEME_COLOR, $color);
                $palette-name: k-string-unquote($src-palette-name + "");

                @if ($palette-name == THEME_COLOR) {
                    $palette-name: k-string-replace( $palette-name, THEME_COLOR, $color );
                    $palette-name: k-map-get( $palette-matrix, $palette-name );
                }

                $tmp-result: k-generate-theme-variant( $variant-name, $matrix, $palette-name );
                $result: k-map-merge( $result, $tmp-result );
            }
        }
    }

    @return $result;
}


@function k-get-theme-palette( $name ) {
    @return k-map-get( $kendo-palettes, $name );
}

@function k-get-theme-color( $palette, $hue ) {
    @if ( k-meta-type-of( $palette ) == "map" ) {
        @return k-map-get( $palette, $hue );
    }

    @return k-map-get( k-get-theme-palette( $palette ), $hue );
}

@function k-get-theme-color-var( $name, $fallback: "inherit", $prefix: "kendo-" ) {
    @return var( --#{$prefix}#{$name}, #{$fallback} );
}

@function k-get-swatch-color( $name, $color ) {
    $map: (
        app-surface: k-color( app-surface ),
        on-app-surface: k-color( on-app-surface ),
        subtle: k-color( subtle ),
        surface: k-color( surface ),
        surface-alt: k-color( surface-alt ),
        border: k-color( border ),
        border-alt: k-color( border-alt ),
        color-subtle: k-color( #{$color}-subtle ),
        color-subtle-hover: k-color( #{$color}-subtle-hover ),
        color-subtle-active: k-color( #{$color}-subtle-active ),
        color: k-color( #{$color} ),
        color-hover: k-color( #{$color}-hover ),
        color-active: k-color( #{$color}-active ),
        color-emphasis: k-color( #{$color}-emphasis ),
        color-on-subtle: k-color( #{$color}-on-subtle ),
        on-color: k-color( on-#{$color} ),
        color-on-surface: k-color( #{$color}-on-surface ),
        on-color-disabled: color-mix(in srgb, k-color( on-#{$color} ) 46%, transparent)
    );

    @return if( k-map-has-key( $map, $name ), k-map-get( $map, $name ), $name );
};

@function k-generate-theme-variation( $theme-color, $source-palette-name, $mapping ) {
    $temp: ( );

    @each $ui-state, $indices in $mapping {
        $prefix: if( $ui-state == normal, '', '#{$ui-state}-' );

        $bg-prop: k-list-nth($indices, 1);
        $text-prop: k-list-nth($indices, 2);
        $border-prop: k-list-nth($indices, 3);

        // Take value from the palette only if it is a number
        $bg: if($kendo-enable-color-system, k-get-swatch-color( $bg-prop, $source-palette-name ), if( k-meta-type-of($bg-prop) == number, k-get-theme-color-var( #{$source-palette-name}-#{$bg-prop} ), $bg-prop ));
        $text: if($kendo-enable-color-system, k-get-swatch-color( $text-prop, $source-palette-name ), if( k-meta-type-of($text-prop) == number, k-get-theme-color-var( #{$source-palette-name}-#{$text-prop} ), $text-prop ));
        $border: if($kendo-enable-color-system, k-get-swatch-color( $border-prop, $source-palette-name ), if( k-meta-type-of($border-prop) == number, k-get-theme-color-var( #{$source-palette-name}-#{$border-prop} ), $border-prop ));


        $temp: k-map-deep-merge( $temp, (
            #{$prefix}bg: $bg,
            #{$prefix}text: $text,
            #{$prefix}border: $border
        ));

        // Add outline if provided in the map
        @if ( k-list-length($indices) > 3 ) {
            $outline-prop: k-list-nth($indices, 4);
            $outline: if($kendo-enable-color-system, k-get-swatch-color( $outline-prop, $source-palette-name ), if( k-meta-type-of($outline-prop) == number, k-get-theme-color-var( #{$source-palette-name}-#{$outline-prop} ), $outline-prop ));

            $temp: k-map-deep-merge( $temp, (
                #{$prefix}outline: $outline
            ));
        }
    }

    $map: (
        #{$theme-color}: $temp
    );

    @return $map;

};

@function k-generate-fill-mode-theme-variation( $fill-mode, $theme-color, $source-palette-name, $mapping ) {

    $map: k-generate-theme-variation( $theme-color, $source-palette-name, $mapping );

    $result: (
       #{$fill-mode}: $map
    );

    @return $result;
}

@function k-hex-to-rgb( $color ) {
    @if($color) {
        $r: k-color-red($color);
        $g: k-color-green($color);
        $b: k-color-blue($color);

        @return $r, $g, $b;
    } @else {
        @return null;
    }
}

// #endregion
// #region @import "./_mixins.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/_mixins.import.scss
@mixin k-css-vars($map) {
    @each $group, $values in $map {
        @each $key, $value in $values {
            --kendo-#{k-meta-inspect($group)}-#{$key}: #{$value};
        }
    }
}

// #endregion
// #region @import "./_swatch.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/_swatch.scss
// #region @import "./_functions.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/_functions.import.scss
// File already imported_once. Skipping output.
// #endregion

// Config
$kendo-enable-color-system: true !default;

// Colors
$_default_colors: (
    // Misc
    app-surface: #ffffff,
    on-app-surface: #3d3d3d,
    subtle: #666666,
    surface: #fafafa,
    surface-alt: #ffffff,
    border: rgba(0, 0, 0, 0.08),
    border-alt: rgba(0, 0, 0, 0.16),
    // Base
    base-subtle: #ebebeb,
    base-subtle-hover: #e0e0e0,
    base-subtle-active: #d6d6d6,
    base: #f5f5f5,
    base-hover: #ebebeb,
    base-active: #d6d6d6,
    base-emphasis: #c2c2c2,
    base-on-subtle: #3d3d3d,
    on-base: #3d3d3d,
    base-on-surface: #3d3d3d,
    // Primary
    primary-subtle: #ffeceb,
    primary-subtle-hover: #ffdedb,
    primary-subtle-active: #ffc8c4,
    primary: #ff6358,
    primary-hover: #ea5a51,
    primary-active: #d45349,
    primary-emphasis: #ff9d97,
    primary-on-subtle: #5c201c,
    on-primary: #ffffff,
    primary-on-surface: #ff6358,
    // Secondary
    secondary-subtle: #fafafa,
    secondary-subtle-hover: #f5f5f5,
    secondary-subtle-active: #ebebeb,
    secondary: #666666,
    secondary-hover: #525252,
    secondary-active: #3d3d3d,
    secondary-emphasis: #e0e0e0,
    secondary-on-subtle: #141414,
    on-secondary: #ffffff,
    secondary-on-surface: #292929,
    // Tertiary
    tertiary-subtle: #d8f1fd,
    tertiary-subtle-hover: #c5eafc,
    tertiary-subtle-active: #a3dffb,
    tertiary: #03a9f4,
    tertiary-hover: #039ae0,
    tertiary-active: #028ccb,
    tertiary-emphasis: #61c9f9,
    tertiary-on-subtle: #023f5c,
    on-tertiary: #ffffff,
    tertiary-on-surface: #028ccb,
    // Info
    info-subtle: #d2e2fb,
    info-subtle-hover: #bdd4f8,
    info-subtle-active: #80acf4,
    info: #0058e9,
    info-hover: #0052d6,
    info-active: #004ac2,
    info-emphasis: #6098f2,
    info-on-subtle: #002259,
    on-info: #ffffff,
    info-on-surface: #004ac2,
    // Success
    success-subtle: #dcf0d3,
    success-subtle-hover: #cbe9bf,
    success-subtle-active: #b7e1a5,
    success: #37b400,
    success-hover: #32a500,
    success-active: #2d9600,
    success-emphasis: #81d15f,
    success-on-subtle: #1c5a00,
    on-success: #ffffff,
    success-on-surface: #2d9600,
    // Warning
    warning-subtle: #fff4d3,
    warning-subtle-hover: #ffeebd,
    warning-subtle-active: #ffe79e,
    warning: #ffc000,
    warning-hover: #eaaf00,
    warning-active: #d49f00,
    warning-emphasis: #ffd760,
    warning-on-subtle: #5e4700,
    on-warning: #3d3d3d,
    warning-on-surface: #ffc000,
    // Error
    error-subtle: #fcddda,
    error-subtle-hover: #fbc8c3,
    error-subtle-active: #f98b80,
    error: #f31700,
    error-hover: #df1600,
    error-active: #ca1400,
    error-emphasis: #f76f60,
    error-on-subtle: #7a0c00,
    on-error: #ffffff,
    error-on-surface: #ca1400,
    // Light
    light-subtle: #fafafa,
    light-subtle-hover: #f5f5f5,
    light-subtle-active: #ebebeb,
    light: #ebebeb,
    light-hover: #e0e0e0,
    light-active: #d6d6d6,
    light-emphasis: #d6d6d6,
    light-on-subtle: #141414,
    on-light: #000000,
    light-on-surface: #e0e0e0,
    // Dark
    dark-subtle: #c2c2c2,
    dark-subtle-hover: #adadad,
    dark-subtle-active: #999999,
    dark: #3d3d3d,
    dark-hover: #292929,
    dark-active: #1f1f1f,
    dark-emphasis: #666666,
    dark-on-subtle: #1f1f1f,
    on-dark: #ffffff,
    dark-on-surface: #141414,
    // Inverse
    inverse-subtle: #c2c2c2,
    inverse-subtle-hover: #adadad,
    inverse-subtle-active: #999999,
    inverse: #3d3d3d,
    inverse-hover: #292929,
    inverse-active: #1f1f1f,
    inverse-emphasis: #666666,
    inverse-on-subtle: #1f1f1f,
    on-inverse: #ffffff,
    inverse-on-surface: #141414,
    // Series A
    series-a: #ff6358,
    series-a-bold: #bf4a42,
    series-a-bolder: #80322c,
    series-a-subtle: #ffb1ac,
    series-a-subtler: #ff8a82,
    // Series B
    series-b: #ffe162,
    series-b-bold: #bfa94a,
    series-b-bolder: #807131,
    series-b-subtle: #fff0b1,
    series-b-subtler: #ffe989,
    // Series C
    series-c: #4cd180,
    series-c-bold: #399d60,
    series-c-bolder: #266940,
    series-c-subtle: #a6e8c0,
    series-c-subtler: #79dda0,
    // Series D
    series-d: #4b5ffa,
    series-d-bold: #3847bc,
    series-d-bolder: #26307d,
    series-d-subtle: #a5affd,
    series-d-subtler: #7887fb,
    // Series E
    series-e: #ac58ff,
    series-e-bold: #8142bf,
    series-e-bolder: #562c80,
    series-e-subtle: #d6acff,
    series-e-subtler: #c182ff,
    // Series F
    series-f: #ff5892,
    series-f-bold: #bf426e,
    series-f-bolder: #802c49,
    series-f-subtle: #ffacc9,
    series-f-subtler: #ff82ae,
) !default;

/// The global default Colors map.
/// @group color-system
$kendo-colors: $_default-colors !default;
$kendo-colors: k-map-merge($_default-colors, $kendo-colors);

@mixin color-system--styles() {
    :root {
        @each $key, $value in $kendo-colors {
            @if($value) {
                --kendo-color-#{$key}: #{$value};
            }
        }
    }
}

// #endregion
// #region @import "./_constants.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/_constants.scss
// Color constants

/// The color white.
/// Note: you cannot change this value.
/// @type Color
/// @group color-system
$kendo-color-white: #ffffff; // stylelint-disable-line scss/dollar-variable-default

/// The color black.
/// Note: you cannot change this value.
/// @type Color
/// @group color-system
$kendo-color-black: #000000; // stylelint-disable-line scss/dollar-variable-default

/// The color transparent.
/// Note: you cannot change this value.
/// @type Color
/// @group color-system
$kendo-color-rgba-transparent: rgba(0, 0, 0, 0); // stylelint-disable-line scss/dollar-variable-default

/// A gradient that goes from transparent to black.
/// Note: you cannot change this value.
/// @type Gradient
/// @group color-system
$kendo-gradient-transparent-to-black: rgba(black, 0), black; // stylelint-disable-line scss/dollar-variable-default

/// A gradient that goes from transparent to white.
/// Note: you cannot change this value.
/// @type Gradient
/// @group color-system
$kendo-gradient-transparent-to-white: rgba(white, 0), white; // stylelint-disable-line scss/dollar-variable-default

/// A gradient that goes from black to transparent.
/// Note: you cannot change this value.
/// @type Gradient
/// @group color-system
$kendo-gradient-black-to-transparent: black, rgba(black, 0); // stylelint-disable-line scss/dollar-variable-default

/// A gradient that goes from white to transparent.
/// Note: you cannot change this value.
/// @type Gradient
/// @group color-system
$kendo-gradient-white-to-transparent: white, rgba(white, 0); // stylelint-disable-line scss/dollar-variable-default

/// A gradient that cycles through the colors of the rainbow.
/// Note: you cannot change this value.
/// @type Gradient
/// @group color-system
$kendo-gradient-rainbow: #ff0000, #ffff00, #00ff00, #00ffff, #0000ff, #ff00ff, #ff0000; // stylelint-disable-line scss/dollar-variable-default

// #endregion
// #region @import "./_swatch-legacy.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/_swatch-legacy.scss
$kendo-is-dark-theme: false !default;

// Root styles
$kendo-body-bg: null !default;
$kendo-body-text: null !default;

// Component styles
$kendo-component-bg: null !default;
$kendo-component-text: null !default;
$kendo-component-border: null !default;

// States styles
$kendo-hover-bg: null !default;
$kendo-hover-text: null !default;
$kendo-hover-border: null !default;

$kendo-selected-bg: null !default;
$kendo-selected-text: null !default;
$kendo-selected-border: null !default;

$kendo-selected-hover-bg: null !default;
$kendo-selected-hover-text: null !default;
$kendo-selected-hover-border: null !default;

$kendo-focus-outline: null !default;

$kendo-subtle-text: null !default;

// Link
$kendo-link-text: null !default;
$kendo-link-hover-text: null !default;

// Validator
$kendo-invalid-bg: null !default;
$kendo-invalid-text: null !default;
$kendo-invalid-border: null !default;
$kendo-invalid-shadow: null !default;

// Disabled Styling

/// The background color of disabled items.
$kendo-disabled-bg: null !default;
/// The text color of disabled items.
$kendo-disabled-text: null !default;
/// The border color of disabled items.
$kendo-disabled-border: null !default;
/// The opacity of disabled items.
$kendo-disabled-opacity: null !default;
/// The filter of disabled items.
$kendo-disabled-filter: null !default;

$kendo-disabled-styling: (
    bg: $kendo-disabled-bg,
    color: $kendo-disabled-text,
    border: $kendo-disabled-border,
    opacity: $kendo-disabled-opacity,
    filter: $kendo-disabled-filter
) !default;


$kendo-palettes: () !default;
$kendo-theme-colors: () !default;

@mixin color-system-styles() {
    :root {
        @include k-css-vars($kendo-palettes);
        @include k-css-vars($kendo-theme-colors);

        // Text colors
        @each $theme-color, $color-props in $kendo-theme-colors {
            $_color: k-map-get($color-props, text);

            .k-text-#{$theme-color},
            .k-color-#{$theme-color} {
                color: var(--kendo-text-#{$theme-color}, #{$_color});
            }
            .\!k-text-#{$theme-color},
            .\!k-color-#{$theme-color} {
                color: var(--kendo-text-#{$theme-color}, #{$_color}) !important; // stylelint-disable-line declaration-no-important
            }

            .k-bg-#{$theme-color} {
                background-color: var(--kendo-bg-#{$theme-color}, #{$_color});
            }
            .\!k-bg-#{$theme-color} {
                background-color: var(--kendo-bg-#{$theme-color}, #{$_color}) !important; // stylelint-disable-line declaration-no-important
            }
        }
    }
}

// #endregion
// @import "./_palettes.scss";

// #endregion

// #region @import "./spacing/index.import.scss"; -> scss/spacing/index.import.scss
// #region @import "@progress/kendo-theme-core/scss/spacing/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/spacing/index.import.scss
// #region @import "../functions/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/index.import.scss
// File already imported_once. Skipping output.
// #endregion

$_default-spacing: (
    0: 0px,
    1px: 1px,
    0.5: .125rem,
    1: .25rem,
    1.5: .375rem,
    2: .5rem,
    2.5: .625rem,
    3: .75rem,
    3.5: .875rem,
    4: 1rem,
    4.5: 1.125rem,
    5: 1.25rem,
    5.5: 1.375rem,
    6: 1.5rem,
    6.5: 1.625rem,
    7: 1.75rem,
    7.5: 1.875rem,
    8: 2rem,
    9: 2.25rem,
    10: 2.5rem,
    11: 2.75rem,
    12: 3rem,
    13: 3.25rem,
    14: 3.5rem,
    15: 3.75rem,
    16: 4rem,
    17: 4.25rem,
    18: 4.5rem,
    19: 4.75rem,
    20: 5rem,
    21: 5.25rem,
    22: 5.5rem,
    23: 5.75rem,
    24: 6rem,
    25: 7rem,
    26: 8rem,
    27: 9rem,
    28: 10rem,
    29: 11rem,
    30: 12rem
) !default;

/// The global default Spacing map.
/// @group spacing
$kendo-spacing: $_default-spacing !default;

$kendo-spacing: k-map-merge($_default-spacing, $kendo-spacing);


@function k-spacing($step) {
    $spacing: k-map-get($kendo-spacing, $step);
    $_step: k-escape-class-name( $step );
    @return var(--kendo-spacing-#{$_step}, #{$spacing});
}

// Generate a CSS variable for each value in the Spacing map
@mixin kendo-spacing--styles() {
    :root {
        @each $step, $spacing in $kendo-spacing {
            $_step: k-escape-class-name( $step );
            --kendo-spacing-#{$_step}: #{$spacing};
        }
    }
}

$kendo-sizing: k-map-merge( $kendo-spacing, (
    "auto": auto,
    "1/2": 50%,
    "1/3": 33.333333%,
    "2/3": 66.666667%,
    "1/4": 25%,
    "2/4": 50%,
    "3/4": 75%,
    "1/5": 20%,
    "2/5": 40%,
    "3/5": 60%,
    "4/5": 80%,
    "1/6": 16.666667%,
    "2/6": 33.333333%,
    "3/6": 50%,
    "4/6": 66.666667%,
    "5/6": 83.333333%,
    "1/12": 8.333333%,
    "2/12": 16.666667%,
    "3/12": 25%,
    "4/12": 33.333333%,
    "5/12": 41.666667%,
    "6/12": 50%,
    "7/12": 58.333333%,
    "8/12": 66.666667%,
    "9/12": 75%,
    "10/12": 83.333333%,
    "11/12": 91.666667%,
    "full": 100%,
    "min": min-content,
    "max": max-content,
    "fit": fit-content
)) !default;

// #endregion

// #region @import "./_margin.scss"; -> scss/spacing/_margin.scss
/// This is equivalent to `margin: 0;`.
/// @example margin: 0;
/// @name .k-m-0
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 1px;`.
/// @example margin: 1px;
/// @name .k-m-1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 0.25rem;`.
/// @example margin: 0.25rem;
/// @name .k-m-1
/// @group margin
/// @contextType css

/// This is equivalent to `margin: -1px;`.
/// @example margin: -1px;
/// @name .k-m--1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin: -0.25rem;`.
/// @example margin: -0.25rem;
/// @name .k-m--1
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 0.25rem;`.
/// @example margin: 0.25rem;
/// @name .k-m-xs
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 0.5rem;`.
/// @example margin: 0.5rem;
/// @name .k-m-sm
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 0.75rem;`.
/// @example margin: 0.75rem;
/// @name .k-m-md
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 1rem;`.
/// @example margin: 1rem;
/// @name .k-m-lg
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 1.5rem;`.
/// @example margin: 1.5rem;
/// @name .k-m-xl
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 0.125rem;`.
/// @example margin: 0.125rem;
/// @name .k-m-thin
/// @group margin
/// @contextType css

/// This is equivalent to `margin: 1px;`.
/// @example margin: 1px;
/// @name .k-m-hair
/// @group margin
/// @contextType css

/// This is equivalent to `margin: auto;`.
/// @example margin: auto;
/// @name .k-m-auto
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 0;`.
/// @example margin-top: 0;
/// @name .k-mt-0
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 1px;`.
/// @example margin-top: 1px;
/// @name .k-mt-1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 0.25rem;`.
/// @example margin-top: 0.25rem;
/// @name .k-mt-1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: -1px;`.
/// @example margin-top: -1px;
/// @name .k-mt--1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: -0.25rem;`.
/// @example margin-top: -0.25rem;
/// @name .k-mt--1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 0.25rem;`.
/// @example margin-top: 0.25rem;
/// @name .k-mt-xs
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 0.5rem;`.
/// @example margin-top: 0.5rem;
/// @name .k-mt-sm
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 0.75rem;`.
/// @example margin-top: 0.75rem;
/// @name .k-mt-md
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 1rem;`.
/// @example margin-top: 1rem;
/// @name .k-mt-lg
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 1.5rem;`.
/// @example margin-top: 1.5rem;
/// @name .k-mt-xl
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 0.125rem;`.
/// @example margin-top: 0.125rem;
/// @name .k-mt-thin
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: 1px;`.
/// @example margin-top: 1px;
/// @name .k-mt-hair
/// @group margin
/// @contextType css

/// This is equivalent to `margin-top: auto;`.
/// @example margin-top: auto;
/// @name .k-mt-auto
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 0;`.
/// @example margin-right: 0;
/// @name .k-mr-0
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 1px;`.
/// @example margin-right: 1px;
/// @name .k-mr-1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 0.25rem;`.
/// @example margin-right: 0.25rem;
/// @name .k-mr-1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: -1px;`.
/// @example margin-right: -1px;
/// @name .k-mr--1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: -0.25rem;`.
/// @example margin-right: -0.25rem;
/// @name .k-mr--1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 0.25rem;`.
/// @example margin-right: 0.25rem;
/// @name .k-mr-xs
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 0.5rem;`.
/// @example margin-right: 0.5rem;
/// @name .k-mr-sm
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 0.75rem;`.
/// @example margin-right: 0.75rem;
/// @name .k-mr-md
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 1rem;`.
/// @example margin-right: 1rem;
/// @name .k-mr-lg
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 1.5rem;`.
/// @example margin-right: 1.5rem;
/// @name .k-mr-xl
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 0.125rem;`.
/// @example margin-right: 0.125rem;
/// @name .k-mr-thin
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: 1px;`.
/// @example margin-right: 1px;
/// @name .k-mr-hair
/// @group margin
/// @contextType css

/// This is equivalent to `margin-right: auto;`.
/// @example margin-right: auto;
/// @name .k-mr-auto
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 0;`.
/// @example margin-bottom: 0;
/// @name .k-mb-0
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 1px;`.
/// @example margin-bottom: 1px;
/// @name .k-mb-1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 0.25rem;`.
/// @example margin-bottom: 0.25rem;
/// @name .k-mb-1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: -1px;`.
/// @example margin-bottom: -1px;
/// @name .k-mb--1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: -0.25rem;`.
/// @example margin-bottom: -0.25rem;
/// @name .k-mb--1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 0.25rem;`.
/// @example margin-bottom: 0.25rem;
/// @name .k-mb-xs
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 0.5rem;`.
/// @example margin-bottom: 0.5rem;
/// @name .k-mb-sm
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 0.75rem;`.
/// @example margin-bottom: 0.75rem;
/// @name .k-mb-md
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 1rem;`.
/// @example margin-bottom: 1rem;
/// @name .k-mb-lg
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 1.5rem;`.
/// @example margin-bottom: 1.5rem;
/// @name .k-mb-xl
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 0.125rem;`.
/// @example margin-bottom: 0.125rem;
/// @name .k-mb-thin
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: 1px;`.
/// @example margin-bottom: 1px;
/// @name .k-mb-hair
/// @group margin
/// @contextType css

/// This is equivalent to `margin-bottom: auto;`.
/// @example margin-bottom: auto;
/// @name .k-mb-auto
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 0;`.
/// @example margin-left: 0;
/// @name .k-ml-0
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 1px;`.
/// @example margin-left: 1px;
/// @name .k-ml-1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 0.25rem;`.
/// @example margin-left: 0.25rem;
/// @name .k-ml-1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: -1px;`.
/// @example margin-left: -1px;
/// @name .k-ml--1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: -0.25rem;`.
/// @example margin-left: -0.25rem;
/// @name .k-ml--1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 0.25rem;`.
/// @example margin-left: 0.25rem;
/// @name .k-ml-xs
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 0.5rem;`.
/// @example margin-left: 0.5rem;
/// @name .k-ml-sm
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 0.75rem;`.
/// @example margin-left: 0.75rem;
/// @name .k-ml-md
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 1rem;`.
/// @example margin-left: 1rem;
/// @name .k-ml-lg
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 1.5rem;`.
/// @example margin-left: 1.5rem;
/// @name .k-ml-xl
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 0.125rem;`.
/// @example margin-left: 0.125rem;
/// @name .k-ml-thin
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: 1px;`.
/// @example margin-left: 1px;
/// @name .k-ml-hair
/// @group margin
/// @contextType css

/// This is equivalent to `margin-left: auto;`.
/// @example margin-left: auto;
/// @name .k-ml-auto
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 0;`.
/// @example margin-inline: 0;
/// @name .k-mx-0
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 1px;`.
/// @example margin-inline: 1px;
/// @name .k-mx-1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 0.25rem;`.
/// @example margin-inline: 0.25rem;
/// @name .k-mx-1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: -1px;`.
/// @example margin-inline: -1px;
/// @name .k-mx--1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: -0.25rem;`.
/// @example margin-inline: -0.25rem;
/// @name .k-mx--1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 0.25rem;`.
/// @example margin-inline: 0.25rem;
/// @name .k-mx-xs
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 0.5rem;`.
/// @example margin-inline: 0.5rem;
/// @name .k-mx-sm
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 0.75rem;`.
/// @example margin-inline: 0.75rem;
/// @name .k-mx-md
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 1rem;`.
/// @example margin-inline: 1rem;
/// @name .k-mx-lg
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 1.5rem;`.
/// @example margin-inline: 1.5rem;
/// @name .k-mx-xl
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 0.125rem;`.
/// @example margin-inline: 0.125rem;
/// @name .k-mx-thin
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: 1px;`.
/// @example margin-inline: 1px;
/// @name .k-mx-hair
/// @group margin
/// @contextType css

/// This is equivalent to `margin-inline: auto;`.
/// @example margin-inline: auto;
/// @name .k-mx-auto
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 0;`.
/// @example margin-block: 0;
/// @name .k-my-0
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 1px;`.
/// @example margin-block: 1px;
/// @name .k-my-1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 0.25rem;`.
/// @example margin-block: 0.25rem;
/// @name .k-my-1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: -1px;`.
/// @example margin-block: -1px;
/// @name .k-my--1px
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: -0.25rem;`.
/// @example margin-block: -0.25rem;
/// @name .k-my--1
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 0.25rem;`.
/// @example margin-block: 0.25rem;
/// @name .k-my-xs
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 0.5rem;`.
/// @example margin-block: 0.5rem;
/// @name .k-my-sm
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 0.75rem;`.
/// @example margin-block: 0.75rem;
/// @name .k-my-md
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 1rem;`.
/// @example margin-block: 1rem;
/// @name .k-my-lg
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 1.5rem;`.
/// @example margin-block: 1.5rem;
/// @name .k-my-xl
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 0.125rem;`.
/// @example margin-block: 0.125rem;
/// @name .k-my-thin
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: 1px;`.
/// @example margin-block: 1px;
/// @name .k-my-hair
/// @group margin
/// @contextType css

/// This is equivalent to `margin-block: auto;`.
/// @example margin-block: auto;
/// @name .k-my-auto
/// @group margin
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// #region @import "./_components.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/_components.scss
$kendo-components: (
    // Utils
    "utils",
    "utils-accessibility-screen-readers",
    "utils-background-clip",
    "utils-background-color",
    "utils-background-position",
    "utils-background-size",
    "utils-border-color",
    "utils-border-radius",
    "utils-border-style",
    "utils-border-width",
    "utils-outline-color",
    "utils-outline-offset",
    "utils-outline-style",
    "utils-outline-width",
    "utils-effects-opacity",
    "utils-elevation",
    "utils-filter-backdrop",
    "utils-flex-grid-align-content",
    "utils-flex-grid-align-items",
    "utils-flex-grid-align-self",
    "utils-flex-grid-flex-basis",
    "utils-flex-grid-flex-direction",
    "utils-flex-grid-flex-grow",
    "utils-flex-grid-flex-shrink",
    "utils-flex-grid-flex-wrap",
    "utils-flex-grid-flex",
    "utils-flex-grid-gap",
    "utils-flex-grid-grid-auto-columns",
    "utils-flex-grid-grid-auto-flow",
    "utils-flex-grid-grid-auto-rows",
    "utils-flex-grid-grid-column-start-end",
    "utils-flex-grid-grid-row-start-end",
    "utils-flex-grid-grid-template-columns",
    "utils-flex-grid-grid-template-rows",
    "utils-flex-grid-justify-content",
    "utils-flex-grid-justify-items",
    "utils-flex-grid-justify-self",
    "utils-flex-grid-order",
    "utils-flex-grid-place-content",
    "utils-flex-grid-place-items",
    "utils-flex-grid-place-self",
    "utils-interactivity-accent-color",
    "utils-interactivity-appearance",
    "utils-interactivity-caret-color",
    "utils-interactivity-cursor",
    "utils-interactivity-pointer-events",
    "utils-interactivity-resize",
    "utils-interactivity-scroll",
    "utils-interactivity-touch-action",
    "utils-interactivity-user-select",
    "utils-interactivity-will-change",
    "utils-layout-aspect-ratio",
    "utils-layout-box-sizing",
    "utils-layout-clear",
    "utils-layout-columns",
    "utils-layout-display",
    "utils-layout-float",
    "utils-layout-object-fit",
    "utils-layout-object-position",
    "utils-layout-overflow",
    "utils-layout-placement",
    "utils-layout-position",
    "utils-layout-visibility",
    "utils-layout-zindex",
    "utils-sizing-height",
    "utils-sizing-width",
    "utils-spacing-margin",
    "utils-spacing-padding",
    "utils-spacing-space-between",
    "utils-svg-fill",
    "utils-svg-stroke",
    "utils-table-border-collapse",
    "utils-table-table-layout",
    "utils-transform-flip",
    "utils-transform-origin",
    "utils-transform-rotate",
    "utils-transform-scale",
    "utils-transform-skew",
    "utils-transform-translate",
    "utils-typography-font-family",
    "utils-typography-font-size",
    "utils-typography-font-style",
    "utils-typography-font-weight",
    "utils-typography-letter-spacing",
    "utils-typography-line-height",
    "utils-typography-list-style",
    "utils-typography-text-align",
    "utils-typography-text-color",
    "utils-typography-text-decoration",
    "utils-typography-text-overflow",
    "utils-typography-text-transform",
    "utils-typography-vertical-align",
    "utils-typography-white-space",

    // Typography
    "typography",
    "draggable",

    // Generic content
    "table",
    "icon",
    "chip",
    "messagebox",

    // Primitive components
    "input",
    "list",
    "listgroup",
    "overlay",
    "ripple",
    "virtual-scroller",

    // Indicators
    "avatar",
    "badge",
    "color-preview",
    "loader",
    "skeleton",
    "tooltip",
    "time-marker",

    // Native forms
    "button",
    "split-button",
    "menu-button",
    "textbox",
    "textarea",
    "checkbox",
    "listbox",
    "progressbar",
    "radio",
    "slider",

    // Form helpers
    "form",
    "validator",
    "floating-label",

    // Form requirements
    "calendar",
    "popup",
    "time-selector",

    // Augmented inputs
    "autocomplete",
    "captcha",
    "color-palette",
    "color-gradient",
    "color-editor",
    "color-picker",
    "combobox",
    "date-input",
    "date-picker",
    "time-picker",
    "date-time-picker",
    "date-range-picker",
    "dropdown-grid",
    "dropdown-list",
    "dropdown-tree",
    "masked-textbox",
    "multiselect",
    "numeric-textbox",
    "rating",
    "searchbox",
    "switch",
    "upload",
    "dropzone",

    // Command interfaces
    "actions",
    "appbar",
    "fab",
    "menu",
    "toolbar",

    // Popups and modals
    "action-sheet",
    "dialog",
    "drawer",
    "notification",
    "popover",
    "responsive-panel",
    "window",

    // Navigation
    "bottom-navigation",
    "breadcrumb",
    "pager",
    "stepper",
    "tabstrip",
    "treeview",
    "wizard",

    // Layout & containers
    "card",
    "expander",
    "panel",
    "panelbar",
    "splitter",
    "tile-layout",
    "dock-manager",
    "chart-wizard",

    // Data management
    "grid",
    "listview",
    "spreadsheet",
    "pivotgrid",
    "treelist",
    "filter",
    "file-manager",
    "task-board",

    // Editors
    "editor",
    "image-editor",

    // Scheduling
    "gantt",
    "scheduler",

    // Misc
    "adaptive",
    "chat",
    "media-player",
    "timeline",
    "pdf-viewer",
    "scroller",
    "scrollview",
    "prompt",

    // Dataviz
    "dataviz",
    "map",
    "orgchart",
    "signature"
) !default;

// #endregion
// #region @import "./_dependencies.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/_dependencies.scss
$_kendo-dependencies: (
    action-sheet: (
        "icon",
        "listgroup",
        "popup"
    ),
    actions: (),
    adaptive: (),
    appbar: (),
    autocomplete: (
        "button",
        "icon",
        "input",
        "list",
        "popup"
    ),
    avatar: (),
    badge: (),
    bottom-navigation: (
        "icon"
    ),
    breadcrumb: (
        "icon",
        "textbox"
    ),
    button: (
        "badge",
        "icon"
    ),
    calendar: (
        "button",
        "list"
    ),
    captcha: (
        "button",
        "slider",
        "textbox"
    ),
    card: (
        "actions",
        "button",
        // "utils/flex",
        // "utils/grid"
    ),
    chat: (
        "avatar",
        "card",
        "textbox",
        "toolbar"
    ),
    checkbox: (),
    chip: (),
    color-editor: (
        "actions",
        "color-palette",
        "color-preview",
        "color-gradient"
    ),
    color-gradient: (
        "button",
        "numeric-textbox",
        "slider",
        "textbox",
        // "utils/flex"
    ),
    color-palette: (
        "color-preview",
        // "utils/flex"
    ),
    color-preview: (),
    color-picker: (
        "button",
        "color-editor",
        "input",
        "popup"
    ),
    combobox: (
        "button",
        "input",
        "popup",
        "list"
    ),
    cursor: (),
    dataviz: (
        "popup",
        "tooltip"
    ),
    date-input: (
        "input"
    ),
    date-picker: (
        "button",
        "calendar",
        "icon",
        "input",
        "popup"
    ),
    date-range-picker: (
        "date-picker"
    ),
    date-time-picker: (
        "date-picker",
        "time-picker"
    ),
    dialog: (
        "window"
    ),
    draggable: (),
    drawer: (
        "list",
        "overlay"
    ),
    dropdown-grid: (
        "button",
        "grid",
        "icon",
        "input",
        "popup",
        "table"
    ),
    dropdown-list: (
        "button",
        "icon",
        "input",
        "list",
        "popup"
    ),
    dropdown-tree: (
        "button",
        "icon",
        "input",
        "popup",
        "treeview"
    ),
    dropzone: (),
    dock-manager: (
        "splitter",
        "toolbar",
        "tabstrip"
    ),
    chart-wizard: (
        "icon",
        "window",
        "splitter",
        "dataviz",
        "expansion-panel",
        "grid",
        "tabstrip",
        "listview",
        "forms",
        "combobox"
    ),
    editor: (
        "button",
        "checkbox",
        "color-picker",
        "combobox",
        "dropdown-list",
        "toolbar",
        "upload",
        "window"
    ),
    expander: (
        "icon",
        "list",
        // "utils/display",
        // "utils/flex"
    ),
    fab: (
        "button",
        "badge",
        // "utils/position"
    ),
    file-manager: (
        "breadcrumb",
        "dialog",
        "grid",
        "icon",
        "input",
        "listview",
        "menu",
        "splitter",
        "switch",
        "toolbar",
        "treeview",
        "upload"
    ),
    filter: (
        "button",
        "checkbox",
        "date-time-picker",
        "dropdown-list",
        "input",
        "numeric-textbox",
        "textbox",
        "toolbar"
    ),
    floating-label: (
        "input"
    ),
    form: (
        "actions",
        "button",
        "toolbar"
    ),
    gantt: (
        "button",
        "date-time-picker",
        "input",
        "numeric-textbox",
        "splitter",
        "treelist",
        "validator",
        "window",
        "time-marker"
    ),
    grid: (
        "actions",
        "button",
        "checkbox",
        "dialog",
        "input",
        "list",
        "menu",
        "pager",
        "popup",
        "radio",
        "skeleton",
        "toolbar",
        "validator"
    ),
    icon: (),
    image-editor: (
        "checkbox",
        "dropdown-list",
        "form",
        "numeric-textbox",
        "toolbar"
    ),
    input: (
        "button",
        "icon"
    ),
    list: (),
    listbox: (
        "button",
        "list"
    ),
    listgroup: (),
    listview: (
        "pager",
        // "utils/grid",
        // "utils/flex"
    ),
    loader: (),
    map: (
        "button",
        "scroller",
        // "utils/position"
    ),
    masked-textbox: (
        "button",
        "input"
    ),
    media-player: (
        "slider",
        "toolbar"
    ),
    menu: (
        "button",
        "icon",
        "popup"
    ),
    menu-button: (
        "button",
        "menu"
    ),
    messagebox: (),
    multiselect: (
        "button",
        "chip",
        "icon",
        "input",
        "list",
        "popup"
    ),
    notification: (
        "button",
        "icon",
        "popup"
    ),
    numeric-textbox: (
        "button",
        "icon",
        "input"
    ),
    orgchart: (
        "button",
        "card",
        "dropdown-list",
        "icon",
        "menu",
        "textbox",
        "upload",
        "window"
    ),
    overlay: (),
    pager: (
        "dropdown-list",
        "icon",
        "list",
        "toolbar"
    ),
    panel: (),
    panelbar: (
        "icon"
    ),
    pdf-viewer: (
        "button",
        "combobox",
        "dialog",
        "dropzone",
        "pager",
        "textbox",
        "toolbar",
        "window"
    ),
    pivotgrid: (
        "dialog",
        "grid",
        "list",
        "treeview",
        // "utils/flex",
        // "utils/grid",
        // "utils/position"
    ),
    popover: (
        "card",
        "popup"
    ),
    popup: (),
    progressbar: (),
    prompt: (),
    radio: (),
    rating: (
        "icon"
    ),
    responsive-panel: (),
    ripple: (),
    scheduler: (
        "button",
        "date-time-picker",
        "dialog",
        "dropdown-list",
        "toolbar",
        "tooltip",
        "time-marker"
    ),
    scroller: (),
    scrollview: (
        "button"
    ),
    searchbox: (
        "button",
        "input"
    ),
    signature: (
        "button",
        "input"
    ),
    skeleton: (),
    slider: (
        "button",
        "tooltip"
    ),
    split-button: (
        "button",
        "menu"
    ),
    splitter: (
        "icon"
    ),
    spreadsheet: (
        "button",
        "checkbox",
        "color-picker",
        "combobox",
        "date-time-picker",
        "dropdown-list",
        "list",
        "menu",
        "radio",
        "tabstrip",
        "toolbar",
        "treeview",
        "upload",
        "window"
    ),
    stepper: (
        "icon",
        "progressbar"
    ),
    switch: (),
    table: (),
    tabstrip: (
        "button",
        "icon"
    ),
    task-board: (
        "card",
        "form",
        "searchbox",
        "textbox",
        "toolbar"
    ),
    textarea: (
        "button",
        "icon",
        "input"
    ),
    textbox: (
        "button",
        "icon",
        "input"
    ),
    tile-layout: (
        "card"
    ),
    time-marker: (),
    time-duration-picker: (
        "button",
        "icon",
        "input",
        "list",
        "popup",
        "time-selector"
    ),
    time-selector: (
        "actions",
        "button",
        "list"
    ),
    timeline: (
        "button",
        "card",
        "icon"
    ),
    time-picker: (
        "button",
        "icon",
        "input",
        "list",
        "popup",
        "time-selector"
    ),
    toolbar: (
        "button",
        "icon",
        "menu",
        "popup"
    ),
    tooltip: (
        "button",
        "icon",
        "popup"
    ),
    treelist: (
        "grid"
    ),
    treeview: (
        "checkbox",
        "icon"
    ),
    typography: (),
    upload: (
        "actions",
        "button",
        "dropzone",
        "icon",
        "listgroup",
        "toolbar"
    ),
    utils: (),
    utils-accessibility-screen-readers: (),
    utils-background-clip: (),
    utils-background-color: (),
    utils-background-position: (),
    utils-background-size: (),
    utils-border-color: (),
    utils-border-radius: (),
    utils-border-style: (),
    utils-border-width: (),
    utils-outline-color: (),
    utils-outline-offset: (),
    utils-outline-style: (),
    utils-outline-width: (),
    utils-effects-opacity: (),
    utils-elevation: (),
    utils-filter-backdrop: (),
    utils-flex-grid-align-content: (),
    utils-flex-grid-align-items: (),
    utils-flex-grid-align-self: (),
    utils-flex-grid-flex-basis: (),
    utils-flex-grid-flex-direction: (),
    utils-flex-grid-flex-grow: (),
    utils-flex-grid-flex-shrink: (),
    utils-flex-grid-flex-wrap: (),
    utils-flex-grid-flex: (),
    utils-flex-grid-gap: (),
    utils-flex-grid-grid-auto-columns: (),
    utils-flex-grid-grid-auto-flow: (),
    utils-flex-grid-grid-auto-rows: (),
    utils-flex-grid-grid-column-start-end: (),
    utils-flex-grid-grid-row-start-end: (),
    utils-flex-grid-grid-template-columns: (),
    utils-flex-grid-grid-template-rows: (),
    utils-flex-grid-justify-content: (),
    utils-flex-grid-justify-items: (),
    utils-flex-grid-justify-self: (),
    utils-flex-grid-order: (),
    utils-flex-grid-place-content: (),
    utils-flex-grid-place-items: (),
    utils-flex-grid-place-self: (),
    utils-interactivity-accent-color: (),
    utils-interactivity-appearance: (),
    utils-interactivity-caret-color: (),
    utils-interactivity-cursor: (),
    utils-interactivity-pointer-events: (),
    utils-interactivity-resize: (),
    utils-interactivity-scroll: (),
    utils-interactivity-touch-action: (),
    utils-interactivity-user-select: (),
    utils-interactivity-will-change: (),
    utils-layout-aspect-ratio: (),
    utils-layout-box-sizing: (),
    utils-layout-clear: (),
    utils-layout-columns: (),
    utils-layout-display: (),
    utils-layout-float: (),
    utils-layout-object-fit: (),
    utils-layout-object-position: (),
    utils-layout-overflow: (),
    utils-layout-placement: (),
    utils-layout-position: (),
    utils-layout-visibility: (),
    utils-layout-zindex: (),
    utils-sizing-height: (),
    utils-sizing-width: (),
    utils-spacing-margin: (),
    utils-spacing-padding: (),
    utils-spacing-space-between: (),
    utils-svg-fill: (),
    utils-svg-stroke: (),
    utils-table-border-collapse: (),
    utils-table-table-layout: (),
    utils-transform-flip: (),
    utils-transform-origin: (),
    utils-transform-rotate: (),
    utils-transform-scale: (),
    utils-transform-skew: (),
    utils-transform-translate: (),
    utils-typography-font-family: (),
    utils-typography-font-size: (),
    utils-typography-font-style: (),
    utils-typography-font-weight: (),
    utils-typography-letter-spacing: (),
    utils-typography-line-height: (),
    utils-typography-list-style: (),
    utils-typography-text-align: (),
    utils-typography-text-color: (),
    utils-typography-text-decoration: (),
    utils-typography-text-overflow: (),
    utils-typography-text-transform: (),
    utils-typography-vertical-align: (),
    utils-typography-white-space: (),
    validator: (
        "tooltip"
    ),
    virtual-scroller: (),
    window: (
        "actions",
        "button",
        "icon",
        "overlay"
    ),
    wizard: (
        "button",
        "form",
        "stepper"
    )
);

// #endregion

$_deps: () !default;
$_imported: () !default;

// stylelint-disable scss/at-if-no-null
@mixin module-register( $name: null, $dependencies: null ) {
    @if (k-list-index( $kendo-components, $name) != null) {
        $_deps: k-map-merge( $_deps, ( $name: $dependencies ) );

        @if $dependencies {
            @each $dep in $dependencies {
                @if ( k-list-index( $kendo-components, $dep ) == null ) {
                    @warn "The module \"#{$name}\" depends on module \"#{$dep}\", but the styles will not be loaded!";
                }
            }
        }
    }
}

@mixin module-render( $name: null ) {
    $dependencies: k-map-get( $_deps, $name );

    @if $dependencies {
        @each $dep in $dependencies {
            @if ( k-list-index( $_imported, $dep ) == null ) {
                @warn "The module \"#{$name}\" depends on module \"#{$dep}\", but the styles have not been loaded yet!";
            }
        }
    }

    @if ( k-list-index( $kendo-components, $name ) != null ) and ( k-list-index( $_imported, $name ) == null ) {
        $_imported: k-list-append( $_imported, $name ) !global;
        @content;
    }
}

@mixin verify-dependencies() {
    @each $component in $kendo-components {
        @if (k-map-has-key( $_kendo-dependencies, $component ) == false) {
            @error "Module '#{$component}' is not defined.";
        }
    }
}
@include verify-dependencies();

@mixin verify-rendered() {
    @each $component in $kendo-components {
        @if (k-list-index( $_imported, $component ) == null) {
            @error "Module '#{$component}' has not been rendered.";
        }
    }
}
// stylelint-enable scss/at-if-no-null

// #endregion
@include module-register((name: "utils-spacing-margin"));

@mixin kendo-utils--spacing--margin() {
    @include module-render("utils-spacing-margin") {

        // Margin utility classes
        $kendo-utils-margin: k-map-get( $kendo-utils, "margin" ) !default;
        @include generate-utils( m, margin, $kendo-utils-margin, $css-var: "spacing" );
        @include generate-utils( mt, margin-top, $kendo-utils-margin, $css-var: "spacing" );
        @include generate-utils( mr, margin-right, $kendo-utils-margin, $css-var: "spacing" );
        @include generate-utils( mb, margin-bottom, $kendo-utils-margin, $css-var: "spacing" );
        @include generate-utils( ml, margin-left, $kendo-utils-margin, $css-var: "spacing" );
        @include generate-utils( mx, margin-inline, $kendo-utils-margin, $css-var: "spacing" );
        @include generate-utils( my, margin-block, $kendo-utils-margin, $css-var: "spacing" );

    }
}

// #endregion
// #region @import "./_padding.scss"; -> scss/spacing/_padding.scss
/// This is equivalent to `padding: 0;`.
/// @example padding: 0;
/// @name .k-p-0
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 1px;`.
/// @example padding: 1px;
/// @name .k-p-1px
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 0.25rem;`.
/// @example padding: 0.25rem;
/// @name .k-p-1
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 0.25rem;`.
/// @example padding: 0.25rem;
/// @name .k-p-xs
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 0.5rem;`.
/// @example padding: 0.5rem;
/// @name .k-p-sm
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 0.75rem;`.
/// @example padding: 0.75rem;
/// @name .k-p-md
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 1rem;`.
/// @example padding: 1rem;
/// @name .k-p-lg
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 1.5rem;`.
/// @example padding: 1.5rem;
/// @name .k-p-xl
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 0.125rem;`.
/// @example padding: 0.125rem;
/// @name .k-p-thin
/// @group padding
/// @contextType css

/// This is equivalent to `padding: 1px;`.
/// @example padding: 1px;
/// @name .k-p-hair
/// @group padding
/// @contextType css

/// This is equivalent to `padding: auto;`.
/// @example padding: auto;
/// @name .k-p-auto
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 0;`.
/// @example padding-top: 0;
/// @name .k-pt-0
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 1px;`.
/// @example padding-top: 1px;
/// @name .k-pt-1px
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 0.25rem;`.
/// @example padding-top: 0.25rem;
/// @name .k-pt-1
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 0.25rem;`.
/// @example padding-top: 0.25rem;
/// @name .k-pt-xs
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 0.5rem;`.
/// @example padding-top: 0.5rem;
/// @name .k-pt-sm
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 0.75rem;`.
/// @example padding-top: 0.75rem;
/// @name .k-pt-md
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 1rem;`.
/// @example padding-top: 1rem;
/// @name .k-pt-lg
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 1.5rem;`.
/// @example padding-top: 1.5rem;
/// @name .k-pt-xl
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 0.125rem;`.
/// @example padding-top: 0.125rem;
/// @name .k-pt-thin
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: 1px;`.
/// @example padding-top: 1px;
/// @name .k-pt-hair
/// @group padding
/// @contextType css

/// This is equivalent to `padding-top: auto;`.
/// @example padding-top: auto;
/// @name .k-pt-auto
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 0;`.
/// @example padding-right: 0;
/// @name .k-pr-0
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 1px;`.
/// @example padding-right: 1px;
/// @name .k-pr-1px
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 0.25rem;`.
/// @example padding-right: 0.25rem;
/// @name .k-pr-1
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 0.25rem;`.
/// @example padding-right: 0.25rem;
/// @name .k-pr-xs
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 0.5rem;`.
/// @example padding-right: 0.5rem;
/// @name .k-pr-sm
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 0.75rem;`.
/// @example padding-right: 0.75rem;
/// @name .k-pr-md
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 1rem;`.
/// @example padding-right: 1rem;
/// @name .k-pr-lg
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 1.5rem;`.
/// @example padding-right: 1.5rem;
/// @name .k-pr-xl
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 0.125rem;`.
/// @example padding-right: 0.125rem;
/// @name .k-pr-thin
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: 1px;`.
/// @example padding-right: 1px;
/// @name .k-pr-hair
/// @group padding
/// @contextType css

/// This is equivalent to `padding-right: auto;`.
/// @example padding-right: auto;
/// @name .k-pr-auto
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 0;`.
/// @example padding-bottom: 0;
/// @name .k-pb-0
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 1px;`.
/// @example padding-bottom: 1px;
/// @name .k-pb-1px
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 0.25rem;`.
/// @example padding-bottom: 0.25rem;
/// @name .k-pb-1
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 0.25rem;`.
/// @example padding-bottom: 0.25rem;
/// @name .k-pb-xs
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 0.5rem;`.
/// @example padding-bottom: 0.5rem;
/// @name .k-pb-sm
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 0.75rem;`.
/// @example padding-bottom: 0.75rem;
/// @name .k-pb-md
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 1rem;`.
/// @example padding-bottom: 1rem;
/// @name .k-pb-lg
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 1.5rem;`.
/// @example padding-bottom: 1.5rem;
/// @name .k-pb-xl
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 0.125rem;`.
/// @example padding-bottom: 0.125rem;
/// @name .k-pb-thin
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: 1px;`.
/// @example padding-bottom: 1px;
/// @name .k-pb-hair
/// @group padding
/// @contextType css

/// This is equivalent to `padding-bottom: auto;`.
/// @example padding-bottom: auto;
/// @name .k-pb-auto
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 0;`.
/// @example padding-left: 0;
/// @name .k-pl-0
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 1px;`.
/// @example padding-left: 1px;
/// @name .k-pl-1px
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 0.25rem;`.
/// @example padding-left: 0.25rem;
/// @name .k-pl-1
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 0.25rem;`.
/// @example padding-left: 0.25rem;
/// @name .k-pl-xs
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 0.5rem;`.
/// @example padding-left: 0.5rem;
/// @name .k-pl-sm
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 0.75rem;`.
/// @example padding-left: 0.75rem;
/// @name .k-pl-md
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 1rem;`.
/// @example padding-left: 1rem;
/// @name .k-pl-lg
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 1.5rem;`.
/// @example padding-left: 1.5rem;
/// @name .k-pl-xl
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 0.125rem;`.
/// @example padding-left: 0.125rem;
/// @name .k-pl-thin
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: 1px;`.
/// @example padding-left: 1px;
/// @name .k-pl-hair
/// @group padding
/// @contextType css

/// This is equivalent to `padding-left: auto;`.
/// @example padding-left: auto;
/// @name .k-pl-auto
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 0;`.
/// @example padding-inline: 0;
/// @name .k-px-0
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 1px;`.
/// @example padding-inline: 1px;
/// @name .k-px-1px
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 0.25rem;`.
/// @example padding-inline: 0.25rem;
/// @name .k-px-1
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 0.25rem;`.
/// @example padding-inline: 0.25rem;
/// @name .k-px-xs
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 0.5rem;`.
/// @example padding-inline: 0.5rem;
/// @name .k-px-sm
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 0.75rem;`.
/// @example padding-inline: 0.75rem;
/// @name .k-px-md
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 1rem;`.
/// @example padding-inline: 1rem;
/// @name .k-px-lg
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 1.5rem;`.
/// @example padding-inline: 1.5rem;
/// @name .k-px-xl
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 0.125rem;`.
/// @example padding-inline: 0.125rem;
/// @name .k-px-thin
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: 1px;`.
/// @example padding-inline: 1px;
/// @name .k-px-hair
/// @group padding
/// @contextType css

/// This is equivalent to `padding-inline: auto;`.
/// @example padding-inline: auto;
/// @name .k-px-auto
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 0;`.
/// @example padding-block: 0;
/// @name .k-py-0
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 1px;`.
/// @example padding-block: 1px;
/// @name .k-py-1px
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 0.25rem;`.
/// @example padding-block: 0.25rem;
/// @name .k-py-1
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 0.25rem;`.
/// @example padding-block: 0.25rem;
/// @name .k-py-xs
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 0.5rem;`.
/// @example padding-block: 0.5rem;
/// @name .k-py-sm
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 0.75rem;`.
/// @example padding-block: 0.75rem;
/// @name .k-py-md
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 1rem;`.
/// @example padding-block: 1rem;
/// @name .k-py-lg
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 1.5rem;`.
/// @example padding-block: 1.5rem;
/// @name .k-py-xl
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 0.125rem;`.
/// @example padding-block: 0.125rem;
/// @name .k-py-thin
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: 1px;`.
/// @example padding-block: 1px;
/// @name .k-py-hair
/// @group padding
/// @contextType css

/// This is equivalent to `padding-block: auto;`.
/// @example padding-block: auto;
/// @name .k-py-auto
/// @group padding
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-spacing-padding"));

@mixin kendo-utils--spacing--padding() {
    @include module-render("utils-spacing-padding") {

        // Padding utility classes
        $kendo-utils-padding: k-map-get( $kendo-utils, "padding" ) !default;
        @include generate-utils( p, padding, $kendo-utils-padding, $css-var: "spacing" );
        @include generate-utils( pt, padding-top, $kendo-utils-padding, $css-var: "spacing" );
        @include generate-utils( pr, padding-right, $kendo-utils-padding, $css-var: "spacing" );
        @include generate-utils( pb, padding-bottom, $kendo-utils-padding, $css-var: "spacing" );
        @include generate-utils( pl, padding-left, $kendo-utils-padding, $css-var: "spacing" );
        @include generate-utils( px, padding-inline, $kendo-utils-padding, $css-var: "spacing" );
        @include generate-utils( py, padding-block, $kendo-utils-padding, $css-var: "spacing" );

    }
}

@mixin kendo-utils--spacing--padding--responsive($key) {

    // Padding responsive utility classes
    $kendo-utils-padding: k-map-get( $kendo-utils, "padding" ) !default;
    @include generate-utils( px-#{$key}, padding-inline, $kendo-utils-padding, $css-var: "spacing", $important: false );
    @include generate-utils( py-#{$key}, padding-block, $kendo-utils-padding, $css-var: "spacing", $important: false );

}

// #endregion
// #region @import "./_space-between.scss"; -> scss/spacing/_space-between.scss
// TODO: docs

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-spacing-space-between"));

@mixin kendo-utils--spacing--space-between() {
    @include module-render("utils-spacing-space-between") {

        // Space between utility classes
        $kendo-utils-space-between: k-map-get( $kendo-utils, "space-between" ) !default;
        @each $key, $value in $kendo-utils-space-between {
            $_key: k-escape-class-name( $key );

            .#{$kendo-prefix}space-x-#{$_key} > * + * {
                margin-inline-start: $value;
            }
            .#{$kendo-prefix}space-y-#{$_key} > * + * {
                margin-block-start: $value;
            }
        }

    }
}

// #endregion


@mixin kendo-utils--spacing() {
    @include kendo-utils--spacing--margin();
    @include kendo-utils--spacing--padding();
    @include kendo-utils--spacing--space-between();
}

@mixin kendo-utils--spacing--responsive($key) {
    @include kendo-utils--spacing--padding--responsive($key)
}

// #endregion

$kendo-prefix: k- !default;
$kendo-important: true !default;

$kendo-theme-colors: () !default;

$kendo-font-sizes: () !default;

$kendo-util-colors-list: (
    app-surface,
    on-app-surface,
    subtle,
    surface,
    surface-alt,
    border,
    border-alt,
    base-subtle,
    base-emphasis,
    primary-subtle,
    primary,
    primary-emphasis,
    secondary-subtle,
    secondary,
    secondary-emphasis,
    tertiary-subtle,
    tertiary,
    tertiary-emphasis,
    info-subtle,
    info,
    info-emphasis,
    success-subtle,
    success,
    success-emphasis,
    warning-subtle,
    warning,
    warning-emphasis,
    error-subtle,
    error,
    error-emphasis,
    light-subtle,
    light,
    light-emphasis,
    dark-subtle,
    dark,
    dark-emphasis,
) !default;

$kendo-util-colors: () !default;
@each $name, $color in $kendo-colors {
    @each $util-color in $kendo-util-colors-list {
        @if ( $name == $util-color ) {
            $kendo-util-colors: k-map-merge( $kendo-util-colors, ( $name: $color) );
        }
    }
}

$kendo-spacing: () !default;

$kendo-sizing: () !default;

$kendo-border-radii: () !default;

$_default-kendo-fraction-classes: (
    '91-6': 91.6666%,
    '83-3': 83.3333%,
    '66-6': 66.6666%,
    '58-3': 58.3333%,
    '41-6': 41.6666%,
    '33-3': 33.3333%,
    '16-7': 16.6666%,
    '14-3': 14.2857%,
    '12-5': 12.5%,
    '11-1': 11.1111%,
    '9-1': 9.0909%,
    '8-3': 8.3333%
);

$kendo-fraction-classes: $_default-kendo-fraction-classes !default;
$kendo-fraction-classes: k-map-merge($_default-kendo-fraction-classes, $kendo-fraction-classes);

$_default-kendo-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
) !default;

$kendo-breakpoints: $_default-kendo-breakpoints !default;
$kendo-breakpoints: k-map-merge($_default-kendo-breakpoints, $kendo-breakpoints);

$_default-kendo-container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
    xxl: 1320px
) !default;

$kendo-container-max-widths: $_default-kendo-container-max-widths !default;
$kendo-container-max-widths: k-map-merge($_default-kendo-container-max-widths, $kendo-container-max-widths);

$kendo-utils: (

    // Accessibility
    "screen-readers": true,

    // Layout
    "aspect-ratio": (
        auto: auto,
        1: 1,
        square: k-string-unquote("1 / 1"),
        video: k-string-unquote("16 / 9")
    ),
    "container": (),
    "columns": (
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        10: 10,
        11: 11,
        12: 12,
        auto: auto
    ),
    "break-after": (),
    "break-before": (),
    "break-inside": (),
    "box-decoration-break": (),
    "box-sizing": (
        border: border-box,
        content: content-box
    ),
    "display": (
        none,
        contents,
        block,
        inline,
        inline-block,
        flex,
        inline-flex,
        grid,
        inline-grid,
        table,
        inline-table,
        table-row,
        table-cell,
        list-item
    ),
    "float": (
        left,
        right,
        none
    ),
    "clear": (
        left,
        right,
        both,
        none
    ),
    "isolation": (),
    "object-fit": (
        contain,
        cover,
        fill,
        scale-down,
        initial,
        none
    ),
    "object-position": (
        center: center,
        top: top,
        right: right,
        bottom: bottom,
        left: left,
        top-left: top left,
        top-right: top right,
        bottom-left: bottom left,
        bottom-right: bottom right
    ),
    "overflow": (
        auto: auto,
        hidden: hidden,
        visible: visible,
        scroll: scroll,
        clip: clip
    ),
    "overscroll": (),
    "placement": k-map-merge( $kendo-spacing, (
        -1: -1px
    )),
    "position": (
        static,
        relative,
        absolute,
        fixed,
        sticky
    ),
    "inset": (
        0: 0,
        1: 1px,
        -1: -1px
    ),
    "visibility": (
        visible: visible,
        invisible: hidden,
        collapse: collapse
    ),
    "zindex": (
        0: 0,
        10: 10,
        20: 20,
        30: 30,
        40: 40,
        50: 50,
        auto: auto
    ),

    // Flex / Grid
    "flex-direction": (
        row: row,
        row-reverse: row-reverse,
        col: column,
        col-reverse: column-reverse
    ),
    "flex-wrap": (
        wrap,
        wrap-reverse,
        nowrap
    ),
    "flex": (
        1: 1 1 0%,
        auto: 1 1 auto,
        initial: 0 1 auto,
        none: none
    ),
    "flex-grow": (
        DEFAULT: 1,
        0: 0
    ),
    "flex-shrink": (
        DEFAULT: 1,
        0: 0
    ),
    "flex-basis": $kendo-sizing,
    "order": (
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        10: 10,
        11: 11,
        12: 12,
        first: -9999,
        last: 9999,
        none: 0
    ),
    "grid-template-columns": (
        1: repeat( 1, minmax( 0, 1fr ) ),
        2: repeat( 2, minmax( 0, 1fr ) ),
        3: repeat( 3, minmax( 0, 1fr ) ),
        4: repeat( 4, minmax( 0, 1fr ) ),
        5: repeat( 5, minmax( 0, 1fr ) ),
        6: repeat( 6, minmax( 0, 1fr ) ),
        7: repeat( 7, minmax( 0, 1fr ) ),
        8: repeat( 8, minmax( 0, 1fr ) ),
        9: repeat( 9, minmax( 0, 1fr ) ),
        10: repeat( 10, minmax( 0, 1fr ) ),
        11: repeat( 11, minmax( 0, 1fr ) ),
        12: repeat( 12, minmax( 0, 1fr ) ),
        none: none
    ),
    "grid-template-rows": (
        1: repeat( 1, minmax( 0, 1fr ) ),
        2: repeat( 2, minmax( 0, 1fr ) ),
        3: repeat( 3, minmax( 0, 1fr ) ),
        4: repeat( 4, minmax( 0, 1fr ) ),
        5: repeat( 5, minmax( 0, 1fr ) ),
        6: repeat( 6, minmax( 0, 1fr ) ),
        7: repeat( 7, minmax( 0, 1fr ) ),
        8: repeat( 8, minmax( 0, 1fr ) ),
        9: repeat( 9, minmax( 0, 1fr ) ),
        10: repeat( 10, minmax( 0, 1fr ) ),
        11: repeat( 11, minmax( 0, 1fr ) ),
        12: repeat( 12, minmax( 0, 1fr ) ),
        none: none
    ),
    "grid-column-start": (
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        10: 10,
        11: 11,
        12: 12,
        13: 13,
        auto: auto
    ),
    "grid-column-end": (
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        10: 10,
        11: 11,
        12: 12,
        13: 13,
        auto: auto
    ),
    "grid-column-span": (
        1: span 1 / span 1,
        2: span 2 / span 2,
        3: span 3 / span 3,
        4: span 4 / span 4,
        5: span 5 / span 5,
        6: span 6 / span 6,
        7: span 7 / span 7,
        8: span 8 / span 8,
        9: span 9 / span 9,
        10: span 10 / span 10,
        11: span 11 / span 11,
        12: span 12 / span 12,
        full: k-string-unquote("1 / -1"),
        auto: auto
    ),
    "grid-row-start": (
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        10: 10,
        11: 11,
        12: 12,
        13: 13,
        auto: auto
    ),
    "grid-row-end": (
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        10: 10,
        11: 11,
        12: 12,
        13: 13,
        auto: auto
    ),
    "grid-row-span": (
        1: span 1 / span 1,
        2: span 2 / span 2,
        3: span 3 / span 3,
        4: span 4 / span 4,
        5: span 5 / span 5,
        6: span 6 / span 6,
        7: span 7 / span 7,
        8: span 8 / span 8,
        9: span 9 / span 9,
        10: span 10 / span 10,
        11: span 11 / span 11,
        12: span 12 / span 12,
        full: span 1 / span -1,
        auto: auto
    ),
    "grid-auto-flow": (
        row: row,
        col: column,
        dense: dense,
        row-dense: row dense,
        col-dense: column dense,
        unset: unset
    ),
    "grid-auto-columns": (
        auto: auto,
        min: min-content,
        max: max-content,
        fr: minmax( 0, 1fr ),
    ),
    "grid-auto-rows": (
        auto: auto,
        min: min-content,
        max: max-content,
        fr: minmax( 0, 1fr ),
    ),
    "gap": k-map-merge( $kendo-spacing, (
        // TODO: remove this extension once we fix docs
        xs: k-spacing(1),
        sm: k-spacing(2),
        md: k-spacing(3),
        lg: k-spacing(4),
        xl: k-spacing(6),
        thin: k-spacing(0.5),
        hair: k-spacing(1px)
    )),
    "align-content": (
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        baseline: baseline,
        first-baseline: first baseline,
        last-baseline: last baseline,
        between: space-between,
        around: space-around,
        evenly: space-evenly
    ),
    "align-items": (
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        baseline: baseline,
        first-baseline: first baseline,
        last-baseline: last baseline,
        self-start: self-start,
        self-end: self-end
    ),
    "align-self": (
        auto: auto,
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        baseline: baseline,
        first-baseline: first baseline,
        last-baseline: last baseline,
        self-start: self-start,
        self-end: self-end
    ),
    "justify-content": (
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        left: left,
        right: right,
        baseline: baseline,
        first-baseline: first baseline,
        last-baseline: last baseline,
        between: space-between,
        around: space-around,
        evenly: space-evenly
    ),
    "justify-items": (
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        self-start: self-start,
        self-end: self-end,
        left: left,
        right: right,
        baseline: baseline,
        first-baseline: first baseline,
        last-baseline: last baseline
    ),
    "justify-self": (
        auto: auto,
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        self-start: self-start,
        self-end: self-end,
        baseline: baseline,
        first-baseline: first baseline,
        last-baseline: last baseline
    ),
    "place-content": (
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        baseline: baseline,
        between: space-between,
        around: space-around,
        evenly: space-evenly
    ),
    "place-items": (
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        self-start: self-start,
        self-end: self-end,
        baseline: baseline
    ),
    "place-self": (
        auto: auto,
        normal: normal,
        stretch: stretch,
        center: center,
        start: start,
        end: end,
        flex-start: flex-start,
        flex-end: flex-end,
        self-start: self-start,
        self-end: self-end,
        baseline: baseline
    ),

    // Spacing
    "margin": k-map-merge( $kendo-spacing,
        k-map-negate( $kendo-spacing), (
        // TODO: remove this extension once we fix docs
        xs: k-spacing(1),
        sm: k-spacing(2),
        md: k-spacing(3),
        lg: k-spacing(4),
        xl: k-spacing(6),
        thin: k-spacing(0.5),
        hair: k-spacing(1px),
        auto: auto
    )),
    "padding": k-map-merge( $kendo-spacing, (
        // TODO: remove this extension once we fix docs
        xs: k-spacing(1),
        sm: k-spacing(2),
        md: k-spacing(3),
        lg: k-spacing(4),
        xl: k-spacing(6),
        thin: k-spacing(0.5),
        hair: k-spacing(1px)
    )),
    "space-between": (),

    // Sizing
    "width": k-map-merge( $kendo-sizing, (
        screen: 100vw
    )),
    "min-width": (
        0: 0,
        full: 100%,
        screen: 100vw,
        min: min-content,
        max: max-content,
        fit: fit-content
    ),
    "max-width": (
        none: none,
        0: 0,
        full: 100%,
        screen: 100vw,
        min: min-content,
        max: max-content,
        fit: fit-content
    ),
    "height": k-map-merge( $kendo-sizing, (
        screen: 100vh
    )),
    "min-height": (
        0: 0,
        full: 100%,
        screen: 100vh,
        min: min-content,
        max: max-content,
        fit: fit-content
    ),
    "max-height": (
        none: none,
        0: 0,
        full: 100%,
        screen: 100vh,
        min: min-content,
        max: max-content,
        fit: fit-content
    ),

    // Typography
    "font-family": (),
    "font-size": (),
    "font-smoothing": (),
    "font-style": (
        italic: italic,
        non-italic: normal,
        oblique: oblique
    ),
    "font-weight": (),
    "font-variant-numeric": (),
    "letter-spacing": (),
    "line-height": (),
    "list-style-type": (
        none,
        disc,
        decimal
    ),
    "list-style-position": (),
    "text-align": (
        left,
        right,
        center,
        justify,
        start,
        end
    ),
    "text-color": k-map-merge( if( $kendo-enable-color-system, $kendo-util-colors, $kendo-theme-colors ), (
        "inherit": inherit,
        "current": currentColor,
        "transparent": transparent,
        "black": black,
        "white": white
    )),
    "text-decoration": (
        underline: underline,
        overline: overline,
        line-through: line-through,
        no-underline: none
    ),
    "text-decoration-width": (),
    "text-decoration-style": (),
    "text-decoration-color": (),
    "text-decoration-offset": (),
    "text-transform": (
        uppercase: uppercase,
        lowercase: lowercase,
        capitalize: capitalize,
        normal-case: none
    ),
    "text-overflow": (
        clip: clip,
        ellipsis: ellipsis
    ),
    "text-indent": (),
    "vertical-align": (
        baseline,
        top,
        middle,
        bottom,
        text-top,
        text-bottom,
        sub,
        super
    ),
    "white-space": (
        normal,
        nowrap,
        pre,
        pre-line,
        pre-wrap,
        break-spaces
    ),
    "word-break": (),

    // Background
    "background-clip": (
        border: border-box,
        padding: padding-box,
        content: content-box,
        text: text
    ),
    "background-color": k-map-merge( if( $kendo-enable-color-system, $kendo-util-colors, $kendo-theme-colors ), (
        "inherit": inherit,
        "transparent": transparent,
        "black": black,
        "white": white
    )),
    "background-position": (
        center: center,
        top: top,
        right: right,
        bottom: bottom,
        left: left,
        top-left: top left,
        top-right: top right,
        bottom-left: bottom left,
        bottom-right: bottom right
    ),
    "background-size": (
        auto,
        cover,
        contain
    ),

    // Border
    "border-width": (
        DEFAULT: 1px,
        0: 0,
        2: 2px,
        4: 4px,
        8: 8px
    ),
    "border-style": (
        solid,
        dashed,
        dotted,
        double,
        // groove,
        // ridge,
        inset,
        outset,
        hidden,
        none
    ),
    "border-color": k-map-merge( if( $kendo-enable-color-system, $kendo-util-colors, $kendo-theme-colors ), (
        "inherit": inherit,
        "current": currentColor,
        "transparent": transparent,
        "black": black,
        "white": white
    )),
    "border-radius": $kendo-border-radii,
    "outline-width": (
        DEFAULT: 1px,
        0: 0,
        2: 2px,
        4: 4px,
        8: 8px
    ),
    "outline-style": (
        solid,
        dashed,
        dotted,
        double,
        // groove,
        // ridge,
        inset,
        outset,
        none
    ),
    "outline-color": k-map-merge( if( $kendo-enable-color-system, $kendo-util-colors, $kendo-theme-colors ), (
        "inherit": inherit,
        "current": currentColor,
        "transparent": transparent,
        "black": black,
        "white": white
    )),
    "outline-offset": (
        0: 0,
        1: 1px,
        2: 2px,
        4: 4px,
        8: 8px
    ),

    // Effects
    "box-shadow": (),
    "box-shadow-color": (),
    "opacity": (
        0: 0,
        5: 0.05,
        10: 0.1,
        20: 0.2,
        30: 0.3,
        40: 0.4,
        50: 0.5,
        60: 0.6,
        70: 0.7,
        80: 0.8,
        90: 0.9,
        100: 1
    ),

    // Filter
    "backdrop-blur": (
        DEFAULT: blur(8px),
        none: blur(0),
        sm: blur(4px),
        md: blur(6px),
        lg: blur(12px)
    ),

    // Table
    "border-collapse": (
        collapse,
        separate
    ),
    "table-layout": (
        auto,
        fixed
    ),

    // Transition

    // Transform
    "flip": true,
    "scale": (
        0: 0,
        0.25: .25,
        0.5: .5,
        0.75: .75,
        1: 1,
        1.25: 1.25,
        1.5: 1.5,
        2: 2
    ),
    "rotate": (
        0: 0deg,
        45: 45deg,
        90: 90deg,
        135: 135deg,
        180: 180deg,
        225: 225deg,
        270: 270deg,
        315: 315deg
    ),
    "translate": k-map-remove( $kendo-sizing, "auto", "min", "max", "fit" ),
    "skew": (
        0: 0deg,
        1: 1deg,
        2: 2deg,
        3: 3deg,
        4: 4deg,
        5: 5deg,
        6: 6deg,
        7: 7deg,
        8: 8deg,
        9: 9deg,
        10: 10deg,
        11: 11deg,
        12: 12deg
    ),
    "origin": (
        center: center,
        top: top,
        right: right,
        bottom: bottom,
        left: left,
        top-left: top left,
        top-right: top right,
        bottom-left: bottom left,
        bottom-right: bottom right
    ),


    // Interactivity
    "accent-color": (),
    "appearance": (
        none,
        auto
    ),
    "cursor": (
        none,
        auto,
        default,
        context-menu,
        help,
        pointer,
        progress,
        wait,
        cell,
        crosshair,
        text,
        vertical-text,
        alias,
        copy,
        move,
        no-drop,
        not-allowed,
        e-resize,
        n-resize,
        ne-resize,
        nw-resize,
        s-resize,
        se-resize,
        sw-resize,
        w-resize,
        ew-resize,
        ns-resize,
        nesw-resize,
        nwse-resize,
        col-resize,
        row-resize,
        all-scroll,
        zoom-in,
        zoom-out,
        grab,
        grabbing
    ),
    "caret-color": (),
    "pointer-events": (
        none,
        auto
    ),
    "resize": (
        DEFAULT: both,
        none: none,
        x: horizontal,
        y: vertical
    ),
    "scroll-behavior": (
        auto,
        smooth
    ),
    "scroll-snap-type": (
        none: none,
        snap-x: x var(--#{$kendo-prefix}scroll-snap-strictness),
        snap-y: y var(--#{$kendo-prefix}scroll-snap-strictness),
        snap-both: both var(--#{$kendo-prefix}scroll-snap-strictness)
    ),
    "scroll-snap-align": (
        start,
        end,
        center,
        none
    ),
    "scroll-snap-stop": (
        normal,
        always
    ),
    "scroll-margin": $kendo-spacing,
    "scroll-padding": $kendo-spacing,
    "touch-action": (
        none,
        auto,
        pan-x,
        pan-left,
        pan-right,
        pan-y,
        pan-up,
        pan-down,
        pinch-zoom,
        manipulation
    ),
    "user-select": (
        none,
        auto,
        text,
        all,
        contain
    ),
    "will-change": (
        auto: auto,
        scroll: scroll-position,
        contents: contents,
        transform: transform
    ),
    "fill-stroke": (
        none: none,
        inherit: inherit,
        current: currentColor,
        "transparent": transparent,
        "black": black,
        "white": white
    )
) !default;

// #endregion
// #region @import "./_mixins.scss"; -> scss/_mixins.scss
@mixin generate-utils( $name, $props, $values, $function: "", $important: $kendo-important, $css-var: null ) {
    @if $values {
        $_props: if( k-meta-type-of($props) == list, $props, ( $props ) );
        $_fn: if( k-meta-function-exists( $function ), k-meta-get-function( $function ), null );

        @each $key, $val in $values {
            $_key: k-escape-class-name( $key );
            $_val: if( k-meta-type-of($values) == list, $key, $val );
            $_name: k-escape-class-name( $name );
            $_selector: if( $_key == DEFAULT, #{$kendo-prefix}#{$_name}, #{$kendo-prefix}#{$_name}-#{$_key});
            $_custom-prop: if( $_key == DEFAULT, var( --kendo-#{$css-var}, #{$_val} ), var( --kendo-#{$css-var}-#{$_key}, #{$_val} ) );

            @if $important != only {
                .#{$_selector} {
                    @each $prop in $_props {
                        @if $css-var {
                            #{$prop}: if( $_fn, k-meta-call($_fn, $_custom-prop), $_custom-prop );
                        } @else {
                            #{$prop}: if( $_fn, k-meta-call($_fn, $_val), $_val );
                        }
                    }
                }
            }
            @if $important {
                .\!#{$_selector} {
                    @each $prop in $_props {
                        @if $css-var {
                            #{$prop}: if( $_fn, k-meta-call($_fn, $-custom-prop), $-custom-prop ) !important; // stylelint-disable-line declaration-no-important
                        } @else {
                            #{$prop}:  if( $_fn, k-meta-call($_fn, $_val), $_val ) !important; // stylelint-disable-line declaration-no-important
                        }
                    }
                }
            }
        }
    }
}


// Responsive Layout Breakpoints
@mixin kendo-breakpoint-up( $breakpoint, $media: all ) {
    @media only #{$media} and (min-width: k-map-get( $kendo-breakpoints, #{$breakpoint} )) {
        @content;
    }
}

@mixin kendo-breakpoint-down( $breakpoint, $media: all ) {
    @media only #{$media} and (max-width: ( k-map-get( $kendo-breakpoints, #{$breakpoint} ) - .02 )) {
        @content;
    }
}

@mixin kendo-breakpoint-only( $breakpoint, $media: all ) {
    $breakpoint-index: k-list-index( k-map-keys($kendo-breakpoints), $breakpoint );
    $next-breakpoint-index: $breakpoint-index + 1;

    $next-breakpoint: k-list-nth( k-map-keys($kendo-breakpoints), $next-breakpoint-index );
    @media only #{$media} and (min-width: k-map-get( $kendo-breakpoints, #{$breakpoint} )) and (max-width: ( k-map-get( $kendo-breakpoints, #{$next-breakpoint} ) - .02)) {
        @content;
    }
}
// #endregion

// #region @import "./accessibility/index.import.scss"; -> scss/accessibility/index.import.scss
// #region @import "./_screen-readers.scss"; -> scss/accessibility/_screen-readers.scss
// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-accessibility-screen-readers"));

@mixin kendo-utils--accessibility--screen-readers() {
    @include module-render("utils-accessibility-screen-readers") {

        // Screen readers utility classes
        $kendo-utils-accessibility: k-map-get( $kendo-utils, "accessibility" ) !default;

        @if $kendo-utils-accessibility {
            /// This class could be assigned to elements which should be visually hidden, but remain accessible for screen readers.
            /// @name .k-sr-only
            /// @group accessibility
            .#{$kendo-prefix}sr-only {
                margin: -1px;
                padding: 0;
                width: 1px;
                height: 1px;
                border-width: 0;
                overflow: hidden;
                clip: rect(0, 0, 0, 0);
                position: absolute;
            }

            .#{$kendo-prefix}not-sr-only {
                margin: 0;
                padding: 0;
                width: auto;
                height: auto;
                border-width: 0;
                overflow: visible;
                clip: auto;
                position: static;
            }
        }

    }
}

// #endregion

@mixin kendo-utils--accessibility() {
    @include kendo-utils--accessibility--screen-readers();
}

// #endregion
// #region @import "./layout/index.import.scss"; -> scss/layout/index.import.scss
// #region @import "./_aspect-ratio.scss"; -> scss/layout/_aspect-ratio.scss
/// This is equivalent to `aspect-ratio: auto;`.
/// @example aspect-ratio: auto;
/// @name .k-aspect-ratio-auto
/// @group aspect-ratio
/// @contextType css

/// This is equivalent to `aspect-ratio: 1;`.
/// @example aspect-ratio: 1;
/// @name .k-aspect-ratio-1
/// @group aspect-ratio
/// @contextType css

/// This is equivalent to `aspect-ratio: 1 / 1;`.
/// @example aspect-ratio: 1 / 1;
/// @name .k-aspect-ratio-square
/// @group aspect-ratio
/// @contextType css

/// This is equivalent to `aspect-ratio: 16 / 9;`.
/// @example aspect-ratio: 16 / 9;
/// @name .k-aspect-ratio-video
/// @group aspect-ratio
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-aspect-ratio"));

@mixin kendo-utils--layout--aspect-ratio() {
    @include module-render("utils-layout-aspect-ratio") {

        // Aspect ratio utility classes
        $kendo-utils-aspect-ratio: k-map-get( $kendo-utils, "aspect-ratio" ) !default;
        @include generate-utils( ratio, aspect-ratio, $kendo-utils-aspect-ratio );


        // Legacy aliases
        @include generate-utils( aspect-ratio, aspect-ratio, $kendo-utils-aspect-ratio );

    }
}

// #endregion
// #region @import "./_box-sizing.scss"; -> scss/layout/_box-sizing.scss
/// This is equivalent to `box-sizing: border-box;`.
/// @example box-sizing: border-box;
/// @name .k-box-sizing-border
/// @group box-sizing
/// @contextType css

/// This is equivalent to `box-sizing: content-box;`.
/// @example box-sizing: content-box;
/// @name .k-box-sizing-content
/// @group box-sizing
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-box-sizing"));

@mixin kendo-utils--layout--box-sizing() {
    @include module-render("utils-layout-box-sizing") {

        // box-sizing utility classes
        $kendo-utils-box-sizing: k-map-get( $kendo-utils, "box-sizing" ) !default;
        @include generate-utils( box-sizing, box-sizing, $kendo-utils-box-sizing );

    }
}

// #endregion
// #region @import "./_clear.scss"; -> scss/layout/_clear.scss
/// This is equivalent to `clear: left;`.
/// @example clear: left;
/// @name .k-clear-left
/// @group clear
/// @contextType css

/// This is equivalent to `clear: right;`.
/// @example clear: right;
/// @name .k-clear-right
/// @group clear
/// @contextType css

/// This is equivalent to `clear: both;`.
/// @example clear: both;
/// @name .k-clear-both
/// @group clear
/// @contextType css

/// This is equivalent to `clear: none;`.
/// @example clear: none;
/// @name .k-clear-none
/// @group clear
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-clear"));

@mixin kendo-utils--layout--clear() {
    @include module-render("utils-layout-clear") {

        // Clear utility classes
        $kendo-utils-clear: k-map-get( $kendo-utils, "clear" ) !default;
        @include generate-utils( clear, clear, $kendo-utils-clear );

    }
}

// #endregion
// #region @import "./_columns.scss"; -> scss/layout/_columns.scss
/// This is equivalent to `columns: 1;`.
/// @example columns: 1;
/// @name .k-columns-1
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 2;`.
/// @example columns: 2;
/// @name .k-columns-2
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 3;`.
/// @example columns: 3;
/// @name .k-columns-3
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 4;`.
/// @example columns: 4;
/// @name .k-columns-4
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 5;`.
/// @example columns: 5;
/// @name .k-columns-5
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 6;`.
/// @example columns: 6;
/// @name .k-columns-6
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 7;`.
/// @example columns: 7;
/// @name .k-columns-7
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 8;`.
/// @example columns: 8;
/// @name .k-columns-8
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 9;`.
/// @example columns: 9;
/// @name .k-columns-9
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 10;`.
/// @example columns: 10;
/// @name .k-columns-10
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 11;`.
/// @example columns: 11;
/// @name .k-columns-11
/// @group columns
/// @contextType css

/// This is equivalent to `columns: 12;`.
/// @example columns: 12;
/// @name .k-columns-12
/// @group columns
/// @contextType css

/// This is equivalent to `columns: auto;`.The number of columns is determined by other CSS properties, such as column-width.
/// @example columns: auto;
/// @name .k-columns-auto
/// @group columns
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-columns"));

@mixin kendo-utils--layout--columns() {
    @include module-render("utils-layout-columns") {

        // columns utility classes
        $kendo-utils-columns: k-map-get( $kendo-utils, "columns" ) !default;
        @include generate-utils( columns, columns, $kendo-utils-columns );

    }
}

// #endregion
// #region @import "./_display.scss"; -> scss/layout/_display.scss
/// This is equivalent to `display: none;`.
/// @example display: none;
/// @name .k-d-none
/// @group display
/// @contextType css

/// This is equivalent to `display: contents;`.
/// @example display: contents;
/// @name .k-d-contents
/// @group display
/// @contextType css

/// This is equivalent to `display: block;`.
/// @example display: block;
/// @name .k-d-block
/// @group display
/// @contextType css

/// This is equivalent to `display: inline;`.
/// @example display: inline;
/// @name .k-d-inline
/// @group display
/// @contextType css

/// This is equivalent to `display: inline-block;`.
/// @example display: inline-block;
/// @name .k-d-inline-block
/// @group display
/// @contextType css

/// This is equivalent to `display: flex;`.
/// @example display: flex;
/// @name .k-d-flex
/// @group display
/// @contextType css

/// This is equivalent to `display: inline-flex;`.
/// @example display: inline-flex;
/// @name .k-d-inline-flex
/// @group display
/// @contextType css

/// This is equivalent to `display: grid`. It defines the element as a grid container and establishes a new grid formatting context for its contents.
/// @example display: grid
/// @name .k-d-grid
/// @group display
/// @contextType css

/// This is equivalent to `display: inline-grid`. It defines the element as a grid container and establishes a new grid formatting context for its contents.
/// @example display: inline-grid
/// @name .k-d-inline-grid
/// @group display
/// @contextType css

/// This is equivalent to `display: table;`.
/// @example display: table;
/// @name .k-d-table
/// @group display
/// @contextType css

/// This is equivalent to `display: inline-table;`.
/// @example display: inline-table;
/// @name .k-d-inline-table
/// @group display
/// @contextType css

/// This is equivalent to `display: list-item;`.
/// @example display: list-item;
/// @name .k-d-list-item
/// @group display
/// @contextType css

/// This is equivalent to `display: table-row;`.
/// @example display: table-row;
/// @name .k-d-table-row
/// @group display
/// @contextType css

/// This is equivalent to `display: table-cell;`.
/// @example display: table-cell;
/// @name .k-d-table-cell
/// @group display
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-display"));

@mixin kendo-utils--layout--display() {
    @include module-render("utils-layout-display") {

        // Display utility classes
        $kendo-utils-display: k-map-get( $kendo-utils, "display" ) !default;
        @include generate-utils( d, display, $kendo-utils-display );


        // Legacy aliases
        @include generate-utils( display, display, $kendo-utils-display );
        .#{$kendo-prefix}d-flex-row { @extend .#{$kendo-prefix}d-flex, .#{$kendo-prefix}flex-row !optional; }
        .\!#{$kendo-prefix}d-flex-row { @extend .\!#{$kendo-prefix}d-flex, .\!#{$kendo-prefix}flex-row !optional; }
        .#{$kendo-prefix}d-flex-col { @extend .#{$kendo-prefix}d-flex, .#{$kendo-prefix}flex-col !optional; }
        .\!#{$kendo-prefix}d-flex-col { @extend .\!#{$kendo-prefix}d-flex, .\!#{$kendo-prefix}flex-row !optional; }

    }
}

@mixin kendo-utils--layout--display--responsive($key) {

    // Display responsive utility classes
    $kendo-utils-display: k-map-get( $kendo-utils, "display" ) !default;
    @include generate-utils( d-#{$key}, display, $kendo-utils-display, $important: false );

}

// #endregion
// #region @import "./_float.scss"; -> scss/layout/_float.scss
/// This is equivalent to `float: left;`.
/// @example float: left;
/// @name .k-float-left
/// @group float
/// @contextType css

/// This is equivalent to `float: right;`.
/// @example float: right;
/// @name .k-float-right
/// @group float
/// @contextType css

/// This is equivalent to `float: none;`.
/// @example float: none;
/// @name .k-float-none
/// @group float
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-float"));

@mixin kendo-utils--layout--float() {
    @include module-render("utils-layout-float") {

        // Float utility classes
        $kendo-utils-float: k-map-get( $kendo-utils, "float" ) !default;
        @include generate-utils( float, float, $kendo-utils-float );

    }
}

// #endregion
// #region @import "./_object-fit.scss"; -> scss/layout/_object-fit.scss
/// This is equivalent to `object-fit: contain;`.
/// @example object-fit: contain;
/// @name .k-object-fit-contain
/// @group object-fit
/// @contextType css

/// This is equivalent to `object-fit: cover;`.
/// @example object-fit: cover;
/// @name .k-object-fit-cover
/// @group object-fit
/// @contextType css

/// This is equivalent to `object-fit: fill;`.
/// @example object-fit: fill;
/// @name .k-object-fit-fill
/// @group object-fit
/// @contextType css

/// This is equivalent to `object-fit: scale-down;`.
/// @example object-fit: scale-down;
/// @name .k-object-fit-scale-down
/// @group object-fit
/// @contextType css

/// This is equivalent to `object-fit: initial;`.
/// @example object-fit: initial;
/// @name .k-object-fit-initial
/// @group object-fit
/// @contextType css

/// This is equivalent to `object-fit: none;`.
/// @example object-fit: none;
/// @name .k-object-fit-none
/// @group object-fit
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-object-fit"));

@mixin kendo-utils--layout--object-fit() {
    @include module-render("utils-layout-object-fit") {

        // object-fit utility classes
        $kendo-utils-object-fit: k-map-get( $kendo-utils, "object-fit" ) !default;
        @include generate-utils( object-fit, object-fit, $kendo-utils-object-fit );

    }
}

// #endregion
// #region @import "./_object-position.scss"; -> scss/layout/_object-position.scss
/// This is equivalent to `object-position: center;`.
/// @example object-position: center;
/// @name .k-object-position-center
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: top;`.
/// @example object-position: top;
/// @name .k-object-position-top
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: right;`.
/// @example object-position: right;
/// @name .k-object-position-right
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: bottom;`.
/// @example object-position: bottom;
/// @name .k-object-position-bottom
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: left;`.
/// @example object-position: left;
/// @name .k-object-position-left
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: top left;`.
/// @example object-position: top left;
/// @name .k-object-position-top-left
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: top right;`.
/// @example object-position: top right;
/// @name .k-object-position-top-right
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: bottom left;`.
/// @example object-position: bottom left;
/// @name .k-object-position-bottom-left
/// @group object-position
/// @contextType css

/// This is equivalent to `object-position: bottom right;`.
/// @example object-position: bottom right;
/// @name .k-object-position-bottom-right
/// @group object-position
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-object-position"));

@mixin kendo-utils--layout--object-position() {
    @include module-render("utils-layout-object-position") {

        // object-position utility classes
        $kendo-utils-object-position: k-map-get( $kendo-utils, "object-position" ) !default;
        @include generate-utils( object-position, object-position, $kendo-utils-object-position );

    }
}

// #endregion
// #region @import "./_overflow.scss"; -> scss/layout/_overflow.scss
/// This is equivalent to `overflow: auto;`.
/// @example overflow: auto;
/// @name .k-overflow-auto
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow: hidden;`.
/// @example overflow: hidden;
/// @name .k-overflow-hidden
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow: visible;`.
/// @example overflow: visible;
/// @name .k-overflow-visible
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow: scroll;`.
/// @example overflow: scroll;
/// @name .k-overflow-scroll
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow: clip;`.
/// @example overflow: clip;
/// @name .k-overflow-clip
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-x: auto;`.
/// @example overflow-x: auto;
/// @name .k-overflow-x-auto
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-x: hidden;`.
/// @example overflow-x: hidden;
/// @name .k-overflow-x-hidden
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-x: visible;`.
/// @example overflow-x: visible;
/// @name .k-overflow-x-visible
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-x: scroll;`.
/// @example overflow-x: scroll;
/// @name .k-overflow-x-scroll
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-x: clip;`.
/// @example overflow-x: clip;
/// @name .k-overflow-x-clip
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-y: auto;`.
/// @example overflow-y: auto;
/// @name .k-overflow-y-auto
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-y: hidden;`.
/// @example overflow-y: hidden;
/// @name .k-overflow-y-hidden
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-y: visible;`.
/// @example overflow-y: visible;
/// @name .k-overflow-y-visible
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-y: scroll;`.
/// @example overflow-y: scroll;
/// @name .k-overflow-y-scroll
/// @group overflow
/// @contextType css

/// This is equivalent to `overflow-y: clip;`.
/// @example overflow-y: clip;
/// @name .k-overflow-y-clip
/// @group overflow
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-overflow"));

@mixin kendo-utils--layout--overflow() {
    @include module-render("utils-layout-overflow") {

        // Overflow utility classes
        $kendo-utils-overflow: k-map-get( $kendo-utils, "overflow" ) !default;
        @include generate-utils( overflow, overflow, $kendo-utils-overflow );
        @include generate-utils( overflow-x, overflow-x, $kendo-utils-overflow );
        @include generate-utils( overflow-y, overflow-y, $kendo-utils-overflow );

    }
}

// #endregion
// #region @import "./_placement.scss"; -> scss/layout/_placement.scss
/// This is equivalent to `top: 0;`.
/// @example top: 0;
/// @name .k-top-0
/// @group placement
/// @contextType css

/// This is equivalent to `right: 0;`.
/// @example right: 0;
/// @name .k-right-0
/// @group placement
/// @contextType css

/// This is equivalent to `bottom: 0;`.
/// @example bottom: 0;
/// @name .k-bottom-0
/// @group placement
/// @contextType css

/// This is equivalent to `left: 0;`.
/// @example left: 0;
/// @name .k-left-0
/// @group placement
/// @contextType css

/// This is equivalent to `top: 0;`.
/// @example top: 0;
/// @name .k-pos-top-0
/// @group placement
/// @contextType css

/// This is equivalent to `right: 0;`.
/// @example right: 0;
/// @name .k-pos-right-0
/// @group placement
/// @contextType css

/// This is equivalent to `bottom: 0;`.
/// @example bottom: 0;
/// @name .k-pos-bottom-0
/// @group placement
/// @contextType css

/// This is equivalent to `left: 0;`.
/// @example left: 0;
/// @name .k-pos-left-0
/// @group placement
/// @contextType css

/// This is equivalent to `top: 0; left: 0;`.
/// @example top: 0; left: 0;
/// @name .k-top-left-0
/// @group placement
/// @contextType css

/// This is equivalent to `top: 0; right: 0;`.
/// @example top: 0; right: 0;
/// @name .k-top-right-0
/// @group placement
/// @contextType css

/// This is equivalent to `bottom: 0; left: 0;`.
/// @example bottom: 0; left: 0;
/// @name .k-bottom-left-0
/// @group placement
/// @contextType css

/// This is equivalent to `bottom: 0; right: 0;`.
/// @example bottom: 0; right: 0;
/// @name .k-bottom-right-0
/// @group placement
/// @contextType css

/// This is equivalent to `inset: 0;`.
/// @example inset: 0;
/// @name .k-inset-0
/// @group placement
/// @contextType css

/// This is equivalent to `inset-inline: 0;`.
/// @example inset-inline: 0;
/// @name .k-inset-x-0
/// @group placement
/// @contextType css

/// This is equivalent to `inset-block: 0;`.
/// @example inset-block: 0;
/// @name .k-inset-y-0
/// @group placement
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-placement"));

@mixin kendo-utils--layout--placement() {
    @include module-render("utils-layout-placement") {

        // Top / right / bottom / left
        $kendo-utils-placement: k-map-get( $kendo-utils, "placement" ) !default;
        @include generate-utils( top, top, $kendo-utils-placement );
        @include generate-utils( right, right, $kendo-utils-placement );
        @include generate-utils( bottom, bottom, $kendo-utils-placement );
        @include generate-utils( left, left, $kendo-utils-placement );


        // placement length utility classes
        @each $side in (top, right, bottom, left) {
            .#{$kendo-prefix}#{$side},
            .#{$kendo-prefix}pos-#{$side} { #{$side}: 0; }
        }

        // Inset utility classes
        $kendo-utils-inset: k-map-get( $kendo-utils, "inset" ) !default;
        @include generate-utils( inset, inset, $kendo-utils-inset );
        @include generate-utils( inset-x, inset-inline, $kendo-utils-inset );
        @include generate-utils( inset-y, inset-block, $kendo-utils-inset );
        @include generate-utils( top-left, ( top, left ), $kendo-utils-inset );
        @include generate-utils( top-right, ( top, right ), $kendo-utils-inset );
        @include generate-utils( bottom-left, ( bottom, left ), $kendo-utils-inset );
        @include generate-utils( bottom-right, ( bottom, right ), $kendo-utils-inset );

    }
}

// #endregion
// #region @import "./_position.scss"; -> scss/layout/_position.scss
/// This is equivalent to `position: static;`.
/// @example position: static;
/// @name .k-pos-static
/// @group position
/// @contextType css

/// This is equivalent to `position: relative;`.
/// @example position: relative;
/// @name .k-pos-relative
/// @group position
/// @contextType css

/// This is equivalent to `position: absolute;`.
/// @example position: absolute;
/// @name .k-pos-absolute
/// @group position
/// @contextType css

/// This is equivalent to `position: fixed;`.
/// @example position: fixed;
/// @name .k-pos-fixed
/// @group position
/// @contextType css

/// This is equivalent to `position: sticky;`.
/// @example position: sticky;
/// @name .k-pos-sticky
/// @group position
/// @contextType css


// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-position"));

@mixin kendo-utils--layout--position() {
    @include module-render("utils-layout-position") {

        // Position utility classes
        $kendo-utils-position: k-map-get( $kendo-utils, "position" ) !default;
        @include generate-utils( pos, position, $kendo-utils-position );


        // Legacy aliases
        .#{$kendo-prefix}static { @extend .#{$kendo-prefix}pos-static !optional; }
        .\!#{$kendo-prefix}static { @extend .\!#{$kendo-prefix}pos-static !optional; }
        .#{$kendo-prefix}relative { @extend .#{$kendo-prefix}pos-relative !optional; }
        .\!#{$kendo-prefix}relative { @extend .\!#{$kendo-prefix}pos-relative !optional; }
        .#{$kendo-prefix}absolute { @extend .#{$kendo-prefix}pos-absolute !optional; }
        .\!#{$kendo-prefix}absolute { @extend .\!#{$kendo-prefix}pos-absolute !optional; }
        .#{$kendo-prefix}fixed { @extend .#{$kendo-prefix}pos-fixed !optional; }
        .\!#{$kendo-prefix}fixed { @extend .\!#{$kendo-prefix}pos-fixed !optional; }
        .#{$kendo-prefix}sticky { @extend .#{$kendo-prefix}pos-sticky !optional; }
        .\!#{$kendo-prefix}sticky { @extend .\!#{$kendo-prefix}pos-sticky !optional; }
        
    }
}
// #endregion
// #region @import "./_visibility.scss"; -> scss/layout/_visibility.scss
/// This is equivalent to `visibility: visble;`.
/// @example visibility: visble;
/// @name .k-visible
/// @group visibility
/// @contextType css

/// This is equivalent to `visibility: hidden;`.
/// @example visibility: hidden;
/// @name .k-invisible
/// @group visibility
/// @contextType css

/// This is equivalent to `visibility: collapse;`.
/// @example visibility: collapse;
/// @name .k-collapse
/// @group visibility
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-visibility"));

@mixin kendo-utils--layout--visibility() {
    @include module-render("utils-layout-visibility") {

        // Visibility utility classes
        $kendo-utils-visibility: k-map-get( $kendo-utils, "visibility" ) !default;
        @include generate-utils( visibility, visibility, $kendo-utils-visibility );

        // Legacy aliases
        .#{$kendo-prefix}visible { @extend .#{$kendo-prefix}visibility-visible !optional; }
        .\!#{$kendo-prefix}visible { @extend .\!#{$kendo-prefix}visibility-visible !optional; }
        .#{$kendo-prefix}invisible { @extend .#{$kendo-prefix}visibility-hidden !optional; }
        .\!#{$kendo-prefix}invisible { @extend .\!#{$kendo-prefix}visibility-hidden !optional; }

    }
}

// #endregion
// #region @import "./_zindex.scss"; -> scss/layout/_zindex.scss
/// This is equivalent to `z-index: 0;`.
/// @example z-index: 0;
/// @name .k-z-0
/// @group zindex
/// @contextType css

/// This is equivalent to `z-index: 10;`.
/// @example z-index: 10;
/// @name .k-z-10
/// @group zindex
/// @contextType css

/// This is equivalent to `z-index: 20;`.
/// @example z-index: 20;
/// @name .k-z-20
/// @group zindex
/// @contextType css

/// This is equivalent to `z-index: 30;`.
/// @example z-index: 30;
/// @name .k-z-30
/// @group zindex
/// @contextType css

/// This is equivalent to `z-index: 40;`.
/// @example z-index: 40;
/// @name .k-z-40
/// @group zindex
/// @contextType css

/// This is equivalent to `z-index: 50;`.
/// @example z-index: 50;
/// @name .k-z-50
/// @group zindex
/// @contextType css

/// This is equivalent to `z-index: auto;`.
/// @example z-index: auto;
/// @name .k-z-auto
/// @group zindex
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-layout-zindex"));

@mixin kendo-utils--layout--zindex() {
    @include module-render("utils-layout-zindex") {

        // Z-index utility classes
        $kendo-utils-zindex: k-map-get( $kendo-utils, "zindex" ) !default;
        @include generate-utils( z, z-index, $kendo-utils-zindex );

    }
}

// #endregion


@mixin kendo-utils--layout() {
    @include kendo-utils--layout--aspect-ratio();
    @include kendo-utils--layout--box-sizing();
    @include kendo-utils--layout--clear();
    @include kendo-utils--layout--columns();
    @include kendo-utils--layout--display();
    @include kendo-utils--layout--float();
    @include kendo-utils--layout--object-fit();
    @include kendo-utils--layout--object-position();
    @include kendo-utils--layout--overflow();
    @include kendo-utils--layout--placement();
    @include kendo-utils--layout--position();
    @include kendo-utils--layout--visibility();
    @include kendo-utils--layout--zindex();
}

@mixin kendo-utils--layout--responsive($key) {
    @include kendo-utils--layout--display--responsive($key);
}

// #endregion
// #region @import "./responsive-layout/index.import.scss"; -> scss/responsive-layout/index.import.scss
// #region @import "./_container.scss"; -> scss/responsive-layout/_container.scss
@mixin kendo-utils--responsive-layout--container() {

    // Page Container
    .k-container,
    .k-container-fluid {
        margin: 0 auto;
        width: 100%;
        display: flex;
        flex-direction: column;
        box-sizing: border-box;
    }

}

@mixin kendo-utils--responsive-layout--container--responsive($key, $val) {

    // Page Container responsive
    .k-container {
        max-width: var(--kendo-container-#{$key}-max-width, #{$val});
    }

}

// #endregion
// #region @import "./_row.scss"; -> scss/responsive-layout/_row.scss
@mixin kendo-utils--responsive-layout--row() {

    // Row
    .k-row {
        margin-top: calc( -1 * var(--kendo-col-gap, 0) );
        margin-left: calc( -.5 * var(--kendo-col-gap, 0) );
        margin-right: calc( -.5 * var(--kendo-col-gap, 0) );
        display: flex;
        flex-flow: row wrap;
        box-sizing: border-box;

        > * {
            margin-top: var(--kendo-col-gap, 0);
            padding-left: calc( var(--kendo-col-gap, 0) * .5 );
            padding-right: calc( var(--kendo-col-gap, 0) * .5 );
            width: 100%;
            box-sizing: border-box;
        }
    }

}

// #endregion
// #region @import "./_col.scss"; -> scss/responsive-layout/_col.scss
@mixin kendo-utils--responsive-layout--col() {

    // Column
    .k-col {
        flex: 1 0 0%;
    }

    // Column Sizes
    @for $i from 1 through 100 {
	    .k-col-size-#{$i} {
            flex: 0 0 auto;
            width: $i * 1%;
        }
	}

    @each $i, $n in $kendo-fraction-classes {
        .k-col-size-#{$i} {
            flex: 0 0 auto;
            width: $n;
        }
    }

}

@mixin kendo-utils--responsive-layout--col--responsive($key) {

    // Column responsive
    .k-col-#{$key} {
        flex: 1 0 0%;
    }

    // Column Sizes responsive
    @for $i from 1 through 100 {
        .k-col-#{$key}-size-#{$i} {
            flex: 0 0 auto;
            width: $i * 1%;
        }
    }

    @each $i, $n in $kendo-fraction-classes {
        .k-col-#{$key}-size-#{$i} {
            flex: 0 0 auto;
            width: $n;
        }
    }
}



// #endregion
// #region @import "./_col-gap.scss"; -> scss/responsive-layout/_col-gap.scss
@mixin kendo-utils--responsive-layout--col-gap() {

    // Columns gap
    $kendo-utils-col-gap: k-map-get( $kendo-utils, "gap" ) !default;

    @each $key, $val in $kendo-utils-col-gap {
        $_key: k-escape-class-name( $key );
        .k-col-gap-#{$_key} {
            --kendo-col-gap: #{$val};
        }
    }

}

@mixin kendo-utils--responsive-layout--col-gap--responsive($breakpoint) {

    // Columns gap responsive
    $kendo-utils-col-gap: k-map-get( $kendo-utils, "gap" ) !default;

    @each $key, $val in $kendo-utils-col-gap {
        $_key: k-escape-class-name( $key );
        .k-col-gap-#{$breakpoint}-#{$_key} {
            --kendo-col-gap: #{$val};
        }
    }
}



// #endregion


@mixin kendo-utils--responsive-layout() {
    @include kendo-utils--responsive-layout--container();
    @include kendo-utils--responsive-layout--row();
    @include kendo-utils--responsive-layout--col();
    @include kendo-utils--responsive-layout--col-gap();

    @each $key, $val in $kendo-breakpoints {
        @include kendo-breakpoint-up($key) {
            @include kendo-utils--responsive-layout--col--responsive($key);
            @include kendo-utils--responsive-layout--col-gap--responsive($key);
        }
    }

    @each $key, $val in $kendo-container-max-widths {
        @include kendo-breakpoint-up($key) {
            @include kendo-utils--responsive-layout--container--responsive($key, $val);
        }
    }
}

// #endregion
// #region @import "./flex-grid/index.import.scss"; -> scss/flex-grid/index.import.scss
// #region @import "./_align-content.scss"; -> scss/flex-grid/_align-content.scss
/// This is equivalent to `align-content: normal;`.
/// @example align-content: normal;
/// @name .k-align-content-normal
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: stretch;`.
/// @example align-content: stretch;
/// @name .k-align-content-stretch
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: center;`.
/// @example align-content: center;
/// @name .k-align-content-center
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: start;`.
/// @example align-content: start;
/// @name .k-align-content-start
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: end;`.
/// @example align-content: end;
/// @name .k-align-content-end
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: flex-start;`.
/// @example align-content: flex-start;
/// @name .k-align-content-flex-start
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: flex-end;`.
/// @example align-content: flex-end;
/// @name .k-align-content-flex-end
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: baseline;`.
/// @example align-content: baseline;
/// @name .k-align-content-baseline
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: first baseline;`.
/// @example align-content: first baseline;
/// @name .k-align-content-first-baseline
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: last baseline;`.
/// @example align-content: last baseline;
/// @name .k-align-content-last-baseline
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: space-between;`.
/// @example align-content: space-between;
/// @name .k-align-content-between
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: space-around;`.
/// @example align-content: space-around;
/// @name .k-align-content-around
/// @group align-content
/// @contextType css

/// This is equivalent to `align-content: space-evenly;`.
/// @example align-content: space-evenly;
/// @name .k-align-content-evenly
/// @group align-content
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-align-content"));

@mixin kendo-utils--flex-grid--align-content() {
    @include module-render("utils-flex-grid-align-content") {

        // Align content utility classes
        $kendo-utils-align-content: k-map-get( $kendo-utils, "align-content" ) !default;
        @include generate-utils( align-content, align-content, $kendo-utils-align-content );

    }
}

// #endregion
// #region @import "./_align-items.scss"; -> scss/flex-grid/_align-items.scss
/// This is equivalent to `align-items: normal;`.
/// @example align-items: normal;
/// @name .k-align-items-normal
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: stretch;`.
/// @example align-items: stretch;
/// @name .k-align-items-stretch
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: center;`.
/// @example align-items: center;
/// @name .k-align-items-stretch
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: start;`.
/// @example align-items: start;
/// @name .k-align-items-start
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: end;`.
/// @example align-items: end;
/// @name .k-align-items-end
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: flex-start;`.
/// @example align-items: flex-start;
/// @name .k-align-items-flex-start
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: flex-end;`.
/// @example align-items: flex-end;
/// @name .k-align-items-flex-end
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: baseline;`.
/// @example align-items: baseline;
/// @name .k-align-items-baseline
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: first baseline;`.
/// @example align-items: first baseline;
/// @name .k-align-items-first-baseline
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: last baseline;`.
/// @example align-items: last baseline;
/// @name .k-align-items-last-baseline
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: self-start;`.
/// @example align-items: self-start;
/// @name .k-align-items-self-start
/// @group align-items
/// @contextType css

/// This is equivalent to `align-items: self-end;`.
/// @example align-items: self-end;
/// @name .k-align-items-self-end
/// @group align-items
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-align-items"));

@mixin kendo-utils--flex-grid--align-items() {
    @include module-render("utils-flex-grid-align-items") {

        // Align items utility classes
        $kendo-utils-align-items: k-map-get( $kendo-utils, "align-items" ) !default;
        @include generate-utils( align-items, align-items, $kendo-utils-align-items );

    }
}

// #endregion
// #region @import "./_align-self.scss"; -> scss/flex-grid/_align-self.scss
/// This is equivalent to `align-self: auto;`.
/// @example align-self: auto;
/// @name .k-align-self-auto
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: normal;`.
/// @example align-self: normal;
/// @name .k-align-self-normal
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: stretch;`.
/// @example align-self: stretch;
/// @name .k-align-self-stretch
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: center;`.
/// @example align-self: center;
/// @name .k-align-self-center
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: start;`.
/// @example align-self: start;
/// @name .k-align-self-start
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: end;`.
/// @example align-self: end;
/// @name .k-align-self-end
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: flex-start;`.
/// @example align-self: flex-start;
/// @name .k-align-self-flex-start
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: flex-end;`.
/// @example align-self: flex-end;
/// @name .k-align-self-flex-end
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: baseline;`.
/// @example align-self: baseline;
/// @name .k-align-self-baseline
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: first baseline;`.
/// @example align-self: first baseline;
/// @name .k-align-self-first-baseline
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: last baseline;`.
/// @example align-self: last baseline;
/// @name .k-align-self-last-baseline
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: self-start;`.
/// @example align-self: self-start;
/// @name .k-align-self-self-start
/// @group align-self
/// @contextType css

/// This is equivalent to `align-self: self-end;`.
/// @example align-self: self-end;
/// @name .k-align-self-self-end
/// @group align-self
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-align-self"));

@mixin kendo-utils--flex-grid--align-self() {
    @include module-render("utils-flex-grid-align-self") {

        // Align self utility classes
        $kendo-utils-align-self: k-map-get( $kendo-utils, "align-self" ) !default;
        @include generate-utils( align-self, align-self, $kendo-utils-align-self );

    }
}

// #endregion
// #region @import "./_flex-basis.scss"; -> scss/flex-grid/_flex-basis.scss
/// This is equivalent to `flex-basis: auto;`.
/// @example flex-basis: auto;
/// @name .k-flex-basis-auto
/// @group flex-basis
/// @contextType css

/// This is equivalent to `flex-basis: 0;`.
/// @example flex-basis: 0;
/// @name .k-flex-basis-0
/// @group flex-basis
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-flex-basis"));

@mixin kendo-utils--flex-grid--flex-basis() {
    @include module-render("utils-flex-grid-flex-basis") {

        // Flex basis utility classes
        $kendo-utils-flex-basis: k-map-get( $kendo-utils, "flex-basis" ) !default;
        @include generate-utils( basis, flex-basis, $kendo-utils-flex-basis );
        @include generate-utils( flex-basis, flex-basis, $kendo-utils-flex-basis );

    }
}

// #endregion
// #region @import "./_flex-direction.scss"; -> scss/flex-grid/_flex-direction.scss
/// This is equivalent to `flex-direction: row;`.
/// @example flex-direction: row;
/// @name .k-flex-row
/// @group flex-direction
/// @contextType css

/// This is equivalent to `flex-direction: row-reverse;`.
/// @example flex-direction: row-reverse;
/// @name .k-flex-row-reverse
/// @group flex-direction
/// @contextType css

/// This is equivalent to `flex-direction: column;`.
/// @example flex-direction: column;
/// @name .k-flex-col
/// @group flex-direction
/// @contextType css

/// This is equivalent to `flex-direction: column-reverse;`.
/// @example flex-direction: column-reverse;
/// @name .k-flex-col-reverse
/// @group flex-direction
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-flex-direction"));

@mixin kendo-utils--flex-grid--flex-direction() {
    @include module-render("utils-flex-grid-flex-direction") {

        // Flex direction utility classes
        $kendo-utils-flex-direction: k-map-get( $kendo-utils, "flex-direction" ) !default;
        @include generate-utils( flex, flex-direction, $kendo-utils-flex-direction );


        // Legacy aliases
        .#{$kendo-prefix}flex-column { @extend .#{$kendo-prefix}flex-col !optional; }
        .#{$kendo-prefix}flex-column-reverse { @extend .#{$kendo-prefix}flex-col-reverse !optional; }

    }
}

@mixin kendo-utils--flex-grid--flex-direction--responsive($key) {

    // Flex direction responsive utility classes
    $kendo-utils-flex-direction: k-map-get( $kendo-utils, "flex-direction" ) !default;
    @include generate-utils( flex-#{$key}, flex-direction, $kendo-utils-flex-direction, $important: false );

}

// #endregion
// #region @import "./_flex-grow.scss"; -> scss/flex-grid/_flex-grow.scss
/// This is equivalent to `flex-grow: 1;`.
/// @example flex-grow: 1;
/// @name .k-flex-grow
/// @group flex-grow
/// @contextType css

/// This is equivalent to `flex-grow: 0;`.
/// @example flex-grow: 0;
/// @name .k-flex-grow-0
/// @group flex-grow
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-flex-grow"));

@mixin kendo-utils--flex-grid--flex-grow() {
    @include module-render("utils-flex-grid-flex-grow") {

        // Flex grow utility classes
        $kendo-utils-flex-grow: k-map-get( $kendo-utils, "flex-grow" ) !default;
        @include generate-utils( grow, flex-grow, $kendo-utils-flex-grow );
        @include generate-utils( flex-grow, flex-grow, $kendo-utils-flex-grow );

    }
}

// #endregion
// #region @import "./_flex-shrink.scss"; -> scss/flex-grid/_flex-shrink.scss
/// This is equivalent to `flex-shrink: 1;`.
/// @example flex-shrink: 1;
/// @name .k-flex-shrink
/// @group flex-shrink
/// @contextType css

/// This is equivalent to `flex-shrink: 0;`.
/// @example flex-shrink: 0;
/// @name .k-flex-shrink-0
/// @group flex-shrink
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-flex-shrink"));

@mixin kendo-utils--flex-grid--flex-shrink() {
    @include module-render("utils-flex-grid-flex-shrink") {

        // Flex shrink utility classes
        $kendo-utils-flex-shrink: k-map-get( $kendo-utils, "flex-shrink" ) !default;
        @include generate-utils( shrink, flex-shrink, $kendo-utils-flex-shrink );
        @include generate-utils( flex-shrink, flex-shrink, $kendo-utils-flex-shrink );

    }
}

// #endregion
// #region @import "./_flex-wrap.scss"; -> scss/flex-grid/_flex-wrap.scss
/// This is equivalent to `flex-wrap: wrap;`.
/// @example flex-wrap: wrap
/// @name .k-flex-wrap
/// @group flex-wrap
/// @contextType css

/// This is equivalent to `flex-wrap: nowrap;`.
/// @example flex-wrap: nowrap
/// @name .k-flex-nowrap
/// @group flex-wrap
/// @contextType css

/// This is equivalent to `flex-wrap: wrap-reverse;`.
/// @example flex-wrap: wrap-reverse
/// @name .k-flex-wrap-reverse
/// @group flex-wrap
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-flex-wrap"));

@mixin kendo-utils--flex-grid--flex-wrap() {
    @include module-render("utils-flex-grid-flex-wrap") {

        // Flex wrap utility classes
        $kendo-utils-flex-wrap: k-map-get( $kendo-utils, "flex-wrap" ) !default;
        @include generate-utils( flex, flex-wrap, $kendo-utils-flex-wrap );

    }
}

// #endregion
// #region @import "./_flex.scss"; -> scss/flex-grid/_flex.scss
/// This is equivalent to `flex: 1 1 0%;`.
/// @example flex: 1 1 0%;
/// @name .k-flex-1
/// @group flex
/// @contextType css

/// This is equivalent to `flex: 1 1 auto;`.
/// @example flex: 1 1 auto;
/// @name .k-flex-auto
/// @group flex
/// @contextType css

/// This is the same as `flex: initial;` and the shorthand for the default value: `flex: 0 1 auto`. It sizes the item based on its `width`/`height` properties (or its content if not set). It makes the flex item inflexible when there is some free space left, but allows it to shrink to its minimum when there is not enough space. The alignment abilities or `auto` margins can be used to align flex items along the main axis.
/// @example flex: initial;
/// @name .k-flex-initial
/// @group flex
/// @contextType css

/// This is equivalent to `flex: 0 0 auto;`.
/// @example flex: 0 0 auto;
/// @name .k-flex-none
/// @group flex
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-flex"));

@mixin kendo-utils--flex-grid--flex() {
    @include module-render("utils-flex-grid-flex") {

        // Flex utility classes
        $kendo-utils-flex: k-map-get( $kendo-utils, "flex" ) !default;
        @include generate-utils( flex, flex, $kendo-utils-flex );

    }
}

// #endregion
// #region @import "./_gap.scss"; -> scss/flex-grid/_gap.scss
/// This is equivalent to `gap: 0;`.
/// @example gap: 0;
/// @name .k-gap-0
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 1px;`.
/// @example gap: 1px;
/// @name .k-gap-1px
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 0.25rem;`.
/// @example gap: 0.25rem;
/// @name .k-gap-1
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 0.25rem;`.
/// @example gap: 0.25rem;
/// @name .k-gap-xs
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 0.5rem;`.
/// @example gap: 0.5rem;
/// @name .k-gap-sm
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 0.75rem;`.
/// @example gap: 0.75rem;
/// @name .k-gap-md
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 1rem;`.
/// @example gap: 1rem;
/// @name .k-gap-lg
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 1.5rem;`.
/// @example gap: 1.5rem;
/// @name .k-gap-xl
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 0.125rem;`.
/// @example gap: 0.125rem;
/// @name .k-gap-thin
/// @group gap
/// @contextType css

/// This is equivalent to `gap: 1px;`.
/// @example gap: 1px;
/// @name .k-gap-hair
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 0;`.
/// @example column-gap: 0;
/// @name .k-gap-x-0
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 1px;`.
/// @example column-gap: 1px;
/// @name .k-gap-x-1px
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 0.25rem;`.
/// @example column-gap: 0.25rem;
/// @name .k-gap-x-1
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 0.25rem;`.
/// @example column-gap: 0.25rem;
/// @name .k-gap-x-xs
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 0.5rem;`.
/// @example column-gap: 0.5rem;
/// @name .k-gap-x-sm
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 0.75rem;`.
/// @example column-gap: 0.75rem;
/// @name .k-gap-x-md
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 1rem;`.
/// @example column-gap: 1rem;
/// @name .k-gap-x-lg
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 1.5rem;`.
/// @example column-gap: 1.5rem;
/// @name .k-gap-x-xl
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 0.125rem;`.
/// @example column-gap: 0.125rem;
/// @name .k-gap-x-thin
/// @group gap
/// @contextType css

/// This is equivalent to `column-gap: 1px;`.
/// @example column-gap: 1px;
/// @name .k-gap-x-hair
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 0;`.
/// @example row-gap: 0;
/// @name .k-gap-y-0
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 1px;`.
/// @example row-gap: 1px;
/// @name .k-gap-y-1px
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 0.25rem;`.
/// @example row-gap: 0.25rem;
/// @name .k-gap-y-1
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 0.25rem;`.
/// @example row-gap: 0.25rem;
/// @name .k-gap-y-xs
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 0.5rem;`.
/// @example row-gap: 0.5rem;
/// @name .k-gap-y-sm
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 0.75rem;`.
/// @example row-gap: 0.75rem;
/// @name .k-gap-y-md
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 1rem;`.
/// @example row-gap: 1rem;
/// @name .k-gap-y-lg
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 1.5rem;`.
/// @example row-gap: 1.5rem;
/// @name .k-gap-y-xl
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 0.125rem;`.
/// @example row-gap: 0.125rem;
/// @name .k-gap-y-thin
/// @group gap
/// @contextType css

/// This is equivalent to `row-gap: 1px;`.
/// @example row-gap: 1px;
/// @name .k-gap-y-hair
/// @group gap
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-gap"));

@mixin kendo-utils--flex-grid--gap() {
    @include module-render("utils-flex-grid-gap") {

        // Gap utility classes
        $kendo-utils-gap: k-map-get( $kendo-utils, "gap" ) !default;
        @include generate-utils( gap, gap, $kendo-utils-gap, $css-var: "spacing" );
        @include generate-utils( gap-x, column-gap, $kendo-utils-gap, $css-var: "spacing" );
        @include generate-utils( gap-y, row-gap, $kendo-utils-gap, $css-var: "spacing" );

    }
}

@mixin kendo-utils--flex-grid--gap--responsive($key) {

    // Gap responsive utility classes
    $kendo-utils-gap: k-map-get( $kendo-utils, "gap" ) !default;
    @include generate-utils( gap-#{$key}, gap, $kendo-utils-gap, $css-var: "spacing", $important: false );
    @include generate-utils( gap-x-#{$key}, column-gap, $kendo-utils-gap, $css-var: "spacing", $important: false );
    @include generate-utils( gap-y-#{$key}, row-gap, $kendo-utils-gap, $css-var: "spacing", $important: false );

}

// #endregion
// #region @import "./_grid-auto-columns.scss"; -> scss/flex-grid/_grid-auto-columns.scss
/// This is equivalent to `grid-auto-columns: auto;`.
/// @example grid-auto-columns: auto;
/// @name .k-grid-auto-cols-auto
/// @group grid-auto-columns
/// @contextType css

/// This is equivalent to `grid-auto-columns: min-content;`.
/// @example grid-auto-columns: min-content;
/// @name .k-grid-auto-cols-min
/// @group grid-auto-columns
/// @contextType css

/// This is equivalent to `grid-auto-columns: max-content;`.
/// @example grid-auto-columns: max-content;
/// @name .k-grid-auto-cols-max
/// @group grid-auto-columns
/// @contextType css

/// This is equivalent to `grid-auto-columns: minmax( 0, 1fr );`.
/// @example grid-auto-columns: minmax( 0, 1fr );
/// @name .k-grid-auto-cols-fr
/// @group grid-auto-columns
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-grid-auto-columns"));

@mixin kendo-utils--flex-grid--grid-auto-columns() {
    @include module-render("utils-flex-grid-grid-auto-columns") {

        // Grid auto columns utility classes
        $kendo-utils-grid-auto-columns: k-map-get( $kendo-utils, "grid-auto-columns" ) !default;
        @include generate-utils( grid-auto-cols, grid-auto-columns, $kendo-utils-grid-auto-columns );

    }
}

// #endregion
// #region @import "./_grid-auto-flow.scss"; -> scss/flex-grid/_grid-auto-flow.scss
/// This is equivalent to `grid-auto-flow: row;`.
/// @example grid-auto-flow: row;
/// @name .k-grid-flow-row
/// @group grid-auto-flow
/// @contextType css

/// This is equivalent to `grid-auto-flow: column;`.
/// @example grid-auto-flow: column;
/// @name .k-grid-flow-column
/// @group grid-auto-flow
/// @contextType css

/// This is equivalent to `grid-auto-flow: dense;`.
/// @example grid-auto-flow: dense;
/// @name .k-grid-flow-dense
/// @group grid-auto-flow
/// @contextType css

/// This is equivalent to `grid-auto-flow: row dense;`.
/// @example grid-auto-flow: row dense;
/// @name .k-grid-flow-row-dense
/// @group grid-auto-flow
/// @contextType css

/// This is equivalent to `grid-auto-flow: col dense;`.
/// @example grid-auto-flow: col dense;
/// @name .k-grid-flow-col-dense
/// @group grid-auto-flow
/// @contextType css

/// This is equivalent to `grid-auto-flow: unset;`.
/// @example grid-auto-flow: unset;
/// @name .k-grid-flow-unset
/// @group grid-auto-flow
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-grid-auto-flow"));

@mixin kendo-utils--flex-grid--grid-auto-flow() {
    @include module-render("utils-flex-grid-grid-auto-flow") {

        // Grid auto flow utility classes
        $kendo-utils-grid-auto-flow: k-map-get( $kendo-utils, "grid-auto-flow" ) !default;
        @include generate-utils( grid-flow, grid-auto-flow, $kendo-utils-grid-auto-flow );

    }
}

// #endregion
// #region @import "./_grid-auto-rows.scss"; -> scss/flex-grid/_grid-auto-rows.scss
/// This is equivalent to `grid-auto-rows: auto;`.
/// @example grid-auto-rows: auto;
/// @name .k-grid-auto-rows-auto
/// @group grid-auto-rows
/// @contextType css

/// This is equivalent to `grid-auto-rows: min-content;`.
/// @example grid-auto-rows: min-content;
/// @name .k-grid-auto-rows-min
/// @group grid-auto-rows
/// @contextType css

/// This is equivalent to `grid-auto-rows: max-content;`.
/// @example grid-auto-rows: max-content;
/// @name .k-grid-auto-rows-max
/// @group grid-auto-rows
/// @contextType css

/// This is equivalent to `grid-auto-rows: minmax( 0, 1fr );`.
/// @example grid-auto-rows: minmax( 0, 1fr );
/// @name .k-grid-auto-rows-fr
/// @group grid-auto-rows
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-grid-auto-rows"));

@mixin kendo-utils--flex-grid--grid-auto-rows() {
    @include module-render("utils-flex-grid-grid-auto-rows") {

        // Grid auto rows utility classes
        $kendo-utils-grid-auto-rows: k-map-get( $kendo-utils, "grid-auto-rows" ) !default;
        @include generate-utils( grid-auto-rows, grid-auto-rows, $kendo-utils-grid-auto-rows );

    }
}

// #endregion
// #region @import "./_grid-column-start-end.scss"; -> scss/flex-grid/_grid-column-start-end.scss
/// This is equivalent to `grid-column-start: 1;`.
/// @example grid-column-start: 1;
/// @name .k-col-start-1
/// @group grid-column-start
/// @contextType css

/// This is equivalent to `grid-column-start: -1;`.
/// @example grid-column-start: -1;
/// @name .k-col-start--1
/// @group grid-column-start
/// @contextType css

/// This is equivalent to `grid-column-start: auto;`.
/// @example grid-column-start: auto;
/// @name .k-col-start-auto
/// @group grid-column-start
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-grid-column-start-end"));

@mixin kendo-utils--flex-grid--grid-column-start-end() {
    @include module-render("utils-flex-grid-grid-column-start-end") {

    // Grid column span utility classes
    $kendo-utils-grid-column-span: k-map-get( $kendo-utils, "grid-column-span" ) !default;
    @include generate-utils( col-span, grid-column, $kendo-utils-grid-column-span );

    // Grid column start utility classes
    $kendo-utils-grid-column-start: k-map-get( $kendo-utils, "grid-column-start" ) !default;
    @include generate-utils( col-start, grid-column-start, $kendo-utils-grid-column-start );

    // Grid column end utility classes
    $kendo-utils-grid-column-end: k-map-get( $kendo-utils, "grid-column-end" ) !default;
    @include generate-utils( col-end, grid-column-end, $kendo-utils-grid-column-end );


    // Legacy aliases
    @include generate-utils( colspan, grid-column, $kendo-utils-grid-column-span );
    .#{$kendo-prefix}colspan-all { @extend .#{$kendo-prefix}colspan-full !optional; }
    .\!#{$kendo-prefix}colspan-all { @extend .\!#{$kendo-prefix}colspan-full !optional; }

    }
}

@mixin kendo-utils--flex-grid--grid-column-start-end--responsive($key) {

    // Grid column span responsive utility classes
    $kendo-utils-grid-column-span: k-map-get( $kendo-utils, "grid-column-span" ) !default;
    @include generate-utils( col-span-#{$key}, grid-column, $kendo-utils-grid-column-span, $important: false );

    // Grid column start responsive utility classes
    $kendo-utils-grid-column-start: k-map-get( $kendo-utils, "grid-column-start" ) !default;
    @include generate-utils( col-start-#{$key}, grid-column-start, $kendo-utils-grid-column-start, $important: false );

    // Grid column end responsive utility classes
    $kendo-utils-grid-column-end: k-map-get( $kendo-utils, "grid-column-end" ) !default;
    @include generate-utils( col-end-#{$key}, grid-column-end, $kendo-utils-grid-column-end, $important: false );

}

// #endregion
// #region @import "./_grid-row-start-end.scss"; -> scss/flex-grid/_grid-row-start-end.scss
/// This is equivalent to `grid-row-start: 1;`.
/// @example grid-row-start: 1;
/// @name .k-row-start-1
/// @group grid-row-start
/// @contextType css

/// This is equivalent to `grid-row-start: -1;`.
/// @example grid-row-start: -1;
/// @name .k-row-start--1
/// @group grid-row-start
/// @contextType css

/// This is equivalent to `grid-row-start: auto;`.
/// @example grid-row-start: auto;
/// @name .k-row-start-auto
/// @group grid-row-start
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-grid-row-start-end"));

@mixin kendo-utils--flex-grid--grid-row-start-end() {
    @include module-render("utils-flex-grid-grid-row-start-end") {

        // Grid row start/end utility classes
        $kendo-utils-grid-row-start: k-map-get( $kendo-utils, "grid-row-start" ) !default;
        @include generate-utils( row-start, grid-row-start, $kendo-utils-grid-row-start );


        // Grid row start/end utility classes
        $kendo-utils-grid-row-end: k-map-get( $kendo-utils, "grid-row-end" ) !default;
        @include generate-utils( row-end, grid-row-end, $kendo-utils-grid-row-end );


        // Grid row span utility classes
        $kendo-utils-grid-row-span: k-map-get( $kendo-utils, "grid-row-span" ) !default;
        @include generate-utils( row-span, grid-row, $kendo-utils-grid-row-span );


        // Legacy aliases
        @include generate-utils( rowspan, grid-row, $kendo-utils-grid-row-span );
        .#{$kendo-prefix}rowspan-all { @extend .#{$kendo-prefix}rowspan-full !optional; }
        .\!#{$kendo-prefix}rowspan-all { @extend .\!#{$kendo-prefix}rowspan-full !optional; }

    }
}

@mixin kendo-utils--flex-grid--grid-row-start-end--responsive($key) {

    // Grid row start responsive utility classes
    $kendo-utils-grid-row-start: k-map-get( $kendo-utils, "grid-row-start" ) !default;
    @include generate-utils( row-start-#{$key}, grid-row-start, $kendo-utils-grid-row-start, $important: false );

    // Grid row end responsive utility classes
    $kendo-utils-grid-row-end: k-map-get( $kendo-utils, "grid-row-end" ) !default;
    @include generate-utils( row-end-#{$key}, grid-row-end, $kendo-utils-grid-row-end, $important: false );

}

// #endregion
// #region @import "./_grid-template-columns.scss"; -> scss/flex-grid/_grid-template-columns.scss
/// This is equivalent to `grid-template-columns: repeat(1, minmax(0, 1fr));`.
/// @example grid-template-columns: repeat(1, minmax(0, 1fr));
/// @name .k-grid-cols-1
/// @group grid-template-columns
/// @contextType css

/// This is equivalent to `grid-template-columns: repeat(2, minmax(0, 1fr));`.
/// @example grid-template-columns: repeat(2, minmax(0, 1fr));
/// @name .k-grid-cols-2
/// @group grid-template-columns
/// @contextType css

/// This is equivalent to `grid-template-columns: none;`.
/// @example grid-template-columns: none;
/// @name .k-grid-cols-none
/// @group grid-template-columns
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-grid-template-columns"));

@mixin kendo-utils--flex-grid--grid-template-columns() {
    @include module-render("utils-flex-grid-grid-template-columns") {

        // Grid template columns utility classes
        $kendo-utils-grid-template-columns: k-map-get( $kendo-utils, "grid-template-columns" ) !default;
        @include generate-utils( grid-cols, grid-template-columns, $kendo-utils-grid-template-columns );

    }
}

@mixin kendo-utils--flex-grid--grid-template-columns--responsive($key) {

    // Grid template columns responsive utility classes
    $kendo-utils-grid-template-columns: k-map-get( $kendo-utils, "grid-template-columns" ) !default;
    @include generate-utils( grid-cols-#{$key}, grid-template-columns, $kendo-utils-grid-template-columns, $important: false );

}

// #endregion
// #region @import "./_grid-template-rows.scss"; -> scss/flex-grid/_grid-template-rows.scss
/// This is equivalent to `grid-template-rows: repeat(1, minmax(0, 1fr));`.
/// @example grid-template-rows: repeat(1, minmax(0, 1fr));
/// @name .k-grid-rows-1
/// @group grid-template-rows
/// @contextType css

/// This is equivalent to `grid-template-rows: repeat(2, minmax(0, 1fr));`.
/// @example grid-template-rows: repeat(2, minmax(0, 1fr));
/// @name .k-grid-rows-2
/// @group grid-template-rows
/// @contextType css

/// This is equivalent to `grid-template-rows: none;`.
/// @example grid-template-rows: none;
/// @name .k-grid-rows-none
/// @group grid-template-rows
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-grid-template-rows"));

@mixin kendo-utils--flex-grid--grid-template-rows() {
    @include module-render("utils-flex-grid-grid-template-rows") {

        // Grid template rows utility classes
        $kendo-utils-grid-template-rows: k-map-get( $kendo-utils, "grid-template-rows" ) !default;
        @include generate-utils( grid-rows, grid-template-rows, $kendo-utils-grid-template-rows );

    }
}

// #endregion
// #region @import "./_justify-content.scss"; -> scss/flex-grid/_justify-content.scss
/// This is equivalent to `justify-content: normal;`.
/// @example justify-content: normal;
/// @name .k-justify-content-normal
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: stretch;`.
/// @example justify-content: stretch;
/// @name .k-justify-content-stretch
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: center;`.
/// @example justify-content: center;
/// @name .k-justify-content-center
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: start;`.
/// @example justify-content: start;
/// @name .k-justify-content-start
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: end;`.
/// @example justify-content: end;
/// @name .k-justify-content-end
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: flex-start;`.
/// @example justify-content: flex-start;
/// @name .k-justify-content-selft-start
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: flex-end;`.
/// @example justify-content: flex-end;
/// @name .k-justify-content-self-end
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: baseline;`.
/// @example justify-content: baseline;
/// @name .k-justify-content-baseline
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: first baseline;`.
/// @example justify-content: first baseline;
/// @name .k-justify-content-first-baseline
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: last baseline;`.
/// @example justify-content: last baseline;
/// @name .k-justify-content-last-baseline
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: space-between;`.
/// @example justify-content: space-between;
/// @name .k-justify-content-between
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: space-around;`.
/// @example justify-content: space-around;
/// @name .k-justify-content-around
/// @group justify-content
/// @contextType css

/// This is equivalent to `justify-content: space-evenly;`.
/// @example justify-content: space-evenly;
/// @name .k-justify-content-evenly
/// @group justify-content
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-justify-content"));

@mixin kendo-utils--flex-grid--justify-content() {
    @include module-render("utils-flex-grid-justify-content") {

        // Justify content utility classes
        $kendo-utils-justify-content: k-map-get( $kendo-utils, "justify-content" ) !default;
        @include generate-utils( justify-content, justify-content, $kendo-utils-justify-content );


        // Custom justify-content classes
        .#{$kendo-prefix}justify-content-stretch > * { flex: 1 0 0%; }
        .\!.#{$kendo-prefix}justify-content-stretch > * { flex: 1 0 0% !important; } // stylelint-disable-line declaration-no-important

    }
}

// #endregion
// #region @import "./_justify-items.scss"; -> scss/flex-grid/_justify-items.scss
/// This is equivalent to `justify-items: normal;`.
/// @example justify-items: normal;
/// @name .k-justify-items-normal
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: stretch;`.
/// @example justify-items: stretch;
/// @name .k-justify-items-stretch
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: center;`.
/// @example justify-items: center;
/// @name .k-justify-items-center
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: start;`.
/// @example justify-items: start;
/// @name .k-justify-items-start
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: end;`.
/// @example justify-items: end;
/// @name .k-justify-items-end
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: flex-start;`.
/// @example justify-items: flex-start;
/// @name .k-justify-items-selft-start
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: flex-end;`.
/// @example justify-items: flex-end;
/// @name .k-justify-items-self-end
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: self-start;`.
/// @example justify-items: self-start;
/// @name .k-justify-items-selft-start
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: self-end;`.
/// @example justify-items: self-end;
/// @name .k-justify-items-self-end
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: left;`.
/// @example justify-items: left;
/// @name .k-justify-items-left
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: right;`.
/// @example justify-items: right;
/// @name .k-justify-items-right
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: baseline;`.
/// @example justify-items: baseline;
/// @name .k-justify-items-baseline
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: first baseline;`.
/// @example justify-items: first baseline;
/// @name .k-justify-items-first-baseline
/// @group justify-items
/// @contextType css

/// This is equivalent to `justify-items: last baseline;`.
/// @example justify-items: last baseline;
/// @name .k-justify-items-last-baseline
/// @group justify-items
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-justify-items"));

@mixin kendo-utils--flex-grid--justify-items() {
    @include module-render("utils-flex-grid-justify-items") {

        // Justify items utility classes
        $kendo-utils-justify-items: k-map-get( $kendo-utils, "justify-items" ) !default;
        @include generate-utils( justify-items, justify-items, $kendo-utils-justify-items );

    }
}

// #endregion
// #region @import "./_justify-self.scss"; -> scss/flex-grid/_justify-self.scss
/// This is equivalent to `justify-self: auto;`.
/// @example justify-self: auto;
/// @name .k-justify-self-auto
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: normal;`.
/// @example justify-self: normal;
/// @name .k-justify-self-normal
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: stretch;`.
/// @example justify-self: stretch;
/// @name .k-justify-self-stretch
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: center;`.
/// @example justify-self: center;
/// @name .k-justify-self-center
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: start;`.
/// @example justify-self: start;
/// @name .k-justify-self-start
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: end;`.
/// @example justify-self: end;
/// @name .k-justify-self-end
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: flex-start;`.
/// @example justify-self: flex-start;
/// @name .k-justify-self-selft-start
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: flex-end;`.
/// @example justify-self: flex-end;
/// @name .k-justify-self-self-end
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: self-start;`.
/// @example justify-self: self-start;
/// @name .k-justify-self-selft-start
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: self-end;`.
/// @example justify-self: self-end;
/// @name .k-justify-self-self-end
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: baseline;`.
/// @example justify-self: baseline;
/// @name .k-justify-self-baseline
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: first baseline;`.
/// @example justify-self: first baseline;
/// @name .k-justify-self-first-baseline
/// @group justify-self
/// @contextType css

/// This is equivalent to `justify-self: last baseline;`.
/// @example justify-self: last baseline;
/// @name .k-justify-self-last-baseline
/// @group justify-self
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-justify-self"));

@mixin kendo-utils--flex-grid--justify-self() {
    @include module-render("utils-flex-grid-justify-self") {

        // Justify self utility classes
        $kendo-utils-justify-self: k-map-get( $kendo-utils, "justify-self" ) !default;
        @include generate-utils( justify-self, justify-self, $kendo-utils-justify-self );

    }
}

// #endregion
// #region @import "./_order.scss"; -> scss/flex-grid/_order.scss
/// This is equivalent to `order: 1;`.
/// @example order: 1;
/// @name .k-order-first
/// @group order
/// @contextType css

/// This is equivalent to `order: -9999;`.
/// @example order: -9999;
/// @name .k-order-first
/// @group order
/// @contextType css

/// This is equivalent to `order: 9999;`.
/// @example order: 9999;
/// @name .k-order-last
/// @group order
/// @contextType css

/// This is equivalent to `order: 0;`.
/// @example order: 0;
/// @name .k-order-none
/// @group order
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-order"));

@mixin kendo-utils--flex-grid--order() {
    @include module-render("utils-flex-grid-order") {

        // Order utility classes
        $kendo-utils-order: k-map-get( $kendo-utils, "order" ) !default;
        @include generate-utils( order, order, $kendo-utils-order );

    }
}

// #endregion
// #region @import "./_place-content.scss"; -> scss/flex-grid/_place-content.scss
/// This is equivalent to `place-content: normal;`.
/// @example place-content: normal;
/// @name .k-place-content-normal
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: stretch;`.
/// @example place-content: stretch;
/// @name .k-place-content-stretch
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: center;`.
/// @example place-content: center;
/// @name .k-place-content-center
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: start;`.
/// @example place-content: start;
/// @name .k-place-content-start
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: end;`.
/// @example place-content: end;
/// @name .k-place-content-end
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: flex-start;`.
/// @example place-content: flex-start;
/// @name .k-place-content-selft-start
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: flex-end;`.
/// @example place-content: flex-end;
/// @name .k-place-content-self-end
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: self-start;`.
/// @example place-content: self-start;
/// @name .k-place-content-selft-start
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: self-end;`.
/// @example place-content: self-end;
/// @name .k-place-content-self-end
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: baseline;`.
/// @example place-content: baseline;
/// @name .k-place-content-baseline
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: space-between;`.
/// @example place-content: space-between;
/// @name .k-place-content-between
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: space-around;`.
/// @example place-content: space-around;
/// @name .k-place-content-around
/// @group place-content
/// @contextType css

/// This is equivalent to `place-content: space-evenly;`.
/// @example place-content: space-evenly;
/// @name .k-place-content-evenly
/// @group place-content
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-place-content"));

@mixin kendo-utils--flex-grid--place-content() {
    @include module-render("utils-flex-grid-place-content") {

        // Place content utility classes
        $kendo-utils-place-content: k-map-get( $kendo-utils, "place-content" ) !default;
        @include generate-utils( place-content, place-content, $kendo-utils-place-content );

    }
}

// #endregion
// #region @import "./_place-items.scss"; -> scss/flex-grid/_place-items.scss
/// This is equivalent to `place-items: normal;`.
/// @example place-items: normal;
/// @name .k-place-items-normal
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: stretch;`.
/// @example place-items: stretch;
/// @name .k-place-items-stretch
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: center;`.
/// @example place-items: center;
/// @name .k-place-items-center
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: start;`.
/// @example place-items: start;
/// @name .k-place-items-start
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: end;`.
/// @example place-items: end;
/// @name .k-place-items-end
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: flex-start;`.
/// @example place-items: flex-start;
/// @name .k-place-items-flex-start
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: flex-end;`.
/// @example place-items: flex-end;
/// @name .k-place-items-flex-end
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: self-start;`.
/// @example place-items: self-start;
/// @name .k-place-items-self-start
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: self-end;`.
/// @example place-items: self-end;
/// @name .k-place-items-self-end
/// @group place-items
/// @contextType css

/// This is equivalent to `place-items: baseline;`.
/// @example place-items: baseline;
/// @name .k-place-items-baseline
/// @group place-items
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-place-items"));

@mixin kendo-utils--flex-grid--place-items() {
    @include module-render("utils-flex-grid-place-items") {

        // Place items utility classes
        $kendo-utils-place-items: k-map-get( $kendo-utils, "place-items" ) !default;
        @include generate-utils( place-items, place-items, $kendo-utils-place-items );

    }
}

// #endregion
// #region @import "./_place-self.scss"; -> scss/flex-grid/_place-self.scss
/// This is equivalent to `place-self: auto;`.
/// @example place-self: auto;
/// @name .k-place-self-auto
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: normal;`.
/// @example place-self: normal;
/// @name .k-place-self-normal
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: stretch;`.
/// @example place-self: stretch;
/// @name .k-place-self-stretch
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: center;`.
/// @example place-self: center;
/// @name .k-place-self-center
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: start;`.
/// @example place-self: start;
/// @name .k-place-self-start
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: end;`.
/// @example place-self: end;
/// @name .k-place-self-end
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: flex-start;`.
/// @example place-self: flex-start;
/// @name .k-place-self-flex-start
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: flex-end;`.
/// @example place-self: flex-end;
/// @name .k-place-self-flex-end
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: self-start;`.
/// @example place-self: self-start;
/// @name .k-place-self-self-start
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: self-end;`.
/// @example place-self: self-end;
/// @name .k-place-self-self-end
/// @group place-self
/// @contextType css

/// This is equivalent to `place-self: baseline;`.
/// @example place-self: baseline;
/// @name .k-place-self-baseline
/// @group place-self
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-flex-grid-place-self"));

@mixin kendo-utils--flex-grid--place-self() {
    @include module-render("utils-flex-grid-place-self") {

        // Place self utility classes
        $kendo-utils-place-self: k-map-get( $kendo-utils, "place-self" ) !default;
        @include generate-utils( place-self, place-self, $kendo-utils-place-self );

    }
}

// #endregion


@mixin kendo-utils--flex-grid() {
    @include kendo-utils--flex-grid--align-content();
    @include kendo-utils--flex-grid--align-items();
    @include kendo-utils--flex-grid--align-self();
    @include kendo-utils--flex-grid--flex-basis();
    @include kendo-utils--flex-grid--flex-direction();
    @include kendo-utils--flex-grid--flex-grow();
    @include kendo-utils--flex-grid--flex-shrink();
    @include kendo-utils--flex-grid--flex-wrap();
    @include kendo-utils--flex-grid--flex();
    @include kendo-utils--flex-grid--gap();
    @include kendo-utils--flex-grid--grid-auto-columns();
    @include kendo-utils--flex-grid--grid-auto-flow();
    @include kendo-utils--flex-grid--grid-auto-rows();
    @include kendo-utils--flex-grid--grid-column-start-end();
    @include kendo-utils--flex-grid--grid-row-start-end();
    @include kendo-utils--flex-grid--grid-template-columns();
    @include kendo-utils--flex-grid--grid-template-rows();
    @include kendo-utils--flex-grid--justify-content();
    @include kendo-utils--flex-grid--justify-items();
    @include kendo-utils--flex-grid--justify-self();
    @include kendo-utils--flex-grid--order();
    @include kendo-utils--flex-grid--place-content();
    @include kendo-utils--flex-grid--place-items();
    @include kendo-utils--flex-grid--place-self();
}

@mixin kendo-utils--flex-grid--responsive($key) {
    @include kendo-utils--flex-grid--flex-direction--responsive($key);
    @include kendo-utils--flex-grid--gap--responsive($key);
    @include kendo-utils--flex-grid--grid-column-start-end--responsive($key);
    @include kendo-utils--flex-grid--grid-row-start-end--responsive($key);
    @include kendo-utils--flex-grid--grid-template-columns--responsive($key);
}

// #endregion
// #region @import "./spacing/index.import.scss"; -> scss/spacing/index.import.scss
// File already imported_once. Skipping output.
// #endregion
// #region @import "./sizing/index.import.scss"; -> scss/sizing/index.import.scss
// #region @import "./_height.scss"; -> scss/sizing/_height.scss
/// This is equivalent to `height: 0;`.
/// @example height: 0;
/// @name .k-h-0
/// @group height
/// @contextType css

/// This is equivalent to `height: 1px;`.
/// @example height: 1px;
/// @name .k-h-1px
/// @group height
/// @contextType css

/// This is equivalent to `height: 0.25rem;`.
/// @example height: 0.25rem;
/// @name .k-h-1
/// @group height
/// @contextType css

/// This is equivalent to `min-height: 100%;`.
/// @example min-height: 100%;
/// @name .k-h-full
/// @group height
/// @contextType css

/// This is equivalent to `height: 100vh;`.
/// @example height: 100vh;
/// @name .k-h-screen
/// @group height
/// @contextType css

/// This is equivalent to `height: min-content;`.
/// @example height: min-content;
/// @name .k-h-min
/// @group height
/// @contextType css

/// This is equivalent to `height: max-content;`.
/// @example height: max-content;
/// @name .k-h-max
/// @group height
/// @contextType css

/// This is equivalent to `height: fit-content;`.
/// @example height: fit-content;
/// @name .k-h-fit
/// @group height
/// @contextType css

/// This is equivalent to `min-height: 0;`.
/// @example min-height: 0;
/// @name .k-min-h-0
/// @group height
/// @contextType css

/// This is equivalent to `min-height: 1px;`.
/// @example min-height: 1px;
/// @name .k-min-h-1px
/// @group height
/// @contextType css

/// This is equivalent to `min-height: 0.25rem;`.
/// @example min-height: 0.25rem;
/// @name .k-min-h-1
/// @group height
/// @contextType css

/// This is equivalent to `min-height: 100%;`.
/// @example min-height: 100%;
/// @name .k-min-h-full
/// @group height
/// @contextType css

/// This is equivalent to `min-height: 100vh;`.
/// @example min-height: 100vh;
/// @name .k-min-h-screen
/// @group height
/// @contextType css

/// This is equivalent to `min-height: min-content;`.
/// @example min-height: min-content;
/// @name .k-min-h-min
/// @group height
/// @contextType css

/// This is equivalent to `min-height: max-content;`.
/// @example min-height: max-content;
/// @name .k-min-h-max
/// @group height
/// @contextType css

/// This is equivalent to `min-height: fit-content;`.
/// @example min-height: fit-content;
/// @name .k-min-h-fit
/// @group height
/// @contextType css

/// This is equivalent to `max-height: 0;`.
/// @example max-height: 0;
/// @name .k-max-h-0
/// @group height
/// @contextType css

/// This is equivalent to `max-height: 1px;`.
/// @example max-height: 1px;
/// @name .k-max-h-1px
/// @group height
/// @contextType css

/// This is equivalent to `max-height: 0.25rem;`.
/// @example max-height: 0.25rem;
/// @name .k-max-h-1
/// @group height
/// @contextType css

/// This is equivalent to `max-height: 100%;`.
/// @example max-height: 100%;
/// @name .k-max-h-full
/// @group height
/// @contextType css

/// This is equivalent to `max-height: 100vh;`.
/// @example max-height: 100vh;
/// @name .k-max-h-screen
/// @group height
/// @contextType css

/// This is equivalent to `max-height: min-content;`.
/// @example max-height: min-content;
/// @name .k-max-h-min
/// @group height
/// @contextType css

/// This is equivalent to `max-height: max-content;`.
/// @example max-height: max-content;
/// @name .k-max-h-max
/// @group height
/// @contextType css

/// This is equivalent to `max-height: fit-content;`.
/// @example max-height: fit-content;
/// @name .k-max-h-fit
/// @group height
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-sizing-height"));

@mixin kendo-utils--sizing--height() {
    @include module-render("utils-sizing-height") {

        // Height utility classes
        $kendo-utils-height: k-map-get( $kendo-utils, "height" ) !default;
        @include generate-utils( h, height, $kendo-utils-height );

        // Min height utility classes
        $kendo-utils-min-height: k-map-get( $kendo-utils, "min-height" ) !default;
        @include generate-utils( min-h, min-height, $kendo-utils-min-height );

        // Max height utility classes
        $kendo-utils-max-height: k-map-get( $kendo-utils, "max-height" ) !default;
        @include generate-utils( max-h, max-height, $kendo-utils-max-height );

    }
}

// #endregion
// #region @import "./_width.scss"; -> scss/sizing/_width.scss
/// This is equivalent to `width: 0;`.
/// @example width: 0;
/// @name .k-w-0
/// @group width
/// @contextType css

/// This is equivalent to `width: 1px;`.
/// @example width: 1px;
/// @name .k-w-1px
/// @group width
/// @contextType css

/// This is equivalent to `width: 0.25rem;`.
/// @example width: 0.25rem;
/// @name .k-w-1
/// @group width
/// @contextType css

/// This is equivalent to `min-width: 100%;`.
/// @example min-width: 100%;
/// @name .k-w-full
/// @group width
/// @contextType css

/// This is equivalent to `width: 100vw;`.
/// @example width: 100vw;
/// @name .k-w-screen
/// @group width
/// @contextType css

/// This is equivalent to `width: min-content;`.
/// @example width: min-content;
/// @name .k-w-min
/// @group width
/// @contextType css

/// This is equivalent to `width: max-content;`.
/// @example width: max-content;
/// @name .k-w-max
/// @group width
/// @contextType css

/// This is equivalent to `width: fit-content;`.
/// @example width: fit-content;
/// @name .k-w-fit
/// @group width
/// @contextType css

/// This is equivalent to `min-width: 0;`.
/// @example min-width: 0;
/// @name .k-min-w-0
/// @group width
/// @contextType css

/// This is equivalent to `min-width: 1px;`.
/// @example min-width: 1px;
/// @name .k-min-w-1px
/// @group width
/// @contextType css

/// This is equivalent to `min-width: 0.25rem;`.
/// @example min-width: 0.25rem;
/// @name .k-min-w-1
/// @group width
/// @contextType css

/// This is equivalent to `min-width: 100%;`.
/// @example min-width: 100%;
/// @name .k-min-w-full
/// @group width
/// @contextType css

/// This is equivalent to `min-width: 100vw;`.
/// @example min-width: 100vw;
/// @name .k-min-w-screen
/// @group width
/// @contextType css

/// This is equivalent to `min-width: min-content;`.
/// @example min-width: min-content;
/// @name .k-min-w-min
/// @group width
/// @contextType css

/// This is equivalent to `min-width: max-content;`.
/// @example min-width: max-content;
/// @name .k-min-w-max
/// @group width
/// @contextType css

/// This is equivalent to `min-width: fit-content;`.
/// @example min-width: fit-content;
/// @name .k-min-w-fit
/// @group width
/// @contextType css

/// This is equivalent to `max-width: 0;`.
/// @example max-width: 0;
/// @name .k-max-w-0
/// @group width
/// @contextType css

/// This is equivalent to `max-width: 1px;`.
/// @example max-width: 1px;
/// @name .k-max-w-1px
/// @group width
/// @contextType css

/// This is equivalent to `max-width: 0.25rem;`.
/// @example max-width: 0.25rem;
/// @name .k-max-w-1
/// @group width
/// @contextType css

/// This is equivalent to `max-width: 100%;`.
/// @example max-width: 100%;
/// @name .k-max-w-full
/// @group width
/// @contextType css

/// This is equivalent to `max-width: 100vh;`.
/// @example max-width: 100vh;
/// @name .k-max-w-screen
/// @group width
/// @contextType css

/// This is equivalent to `max-width: min-content;`.
/// @example max-width: min-content;
/// @name .k-max-w-min
/// @group width
/// @contextType css

/// This is equivalent to `max-width: max-content;`.
/// @example max-width: max-content;
/// @name .k-max-w-max
/// @group width
/// @contextType css

/// This is equivalent to `max-width: fit-content;`.
/// @example max-width: fit-content;
/// @name .k-max-w-fit
/// @group width
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-sizing-width"));

@mixin kendo-utils--sizing--width() {
    @include module-render("utils-sizing-width") {

        // Width utility classes
        $kendo-utils-width: k-map-get( $kendo-utils, "width" ) !default;
        @include generate-utils( w, width, $kendo-utils-width );

        // Min-width utility classes
        $kendo-utils-min-width: k-map-get( $kendo-utils, "min-width" ) !default;
        @include generate-utils( min-w, min-width, $kendo-utils-min-width );

        // Max-width utility classes
        $kendo-utils-max-width: k-map-get( $kendo-utils, "max-width" ) !default;
        @include generate-utils( max-w, max-width, $kendo-utils-max-width );

    }
}

// #endregion


@mixin kendo-utils--sizing() {
    @include kendo-utils--sizing--height();
    @include kendo-utils--sizing--width();
}

// #endregion
// #region @import "./typography/index.import.scss"; -> scss/typography/index.import.scss
// font family
// #region @import "./_font-family.scss"; -> scss/typography/_font-family.scss
// #region @import "@progress/kendo-theme-core/scss/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/index.import.scss
// #region @import "./functions/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/index.import.scss
// File already imported_once. Skipping output.
// #endregion
// #region @import "./color-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/color-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
// #region @import "./mixins/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/index.import.scss
// #region @import "./_border-radius.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_border-radius.scss
// Border radius
@mixin border-radius( $radius: null ) {
    @if $kendo-enable-rounded {
        border-radius: $radius;
    }
}

@mixin border-top-radius( $radius: null ) {
    @if $kendo-enable-rounded {
        border-top-left-radius: $radius;
        border-top-right-radius: $radius;
    }
}

@mixin border-right-radius( $radius: null ) {
    @if $kendo-enable-rounded {
        border-top-right-radius: $radius;
        border-bottom-right-radius: $radius;
    }
}

@mixin border-bottom-radius( $radius: null ) {
    @if $kendo-enable-rounded {
        border-bottom-right-radius: $radius;
        border-bottom-left-radius: $radius;
    }
}

@mixin border-left-radius( $radius: null ) {
    @if $kendo-enable-rounded {
        border-top-left-radius: $radius;
        border-bottom-left-radius: $radius;
    }
}

@mixin border-top-radius-only( $radius: null ) {
    @if $kendo-enable-rounded {
        border-radius: $radius $radius 0 0;
    }
}

@mixin border-right-radius-only( $radius: null ) {
    @if $kendo-enable-rounded {
        border-radius: 0 $radius $radius 0;
    }
}

@mixin border-bottom-radius-only( $radius: null ) {
    @if $kendo-enable-rounded {
        border-radius: 0 0 $radius $radius;
    }
}

@mixin border-left-radius-only( $radius: null ) {
    @if $kendo-enable-rounded {
        border-radius: $radius 0 0 $radius;
    }
}

// #endregion
// #region @import "./_box-shadow.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_box-shadow.scss
@mixin box-shadow( $shadow... ) {
    @if $kendo-enable-shadows and k-list-nth($shadow, 1) {
        box-shadow: $shadow;
    }
}

// #endregion
// #region @import "./_data-uri.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_data-uri.scss
/// A list of files converted to data URIs
/// @access private
$_kendo-data-uris: () !default;

/// Saves a data URI that can be used from the $_kendo-data-uris map instead of a file reference.
/// @access private
/// @param {String} $name - The name of the resource.
/// @param {String} $content - The data URI of the resource.
/// @require $_kendo-data-uris
@mixin register-data-uri( $name, $content ) {
    @if ( k-map-has-key( $_kendo-data-uris, $name ) ) {
        @warn "Attempt to redefine data URI of file `#{$name}`.";
    }

    $_kendo-data-uris: k-map-merge( $_kendo-data-uris, ( $name: $content ) ) !global;
}

// #endregion
// #region @import "./_disabled.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_disabled.scss
// Disabled

@mixin disabled( $color: null, $bg: null, $border: null, $opacity: null, $filter: null ) {
    outline: none;
    cursor: default;
    color: $color;
    background-color: $bg;
    border-color: $border;
    opacity: $opacity;
    filter: $filter;
    pointer-events: none;
    box-shadow: none;
}

// #endregion
// #region @import "./_decoration.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_decoration.scss
@mixin fill( $color: null, $bg: null, $border: null, $gradient: null ) {
    @if $border {
        border-color: $border;
    }
    @if $color {
        color: $color;
    }
    @if $bg {
        background-color: $bg;
    }
    @if $gradient {
        @include linear-gradient( $gradient );
    }
}

@mixin linear-gradient( $gradient: null ) {
    @if $gradient and $kendo-enable-gradients {
        @if $gradient == none {
            background-image: none;
        } @else {
            background-image: linear-gradient( $gradient );
        }
    }
}

@mixin repeating-striped-gradient( $color: rgba(255,255,255,.15), $background: #FFF, $angle: 45deg, $largeStep: 2px, $smallStep: 1px) {
    background-image: repeating-linear-gradient($angle, $background, $background $smallStep, $color $smallStep, $color $largeStep);
}

// #endregion
// #region @import "./_focus-indicator.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_focus-indicator.scss
@mixin focus-indicator( $indicator, $inset: false, $themeable: false, $type: "box-shadow" ) {
    @if $kendo-enable-focus-contrast and k-list-nth($indicator, 1) {
        @include box-shadow( if( $inset, inset, null ) 0 0 0 2px if( $themeable, currentColor, rgb( 0, 0, 0 ) ) );
    } @else {
        @include box-shadow( $indicator... );
    }
}

// #endregion
// #region @import "./_gradient.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_gradient.scss
@mixin linear-gradient( $gradient: null ) {
    @if $gradient and $kendo-enable-gradients {
        @if $gradient == none {
            background-image: none;
        } @else {
            background-image: linear-gradient( $gradient );
        }
    }
}

@mixin striped-gradient( $color: rgba( white, .15 ), $angle: 45deg ) {
    background-image: linear-gradient( $angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent );
}

@mixin repeating-striped-gradient( $color: rgba( white, .15), $background: white, $angle: 45deg, $large-step: 2px, $small-step: 1px ) {
    background-image: repeating-linear-gradient( $angle, $background, $background $small-step, $color $small-step, $color $large-step );
}

@mixin checkerboard-gradient( $primary-color: white, $secondary-color: rgba( black, .09 ), $size: 10px ) {
    $_position: calc( #{$size} / 2 );

    background:
        linear-gradient( 45deg, $secondary-color 25%, transparent 25%, transparent 75%, $secondary-color 75%, $secondary-color ),
        linear-gradient( 45deg, $secondary-color 25%, transparent 25%, transparent 75%, $secondary-color 75%, $secondary-color ),
        $primary-color;
    background-repeat: repeat, repeat;
    background-position: 0px 0px, $_position $_position;
    transform-origin: 0 0 0;
    background-origin: padding-box, padding-box;
    background-size: $size $size, $size $size;
    box-shadow: none;
    text-shadow: none;
    transition: none;
    transform: scaleX(1) scaleY(1) scaleZ(1);
}

// #endregion
// #region @import "./_hide-scrollbar.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_hide-scrollbar.scss
$kendo-scrollbar-width: 17px !default;

@mixin hide-scrollbar( $dir: "right", $max-scrollbar: 100px) {
    // anything larger than the scrollbar width will do
    $scrollbar-size: var( --kendo-scrollbar-width, #{$kendo-scrollbar-width} );
    $margin: calc( -#{$max-scrollbar} - #{$scrollbar-size} );

    padding-right: $max-scrollbar;
    padding-left: $max-scrollbar;

    @if ( $dir == "right" ) {
        margin-left: -$max-scrollbar;
        margin-right: $margin;
    } @else {
        margin-left: $margin;
        margin-right: -$max-scrollbar;
    }
}

@mixin hide-scrollbar-dir-agnostic($max-scrollbar: 100px) {
    // anything larger than the scrollbar width will do
    $scrollbar-size: var( --kendo-scrollbar-width, #{$kendo-scrollbar-width} );
    $margin: calc( -#{$max-scrollbar} - #{$scrollbar-size} );

    padding-inline-end: $max-scrollbar;
    padding-inline-start: $max-scrollbar;

    margin-inline-start: -$max-scrollbar;
    margin-inline-end: $margin;
}

// #endregion
// #region @import "./_import-once.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/mixins/_import-once.scss
/// A list of exported modules.
/// @access private
$_kendo-imported-modules: () !default;

/// Outputs a module once, no matter how many times it is included.
/// @access public
/// @param {String} $name - The name of the exported module.
/// @require $_kendo-imported-modules
@mixin exports( $name ) {
    @if (k-list-index( $_kendo-imported-modules, $name ) == null) { // stylelint-disable-line
        $_kendo-imported-modules: k-list-append( $_kendo-imported-modules, $name ) !global;
        @content;
    }
}

// #endregion

@mixin background-image( $background-image: null ) {
    @if $background-image {
        background-image: url(#{$background-image});
    }
}

// #endregion
// #region @import "./module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
// #region @import "./styles/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/index.import.scss
// #region @import "./_accessibility.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_accessibility.scss
@mixin kendo-core--styles--accessibility() {

    /// This class could be assigned to elements which should be visually hidden, but remain accessible for screen readers.
    /// @name .k-sr-only
    /// @group accessibility
    .k-sr-only {
        position: absolute;
        left: -1px;
        width: 1px;
        height: 1px;
        overflow: hidden;
    }

}

// #endregion
// #region @import "./_animations.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_animations.scss
@mixin kendo-core--styles--animations() {

    // Animations
    .k-push-right {
        &-enter,
        &-appear {
            transform: translate(-100%, 0);
        }

        &-enter-active,
        &-appear-active {
            transform: translate(0, 0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translate(0, 0);
        }

        &-exit-active {
            transform: translate(100%, 0);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-push-left {
        &-enter,
        &-appear {
            transform: translate(100%, 0);
        }

        &-enter-active,
        &-appear-active {
            transform: translate(0, 0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translate(0, 0);
        }

        &-exit-active {
            transform: translate(-100%, 0);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-push-down {
        &-enter,
        &-appear {
            transform: translate(0, -100%);
        }

        &-enter-active,
        &-appear-active {
            transform: translate(0, 0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translate(0, 0);
        }

        &-exit-active {
            transform: translate(0, 100%);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-push-up {
        &-enter,
        &-appear {
            transform: translate(0, 100%);
        }

        &-enter-active,
        &-appear-active {
            transform: translate(0, 0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translate(0, 0);
        }

        &-exit-active {
            transform: translate(0, -100%);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-expand-vertical {
        &-enter,
        &-appear {
            transform: scaleY(0);
        }

        &-enter-active,
        &-appear-active {
            transform: scaleY(1);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: scaleY(1);
        }

        &-exit-active {
            transform: scaleY(0);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-expand-horizontal {
        &-enter,
        &-appear {
            transform: scaleX(0);
        }

        &-enter-active,
        &-appear-active {
            transform: scaleX(1);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: scaleX(1);
        }

        &-exit-active {
            transform: scaleX(0);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-fade {
        &-enter,
        &-appear {
            opacity: 0;
        }

        &-enter-active,
        &-appear-active {
            opacity: 1;
            transition: opacity 500ms ease-in-out;
        }

        &-exit {
            opacity: 1;
        }

        &-exit-active {
            opacity: 0;
            transition: opacity 500ms ease-in-out;
        }

        &-exit-active + &-exit-active,
        &-enter-active + &-enter-active {
            display: none;
        }
    }

    .k-zoom-in {
        &-enter,
        &-appear {
            opacity: 0;
            transform: scale(0);
        }

        &-enter-active,
        &-appear-active {
            opacity: 1;
            transform: scale(1);
            transition: transform, opacity 300ms ease-in-out;
        }

        &-exit {
            opacity: 1;
            transform: scale(1);
        }

        &-exit-active {
            opacity: 0;
            transform: scale(2);
            transition: transform, opacity 300ms ease-in-out;
        }
    }

    .k-zoom-out {
        &-enter,
        &-appear {
            opacity: 0;
            transform: scale(2);
        }

        &-enter-active,
        &-appear-active {
            opacity: 1;
            transform: scale(1);
            transition: transform, opacity 300ms ease-in-out;
        }

        &-exit {
            opacity: 1;
            transform: scale(1);
        }

        &-exit-active {
            opacity: 0;
            transform: scale(0);
            transition: transform, opacity 300ms ease-in-out;
        }
    }

    .k-slide-in {
        &-appear {
            opacity: .1;
            transform: translate(0, -3em);

            .k-centered {
                transform: translate(-50%, -60%);
            }
        }

        &-appear-active {
            opacity: 1;
            transform: translate(0, 0);
            transition: transform .3s cubic-bezier(.2, .6, .4, 1), opacity .3s cubic-bezier(.2, 1, .2, 1);

            .k-centered {
                transform: translate(-50%, -50%);
            }
        }
    }

    .k-slide-down {
        &-enter,
        &-appear {
            transform: translateY(-100%);
        }

        &-enter-active,
        &-appear-active {
            transform: translateY(0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translateY(0);
        }

        &-exit-active {
            transform: translateY(-100%);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-slide-up {
        &-enter,
        &-appear {
            transform: translateY(100%);
        }

        &-enter-active,
        &-appear-active {
            transform: translateY(0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translateY(0);
        }

        &-exit-active {
            transform: translateY(100%);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-slide-right {
        &-enter,
        &-appear {
            transform: translateX(-100%);
        }

        &-enter-active,
        &-appear-active {
            transform: translateX(0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translateX(0);
        }

        &-exit-active {
            transform: translateX(-100%);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-slide-left {
        &-enter,
        &-appear {
            transform: translateX(100%);
        }

        &-enter-active,
        &-appear-active {
            transform: translateX(0);
            transition: transform 300ms ease-in-out;
        }

        &-exit {
            transform: translateX(0);
        }

        &-exit-active {
            transform: translateX(100%);
            transition: transform 300ms ease-in-out;
        }
    }

    .k-reveal-vertical {
        &-enter,
        &-appear {
            max-height: 0;
        }

        &-enter-active,
        &-appear-active {
            transition: max-height 300ms ease-in-out;
        }

        &-exit-active {
            // override any max-height set to element to allow animation
            max-height: 0 !important; // stylelint-disable-line declaration-no-important
            transition: max-height 300ms ease-in-out;
        }
    }

    .k-reveal-horizontal {
        &-enter,
        &-appear {
            max-width: 0;
        }

        &-enter-active,
        &-appear-active {
            transition: max-width 300ms ease-in-out;
        }

        &-exit-active {
            // override any max-height set to element to allow animation
            max-width: 0 !important; // stylelint-disable-line declaration-no-important
            transition: max-width 300ms ease-in-out;
        }
    }


    // FX
    $fx-duration: 350ms;

    .k-fx-end .k-fx-next,
    .k-fx-end .k-fx-current {
        transition: all $fx-duration ease-out;
    }

    .k-fx {
        position: relative;

        .k-fx-current {
            z-index: 0;
        }

        .k-fx-next {
            z-index: 1;
        }
    }

    .k-fx-hidden,
    .k-fx-hidden * {
        visibility: hidden !important; // stylelint-disable-line declaration-no-important
    }

    .k-fx-reverse {
        .k-fx-current {
            z-index: 1;
        }

        .k-fx-next {
            z-index: 0;
        }
    }

    // Zoom
    // stylelint-disable declaration-no-important
    .k-fx-zoom {
        &.k-fx-start .k-fx-next {
            transform: scale(0) !important;
        }

        &.k-fx-end .k-fx-next {
            transform: scale(1) !important;
        }

        &.k-fx-reverse {
            &.k-fx-start .k-fx-next,
            &.k-fx-end .k-fx-next {
                transform: scale(1) !important;
            }

            &.k-fx-start .k-fx-current {
                transform: scale(1) !important;
            }

            &.k-fx-end .k-fx-current {
                transform: scale(0) !important;
            }
        }
    }
    // stylelint-enable declaration-no-important

    // Fade
    .k-fx-fade {
        &.k-fx-start .k-fx-next {
            will-change: opacity;
            opacity: 0;
        }

        &.k-fx-end .k-fx-next {
            opacity: 1;
        }

        &.k-fx-reverse {
            &.k-fx-start .k-fx-current {
                will-change: opacity;
                opacity: 1;
            }

            &.k-fx-end .k-fx-current {
                opacity: 0;
            }
        }
    }

    // Slide
    .k-fx-slide {
        &.k-fx-end .k-fx-next .k-content,
        &.k-fx-end .k-fx-next .k-header,
        &.k-fx-end .k-fx-next .k-footer,
        &.k-fx-end .k-fx-current .k-content,
        &.k-fx-end .k-fx-current .k-header,
        &.k-fx-end .k-fx-current .k-footer,
        &.k-fx-end .k-fx-next .km-content,
        &.k-fx-end .k-fx-next .km-header,
        &.k-fx-end .k-fx-next .km-footer,
        &.k-fx-end .k-fx-current .km-content,
        &.k-fx-end .k-fx-current .km-header,
        &.k-fx-end .k-fx-current .km-footer {
            transition: all $fx-duration ease-out;
        }

        // left
        &.k-fx-start .k-fx-next .k-content,
        &.k-fx-start .k-fx-next .km-content {
            will-change: transform;
            transform: translateX(100%);
        }

        &.k-fx-start .k-fx-next .k-header,
        &.k-fx-start .k-fx-next .k-footer,
        &.k-fx-start .k-fx-next .km-header,
        &.k-fx-start .k-fx-next .km-footer {
            will-change: opacity;
            opacity: 0;
        }

        &.k-fx-end .k-fx-current .k-content,
        &.k-fx-end .k-fx-current .km-content {
            transform: translateX(-100%);
        }

        &.k-fx-end .k-fx-next .k-header,
        &.k-fx-end .k-fx-next .k-footer,
        &.k-fx-end .k-fx-next .km-header,
        &.k-fx-end .k-fx-next .km-footer {
            opacity: 1;
        }

        // left reverse
        &.k-fx-reverse {
            &.k-fx-start .k-fx-current .k-content,
            &.k-fx-start .k-fx-current .km-content {
                will-change: transform;
                transform: translateX(0);
            }

            &.k-fx-end .k-fx-current .k-content,
            &.k-fx-end .k-fx-current .km-content {
                transform: translateX(100%);
            }

            &.k-fx-start .k-fx-next .k-content,
            &.k-fx-start .k-fx-next .km-content {
                transform: translateX(-100%);
            }

            &.k-fx-end .k-fx-next .k-content,
            &.k-fx-end .k-fx-next .km-content {
                transform: translateX(0);
            }

            &.k-fx-start .k-fx-current .k-header,
            &.k-fx-start .k-fx-current .k-footer,
            &.k-fx-start .k-fx-current .km-header,
            &.k-fx-start .k-fx-current .km-footer {
                will-change: opacity;
                opacity: 1;
            }

            &.k-fx-start .k-fx-next .k-header,
            &.k-fx-start .k-fx-next .k-footer,
            &.k-fx-start .k-fx-next .km-header,
            &.k-fx-start .k-fx-next .km-footer {
                opacity: 1;
            }

            &.k-fx-end .k-fx-current .k-header,
            &.k-fx-end .k-fx-current .k-footer,
            &.k-fx-end .k-fx-current .km-header,
            &.k-fx-end .k-fx-current .km-footer {
                opacity: 0;
            }

            &.k-fx-end .k-fx-next .k-header,
            &.k-fx-end .k-fx-next .k-footer,
            &.k-fx-end .k-fx-next .km-header,
            &.k-fx-end .k-fx-next .km-footer {
                opacity: 1;
            }
        }

        // right
        &.k-fx-right {
            &.k-fx-start .k-fx-next .k-content,
            &.k-fx-start .k-fx-next .km-content {
                transform: translateX(-100%);
            }

            &.k-fx-end .k-fx-current .k-content,
            &.k-fx-end .k-fx-current .km-content {
                transform: translateX(100%);
            }

            // right reverse
            &.k-fx-reverse {
                &.k-fx-start .k-fx-current .k-content,
                &.k-fx-start .k-fx-current .km-content {
                    transform: translateX(0);
                }

                &.k-fx-end .k-fx-current .k-content,
                &.k-fx-end .k-fx-current .km-content {
                    transform: translateX(-100%);
                }

                &.k-fx-start .k-fx-next .k-content,
                &.k-fx-start .k-fx-next .km-content {
                    transform: translateX(100%);
                }

                &.k-fx-end .k-fx-next .k-content,
                &.k-fx-end .k-fx-next .km-content {
                    transform: translateX(0%);
                }
            }
        }
    }

    // Tile
    .k-fx-tile {
        // left
        &.k-fx-start .k-fx-next {
            will-change: transform;
            transform: translateX(100%);
        }

        &.k-fx-end .k-fx-current {
            transform: translateX(-100%);
        }

        // left reverse
        &.k-fx-reverse {
            &.k-fx-start .k-fx-current {
                will-change: transform;
                transform: translateX(0);
            }

            &.k-fx-end .k-fx-current {
                transform: translateX(100%);
            }

            &.k-fx-start .k-fx-next {
                transform: translateX(-100%);
            }

            &.k-fx-end .k-fx-next {
                transform: translateX(0);
            }
        }

        // right
        &.k-fx-right {
            &.k-fx-start .k-fx-next {
                transform: translateX(-100%);
            }

            &.k-fx-end .k-fx-current {
                transform: translateX(100%);
            }

            // right reverse
            &.k-fx-reverse {
                &.k-fx-start .k-fx-current {
                    transform: translateX(0);
                }

                &.k-fx-end .k-fx-current {
                    transform: translateX(-100%);
                }

                &.k-fx-start .k-fx-next {
                    transform: translateX(100%);
                }

                &.k-fx-end .k-fx-next {
                    transform: translateX(0%);
                }
            }
        }
    }

    // Overlay
    .k-fx.k-fx-overlay {
        &.k-fx-start .k-fx-next,
        &.k-fx-left.k-fx-start .k-fx-next {
            will-change: transform;
            transform: translateX(100%);
        }

        &.k-fx-right.k-fx-start .k-fx-next {
            transform: translateX(-100%);
        }

        &.k-fx-up.k-fx-start .k-fx-next {
            transform: translateY(100%);
        }

        &.k-fx-down.k-fx-start .k-fx-next {
            transform: translateY(-100%);
        }

        &.k-fx-reverse {
            &.k-fx-start .k-fx-next {
                transform: none;
            }

            &.k-fx-start .k-fx-current {
                will-change: transform;
                transform: none;
            }

            &.k-fx-end .k-fx-current,
            &.k-fx-left.k-fx-end .k-fx-current {
                transform: translateX(100%);
            }

            &.k-fx-right.k-fx-end .k-fx-current {
                transform: translateX(-100%);
            }

            &.k-fx-up.k-fx-end .k-fx-current {
                transform: translateY(100%);
            }

            &.k-fx-down.k-fx-end .k-fx-current {
                transform: translateY(-100%);
            }
        }
    }

}

// #endregion
// #region @import "./_asp-fallback.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_asp-fallback.scss
@mixin kendo-core--styles--asp-fallback() {

    .k-theme-test-class,
    .k-common-test-class {
        opacity: 0;
    }

}

// #endregion
// #region @import "./_layout.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_layout.scss
@mixin kendo-core--styles--layout() {
    // Basic layout
    .k-hstack {
        display: flex;
        flex-flow: row nowrap;
    }
    .k-vstack {
        display: flex;
        flex-flow: column nowrap;
    }

    // Spacer
    .k-spacer {
        flex: 1 1 auto;
    }
    .k-spacer-sized {
        flex: none;
    }


    // Float wrap
    .k-float-wrap::after {
        content: "";
        display: block;
        clear: both;
    }


    // Stack layout
    .k-stack-layout {}


    // Flex layout
    .k-flex-layout {
        display: flex;
    }


    // Grid layout
    .k-grid-layout {
        display: grid;
    }


    // Separator
    .k-separator {
        width: auto;
        height: 0;
        border-width: 1px 0 0;
        border-style: solid;
        border-color: inherit;
        display: block;
        flex-grow: 0 !important; // stylelint-disable-line declaration-no-important
        flex-shrink: 0 !important; // stylelint-disable-line declaration-no-important
        align-self: stretch;
    }
    .k-separator-horizontal,
    .k-vstack > .k-separator {
        width: auto;
        height: 0;
        border-width: 1px 0 0;
    }
    .k-separator-vertical,
    .k-hstack > .k-separator {
        width: 0;
        height: auto;
        border-width: 0 0 0 1px;
    }

    hr.k-separator {
        margin: 0;
        padding: 0;
    }


    // Hidden
    .k-hidden {
        display: none !important; // stylelint-disable-line declaration-no-important
    }


    // RTL
    .k-rtl {
        direction: rtl;
    }


    // Legacy aliases
    .k-hbox { @extend .k-hstack !optional; }
    .k-vbox { @extend .k-vstack !optional; }
    .k-floatwrap { @extend .k-float-wrap !optional; }
    .k-flex { @extend .k-spacer !optional; }

}

// #endregion
// #region @import "./_normalize.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_normalize.scss
@mixin kendo-core--styles--normalize() {

    // Hidden attribute
    [hidden] {
        display: none !important; // stylelint-disable-line declaration-no-important
    }


    // Hide script tags
    // see https://github.com/telerik/kendo-themes/issues/2360
    script {
        display: none !important; // stylelint-disable-line declaration-no-important
    }

}

// #endregion
// #region @import "./_base.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_base.scss
@mixin kendo-core--styles--base() {

    // Disabled state
    .k-disabled,
    .k-widget[disabled],
    .k-disabled {
        @include disabled(
            $color: var( --kendo-disabled-text, #{$kendo-disabled-text}),
            $bg: var( --kendo-disabled-bg, #{$kendo-disabled-bg}),
            $border: var( --kendo-disabled-border, #{$kendo-disabled-border}),
            $opacity: var( --kendo-disabled-opacity, #{$kendo-disabled-opacity}),
            $filter: var( --kendo-disabled-filter, #{$kendo-disabled-filter})
        );

        .k-link {
            cursor: default;
            outline: 0;
        }

        // Nested disabled
        [disabled],
        .k-disabled {
            @if $kendo-nested-disabled {
                --kendo-disabled-opacity: 1;
                --kendo-disabled-filter: grayscale(0);
            }
        }
    }

    // Horizontal line
    .k-hr {
        margin-block: k-spacing(4);
        padding: 0;
        height: 0;
        border-width: 1px 0 0;
        border-style: solid;
        border-color: var( --kendo-component-border, #{$kendo-component-border} );
        display: block;
        float: none;
        clear: both;
    }

    // Horizontal rule
    .k-d-flex-row > .k-hr {
        margin: 0;
        width: 0;
        height: auto;
        border-width: 0 0 0 1px;
        flex: 0 0 auto;
    }

    // Vertical rule
    .k-d-flex-col > .k-hr {
        margin: 0;
        flex: 0 0 auto;
    }

    .k-sprite {
        display: inline-block;
        width: 1rem;
        height: 1rem;
        overflow: hidden;
        background-repeat: no-repeat;
        font-size: 0;
        line-height: 0;
        text-align: center;
    }

    .k-image {
        display: inline-block;
    }

    // Layout
    .k-reset {
        margin: 0;
        padding: 0;
        border-width: 0;
        outline: 0;
        text-decoration: none;
        font: inherit;
        list-style: none;
    }

    kendo-sortable {
        display: block;
    }


    // Links
    .k-link,
    .k-link:hover {
        color: inherit;
        text-decoration: none;
        outline: 0;
        cursor: pointer;
    }

    // Outline
    .k-content {
        outline: 0;
    }

    // Centering
    .k-centered {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    // Disable mouse events
    .k-no-click {
        pointer-events: none;
    }

    // Off-screen container used during PDF export
    .k-pdf-export-shadow {
        position: absolute;
        overflow: hidden;
        left: -15000px;
        width: 14400px;
    }

    // PDF export icons fix
    .kendo-pdf-hide-pseudo-elements::before,
    .kendo-pdf-hide-pseudo-elements::after {
        display: none !important; // stylelint-disable-line declaration-no-important
    }

    // Dirty indicator
    .k-dirty {
        margin: 0;
        padding: 0;
        width: 0;
        height: 0;
        border-width: 3px;
        border-style: solid;
        border-block-start-color: currentColor;
        border-block-end-color: transparent;
        border-inline-start-color: transparent;
        border-inline-end-color: currentColor;
        position: absolute;
        inset-block-start: 0;
        inset-inline-end: 0;
    }
}

// #endregion
// #region @import "./_selection.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_selection.scss
@mixin kendo-core--styles--selection() {

    // Marquee
    .k-marquee {
        position: absolute;
        z-index: 100000;
    }

    .k-marquee-color,
    .k-marquee-text {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .k-marquee-color {
        color: k-get-theme-color-var( neutral-160, #{$kendo-selected-text} );
        background-color: k-get-theme-color-var( primary-60, #{$kendo-selected-bg} );
        border-color: k-get-theme-color-var( primary-100, #{$kendo-selected-border} );
        opacity: .6;
    }
    .k-marquee-text {
        color: k-get-theme-color-var( neutral-160, #{$kendo-selected-text} );
    }

    // Text selection
    .k-text-selection {
        ::selection {
            background-color:  if($kendo-enable-color-system, k-color( primary ), k-get-theme-color-var( primary-100 ));
            color: if($kendo-enable-color-system, k-color( on-primary ), $kendo-selected-text);
        }
    }

}

// #endregion
// #region @import "./_scrollbar.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_scrollbar.scss
@mixin kendo-core--styles--scrollbar() {

    // virtual scrollbar
    .k-scrollbar {
        position: absolute;
        overflow: scroll;
    }

    .k-scrollbar-vertical {
        top: 0;
        right: 0;
        width: 17px; // scrollbar width
        height: 100%;
        overflow-x: hidden;
    }

    .k-touch-scrollbar {
        display: none;
        position: absolute;
        z-index: 200000;
        height: 8px;
        width: 8px;
        border: 1px solid #8a8a8a;
        background-color: #858585;
    }

}

// #endregion
// #region @import "./_resizing.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_resizing.scss
@mixin kendo-core--styles--resizing() {

    // Resize handle
    .k-resize-handle,
    .k-resize-hint {
        position: absolute;
        border-color: inherit;
        z-index: 200;
    }
    .k-resize-handle {
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .k-resize-handle::before {
        content: "";
        border: 0 solid;
        border-color: inherit;
    }
    .k-resize-n {
        width: 100%;
        height: 6px;
        flex-direction: row;
        left: 0;
        top: -3px;
        cursor: n-resize;
    }
    .k-resize-s {
        width: 100%;
        height: 6px;
        flex-direction: row;
        left: 0;
        bottom: -3px;
        cursor: s-resize;
    }
    .k-resize-w {
        width: 6px;
        height: 100%;
        flex-direction: column;
        top: 0;
        left: -3px;
        cursor: w-resize;
    }
    .k-resize-e {
        width: 6px;
        height: 100%;
        flex-direction: column;
        top: 0;
        right: -3px;
        cursor: e-resize;
    }

    .k-resize-sw,
    .k-resize-se,
    .k-resize-nw,
    .k-resize-ne {
        width: 5px;
        height: 5px;
    }

    .k-resize-sw {
        cursor: sw-resize;
        bottom: 0;
        left: 0;
    }
    .k-resize-se {
        cursor: se-resize;
        bottom: 0;
        right: 0;
    }
    .k-resize-nw {
        cursor: nw-resize;
        top: 0;
        left: 0;
    }
    .k-resize-ne {
        cursor: ne-resize;
        top: 0;
        right: 0;
    }

    .k-vertical-resize {
        cursor: row-resize;
    }
    .k-horizontal-resize {
        cursor: col-resize;
    }

    // Resize hint
    .k-resize-hint {
        display: flex;
        flex-direction: column;
        align-items: center;

        .k-resize-hint-handle {
            width: auto;
            height: 20px;
            align-self: stretch;
        }
        .k-resize-hint-marker {
            width: 2px;
            height: auto;
            flex: 1 1 auto;
        }
    }
    .k-resize-hint-vertical {
        display: flex;
        flex-direction: row;
        align-items: center;

        .k-resize-hint-handle {
            width: 20px;
            height: auto;
            align-self: stretch;
        }

        .k-resize-hint-marker {
            width: auto;
            height: 2px;
            flex: 1 1 auto;
        }
    }

}

// #endregion
// #region @import "./_colors.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_colors.scss
@mixin kendo-core--styles--colors() {
    @if ($kendo-enable-color-system) {
        @include color-system--styles();
    }
}

// #endregion
// #region @import "./_utils-components.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/styles/_utils-components.scss
$kendo-prefix: k- !default;

@mixin kendo-core--styles--utils-components() {
    // Legacy aliases
    .#{$kendo-prefix}top-start,
    .#{$kendo-prefix}pos-top-start {
        top: 0;
        inset-inline-start: 0;
    }

    .#{$kendo-prefix}top-end,
    .#{$kendo-prefix}pos-top-end {
        top: 0;
        inset-inline-end: 0;
    }

    .#{$kendo-prefix}bottom-start,
    .#{$kendo-prefix}pos-bottom-start {
        bottom: 0;
        inset-inline-start: 0;
    }

    .#{$kendo-prefix}bottom-end,
    .#{$kendo-prefix}pos-bottom-end {
        bottom: 0;
        inset-inline-end: 0;
    }

    .#{$kendo-prefix}top-center,
    .#{$kendo-prefix}pos-top-center {
        top: 0;
        left: 50%;
        transform: translateX(-50%);
    }
    .#{$kendo-prefix}middle-left,
    .#{$kendo-prefix}middle-start,
    .#{$kendo-prefix}pos-middle-start {
        top: 50%;
        left: 0;
        transform: translateY(-50%);
    }
    .#{$kendo-prefix}middle-center {
        top: 50%;
        left: 50%;
        transform: translateY(-50%);
    }
    .#{$kendo-prefix}middle-right,
    .#{$kendo-prefix}middle-end,
    .#{$kendo-prefix}pos-middle-end {
        top: 50%;
        right: 0;
        transform: translateY(-50%);
    }
    .#{$kendo-prefix}bottom-center,
    .#{$kendo-prefix}pos-bottom-center {
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
    }
}

// #endregion

@mixin kendo-core--styles() {
    @include kendo-core--styles--colors();
    @include kendo-core--styles--accessibility();
    @include kendo-core--styles--animations();
    @include kendo-core--styles--asp-fallback();
    @include kendo-core--styles--layout();
    @include kendo-core--styles--normalize();
    @include kendo-core--styles--base();
    @include kendo-core--styles--selection();
    @include kendo-core--styles--scrollbar();
    @include kendo-core--styles--resizing();
    @include kendo-core--styles--utils-components();
}

// #endregion
// #region @import "./elevation/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/elevation/index.import.scss
// #region @import "../functions/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/index.import.scss
// File already imported_once. Skipping output.
// #endregion

$_default-elevation: (
    1: (
        0 2px 3px rgba(0, 0, 0, .04),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    2: (
        0 4px 6px rgba(0, 0, 0, .06),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    3: (
        0 6px 8px rgba(0, 0, 0, .08),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    4: (
        0 8px 10px rgba(0, 0, 0, .12),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    5: (
        0 10px 12px rgba(0, 0, 0, .16),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    6: (
        0 12px 14px rgba(0, 0, 0, .2),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    7: (
        0 14px 16px rgba(0, 0, 0, .24),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    8: (
        0 16px 18px rgba(0, 0, 0, .28),
        0 4px 16px rgba(0, 0, 0, .12)
    ),
    9: (
        0 32px 34px rgba(0, 0, 0, .32),
        0 4px 16px rgba(0, 0, 0, .12)
    )
) !default;

/// The global default Elevation map.
/// @group elevation
$kendo-elevation: $_default-elevation !default;

$kendo-elevation: k-map-merge($_default-elevation, $kendo-elevation);

@function k-shadow-filter($shadow) {
    $result: '';
    @each $value in $shadow {
        $result: $result + "drop-shadow(" + $value + ") ";
    }
    @return #{$result};
}

@function k-elevation($level) {
    @return var(--kendo-elevation-#{$level}, k-map-get($kendo-elevation, $level));
}


@mixin kendo-elevation--styles() {
    :root {
        @each $level, $shadow in $kendo-elevation {
            --kendo-elevation-#{$level}: #{$shadow};
        }
    }
}

// #endregion
// #region @import "./typography/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/typography/index.import.scss
// #region @import "../functions/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/index.import.scss
// File already imported_once. Skipping output.
// #endregion

/// The base font size across all components.
/// @group typography
$kendo-font-size: 0.875rem !default;
/// The extra extra small font size across all components.
/// @group typography
$kendo-font-size-xxs: 0.5rem !default;
/// The extra small font size across all components.
/// @group typography
$kendo-font-size-xs: 0.625rem !default;
/// The small font size across all components.
/// @group typography
$kendo-font-size-sm: 0.75rem !default;
/// The medium font size across all components.
/// @group typography
$kendo-font-size-md: $kendo-font-size !default;
/// The large font size across all components.
/// @group typography
$kendo-font-size-lg: 1rem !default;
/// The extra large font size across all components.
/// @group typography
$kendo-font-size-xl: 1.25rem !default;

/// The base line height across all components.
/// @group typography
$kendo-line-height: k-math-div( 20, 14 ) !default;
/// The extra small line height across all components.
/// @group typography
$kendo-line-height-xs: 1 !default;
/// The small line height across all components.
/// @group typography
$kendo-line-height-sm: 1.25 !default;
/// The medium line height across all components.
/// @group typography
$kendo-line-height-md: $kendo-line-height !default;
/// The large line height across all components.
/// @group typography
$kendo-line-height-lg: 1.5 !default;
/// The base line height in ems across all components.
/// @group typography
$kendo-line-height-em: calc( #{$kendo-line-height-md} * 1em ) !default;

/// The base font weight across all components.
/// @group typography
$kendo-font-weight: 400 !default;
/// The thin font weight across all components.
/// @group typography
$kendo-font-weight-thin: 100 !default;
/// The extra light font weight across all components.
/// @group typography
$kendo-font-weight-extra-light: 200 !default;
/// The light font weight across all components.
/// @group typography
$kendo-font-weight-light: 300 !default;
/// The normal font weight across all components.
/// @group typography
$kendo-font-weight-normal: $kendo-font-weight !default;
/// The medium font weight across all components.
/// @group typography
$kendo-font-weight-medium: 500 !default;
/// The semibold font weight across all components.
/// @group typography
$kendo-font-weight-semibold: 600 !default;
/// The bold font weight across all components.
/// @group typography
$kendo-font-weight-bold: 700 !default;
/// The extra bold font weight across all components.
/// @group typography
$kendo-font-weight-extra-bold: 800 !default;
/// The most pronounced font weight across all components.
/// @group typography
$kendo-font-weight-black: 900 !default;

/// The base letter spacing across all components.
/// @group typography
$kendo-letter-spacing: null !default;
/// The tightest letter spacing across all components.
/// @group typography
$kendo-letter-spacing-tightest: -.15px !default;
/// Slightly looser than the tighter letter spacing across all components.
/// @group typography
$kendo-letter-spacing-tighter: -.10px !default;
/// Moderately tight letter spacing across all components.
/// @group typography
$kendo-letter-spacing-tight: -.5px !default;
/// The normal letter spacing across all components.
/// @group typography
$kendo-letter-spacing-normal: 0px !default;
/// Wide letter spacing across all components.
/// @group typography
$kendo-letter-spacing-wide: .5px !default;
/// Slightly wider than the wide letter spacing across all components.
/// @group typography
$kendo-letter-spacing-wider: .10px !default;
/// The widest letter spacing across all components.
/// @group typography
$kendo-letter-spacing-widest: .15px !default;

/// The sans font family across all components.
/// @group typography
$kendo-font-family-sans: Arial, Verdana, Tahoma, "Trebuchet MS", Helvetica, Impact, Gill Sans !default;
/// The serif font family across all components.
/// @group typography
$kendo-font-family-serif: "Times New Roman", Georgia, Garamond, Palatino, Baskerville !default;
/// The sans-serif font family across all components.
/// @group typography
$kendo-font-family-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
/// The monospace font family across all components.
/// @group typography
$kendo-font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Roboto Mono", "Ubuntu Mono", "Lucida Console", "Courier New", monospace !default;

/// The base font family across all components.
/// @group typography
$kendo-font-family: inherit !default;

$_default-font-sizes: (
    xxs: $kendo-font-size-xxs,
    xs: $kendo-font-size-xs,
    sm: $kendo-font-size-sm,
    md: $kendo-font-size-md,
    lg: $kendo-font-size-lg,
    xl: $kendo-font-size-xl
) !default;

$_default-line-heights: (
    xs: $kendo-line-height-xs,
    sm: $kendo-line-height-sm,
    md: $kendo-line-height-md,
    lg: $kendo-line-height-lg,
) !default;

$_default-font-weights: (
    thin: $kendo-font-weight-thin,
    extra-light: $kendo-font-weight-extra-light,
    light: $kendo-font-weight-light,
    normal: $kendo-font-weight-normal,
    medium: $kendo-font-weight-medium,
    semibold: $kendo-font-weight-semibold,
    bold: $kendo-font-weight-bold
) !default;

$_default-letter-spacings: (
    tightest: $kendo-letter-spacing-tightest,
    tighter: $kendo-letter-spacing-tighter,
    tight: $kendo-letter-spacing-tight,
    normal: $kendo-letter-spacing-normal,
    wide: $kendo-letter-spacing-wide,
    wider: $kendo-letter-spacing-wider,
    widest: $kendo-letter-spacing-widest
) !default;

$_default-font-families: (
    sans: $kendo-font-family-sans,
    serif: $kendo-font-family-serif,
    sans-serif: $kendo-font-family-sans-serif,
    monospace: $kendo-font-family-monospace
) !default;

$kendo-font-sizes: $_default-font-sizes !default;

/// The font sizes map
/// @group typography
$kendo-font-sizes: k-map-merge( $_default-font-sizes, $kendo-font-sizes );

$kendo-line-heights: $_default-line-heights !default;

/// The line heights map
/// @group typography
$kendo-line-heights: k-map-merge( $_default-line-heights, $kendo-line-heights );

$kendo-font-weights: $_default-font-weights !default;

/// The font weights map
/// @group typography
$kendo-font-weights: k-map-merge( $_default-font-weights, $kendo-font-weights );

$kendo-letter-spacings: $_default-letter-spacings !default;

/// The letter spacings map
/// @group typography
$kendo-letter-spacings: k-map-merge( $_default-letter-spacings, $kendo-letter-spacings );

$kendo-font-families: $_default-font-families !default;

/// The font families map
/// @group typography
$kendo-font-families: k-map-merge( $_default-font-families, $kendo-font-families );

@mixin typography( $font-size: null, $font-family: null, $line-height: null, $font-weight: null, $letter-spacing: null ) {
    font-size: $font-size;
    font-family: $font-family;
    line-height: $line-height;
    font-weight: $font-weight;
    letter-spacing: $letter-spacing;
}


@mixin kendo-core--typography--styles() {
    :root {

        --kendo-font-family: #{k-meta-inspect($kendo-font-family)};
        --kendo-font-size: #{$kendo-font-size};
        --kendo-line-height: #{$kendo-line-height};
        --kendo-font-weight: #{$kendo-font-weight};
        --kendo-letter-spacing: #{$kendo-letter-spacing};

        @each $size, $value in $kendo-font-sizes {
            --kendo-font-size-#{$size}: #{$value};
        }

        @each $size, $value in $kendo-line-heights {
            --kendo-line-height-#{$size}: #{$value};
        }

        @each $weight, $value in $kendo-font-weights {
            --kendo-font-weight-#{$weight}: #{$value};
        }

        @each $spacing, $value in $kendo-letter-spacings {
            --kendo-letter-spacing-#{$spacing}: #{$value};
        }

        @each $family, $value in $kendo-font-families {
            --kendo-font-family-#{$family}: #{$value};
        }
    }
}

// #endregion
// #region @import "./spacing/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/spacing/index.import.scss
// File already imported_once. Skipping output.
// #endregion
// #region @import "./border-radii/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/border-radii/index.import.scss
/// The none border radius used across the Components.
/// @group radii
$kendo-border-radius-none: k-map-get($kendo-spacing, 0) !default;
/// The extra small border radius used across the Components.
/// @group radii
$kendo-border-radius-xs: k-map-get($kendo-spacing, 1px) !default;
/// The small border radius used across the Components.
/// @group radii
$kendo-border-radius-sm: k-map-get($kendo-spacing, 0.5) !default;
/// The medium border radius used across the Components.
/// @group radii
$kendo-border-radius-md: k-map-get($kendo-spacing, 1) !default;
/// The large border radius used across the Components.
/// @group radii
$kendo-border-radius-lg: k-map-get($kendo-spacing, 1.5) !default;
/// The extra large border radius used across the Components.
/// @group radii
$kendo-border-radius-xl: k-map-get($kendo-spacing, 2) !default;
/// The third largest border radius used across the Components.
/// @group radii
$kendo-border-radius-xxl: k-map-get($kendo-spacing, 3) !default;
/// The second largest border radius used across the Components.
/// @group radii
$kendo-border-radius-xxxl: k-map-get($kendo-spacing, 4) !default;
/// The largest border radius used across the Components.
/// @group radii
$kendo-border-radius-full: 9999px !default;


$_default-border-radii: (
    none: $kendo-border-radius-none,
    xs: $kendo-border-radius-xs,
    sm: $kendo-border-radius-sm,
    md: $kendo-border-radius-md,
    lg: $kendo-border-radius-lg,
    xl: $kendo-border-radius-xl,
    xxl: $kendo-border-radius-xxl,
    xxxl: $kendo-border-radius-xxxl,
    full: $kendo-border-radius-full

) !default;

$kendo-border-radii: $_default-border-radii !default;

/// The global radii Map.
/// @group radii
$kendo-border-radii: k-map-merge($_default-border-radii, $kendo-border-radii);


@function k-border-radius($key) {
    $_border-radius: k-map-get($kendo-border-radii, $key);
    @return var(--kendo-border-radius-#{$key}, $_border-radius);
}

@mixin kendo-border-radius--styles() {
    :root {
        @each $key, $value in $kendo-border-radii {
            --kendo-border-radius-#{$key}: #{$value};
        }
    }

    // Generate k-rounded-* classes
    // which are part of the components rendering.
    @each $key, $val in $kendo-border-radii {
        .k-rounded-#{$key} {
            border-radius: k-border-radius($key);
        }
    }
}

// #endregion
// #region @import "./_variables.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/_variables.scss
// #region @import "./functions/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/functions/index.import.scss
// File already imported_once. Skipping output.
// #endregion

// Options
$kendo-enable-shadows: true !default;
$kendo-enable-rounded: true !default;
$kendo-enable-gradients: true !default;
$kendo-enable-transitions: true !default;
$kendo-nested-disabled: false !default;

// Equilateral triangle variables
// stylelint-disable number-max-precision
$equilateral-index: 1.7320508076 !default;
$equilateral-height: 0.8660254038 !default;
// stylelint-enable number-max-precision

// #endregion

// #endregion

// Register
@include module-register((name: "utils-typography-font-family"));

@mixin kendo-utils--typography--font-family() {
    @include module-render("utils-typography-font-family") {

        // Font family utility classes
        @include generate-utils( font-family, font-family, $kendo-font-families, $css-var: "font-family" );

    }
}

// #endregion
// #region @import "./_font-size.scss"; -> scss/typography/_font-size.scss
// #region @import "@progress/kendo-theme-core/scss/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/index.import.scss
// File already imported_once. Skipping output.
// #endregion

/// This is equivalent to `font-size: 10px;`.
/// @example font-size: 10px;
/// @name .k-font-size-xs
/// @group font-size
/// @contextType css

/// This is equivalent to `font-size: 12px;`.
/// @example font-size: 12px;
/// @name .k-font-size-sm
/// @group font-size
/// @contextType css

/// This is equivalent to `font-size: 14px;`.
/// @example font-size: 14px;
/// @name .k-font-size-md
/// @group font-size
/// @contextType css

/// This is equivalent to `font-size: 16px;`.
/// @example font-size: 16px;
/// @name .k-font-size-lg
/// @group font-size
/// @contextType css

/// This is equivalent to `font-size: 20px;`.
/// @example font-size: 20px;
/// @name .k-font-size-xl
/// @group font-size
/// @contextType css

// Register
@include module-register((name: "utils-typography-font-size"));

@mixin kendo-utils--typography--font-size() {
    @include module-render("utils-typography-font-size") {

        // Font size utility classes
        @include generate-utils( font-size, font-size, $kendo-font-sizes, $css-var: "font-size" );

        // Legacy aliases
        @include generate-utils( fs, font-size, $kendo-font-sizes, $css-var: "fs" );

    }
}

// #endregion
// font smoothing
// #region @import "./_font-style.scss"; -> scss/typography/_font-style.scss
/// This is equivalent to `font-style: italic;`.
/// @example font-style: italic;
/// @name .k-font-italic
/// @group font-style
/// @contextType css

/// This is equivalent to `font-style: normal;`.
/// @example font-style: normal;
/// @name .k-font-non-italic
/// @group font-style
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-font-style"));

@mixin kendo-utils--typography--font-style() {
    @include module-render("utils-typography-font-style") {

        // Font style utility classes
        $kendo-utils-font-style: k-map-get( $kendo-utils, "font-style" ) !default;
        @include generate-utils( font-style, font-style, $kendo-utils-font-style, $css-var: "font-style" );

    }
}

// #endregion
// #region @import "./_font-weight.scss"; -> scss/typography/_font-weight.scss
// #region @import "@progress/kendo-theme-core/scss/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/index.import.scss
// File already imported_once. Skipping output.
// #endregion

/// This is equivalent to `font-weight: 100;`.
/// @example font-weight: 100;
/// @name .k-font-thin
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 200;`.
/// @example font-weight: 200;
/// @name .k-font-extralight
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 300;`.
/// @example font-weight: 300;
/// @name .k-font-light
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 400;`.
/// @example font-weight: 400;
/// @name .k-font-normal
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 500;`.
/// @example font-weight: 500;
/// @name .k-font-medium
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 600;`.
/// @example font-weight: 600;
/// @name .k-font-semibold
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 700;`.
/// @example font-weight: 700;
/// @name .k-font-bold
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 800;`.
/// @example font-weight: 800;
/// @name .k-font-extrabold
/// @group font-weight
/// @contextType css

/// This is equivalent to `font-weight: 900;`.
/// @example font-weight: 900;
/// @name .k-font-black
/// @group font-weight
/// @contextType css

// Register
@include module-register((name: "utils-typography-font-weight"));

@mixin kendo-utils--typography--font-weight() {
    @include module-render("utils-typography-font-weight") {

        // Font weight utility classes
        @include generate-utils( font, font-weight, $kendo-font-weights, $css-var: "font-weight" );

        // Legacy aliases
        @include generate-utils( font-weight, font-weight, $kendo-font-weights, $css-var: "font-weight" );

    }
}

// #endregion
// font variant
// letter spacing
// #region @import "./_letter-spacing.scss"; -> scss/typography/_letter-spacing.scss
// #region @import "@progress/kendo-theme-core/scss/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/index.import.scss
// File already imported_once. Skipping output.
// #endregion

// Register
@include module-register((name: "utils-typography-letter-spacing"));

@mixin kendo-utils--typography--letter-spacing() {
    @include module-render("utils-typography-letter-spacing") {

        // Letter spacing utility classes
        @include generate-utils( letter-spacing, letter-spacing, $kendo-letter-spacings, $css-var: "letter-spacing" );

    }
}


// #endregion
// line height
// #region @import "./_line-height.scss"; -> scss/typography/_line-height.scss
// #region @import "@progress/kendo-theme-core/scss/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/index.import.scss
// File already imported_once. Skipping output.
// #endregion

// Register
@include module-register((name: "utils-typography-line-height"));

@mixin kendo-utils--typography--line-height() {
    @include module-render("utils-typography-line-height") {

        // Line height utility classes
        @include generate-utils( line-height, line-height, $kendo-line-heights, $css-var: "line-height" );

    }
}

// #endregion
// #region @import "./_list-style.scss"; -> scss/typography/_list-style.scss
/// This is equivalent to `list-style-type: none;`.
/// @example list-style-type: none;
/// @name .k-list-none
/// @group list-style
/// @contextType css

/// This is equivalent to `list-style-type: disc;`.
/// @example list-style-type: disc;
/// @name .k-list-disc
/// @group list-style
/// @contextType css

/// This is equivalent to `list-style-type: decimal;`.The marker of list items is a number.
/// @example list-style-type: decimal;
/// @name .k-list-decimal
/// @group list-style
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-list-style"));

@mixin kendo-utils--typography--list-style-type() {
    @include module-render("utils-typography-list-style") {

        // list-style-type utility classes
        $kendo-utils-list-style-type: k-map-get( $kendo-utils, "list-style-type" ) !default;
        @include generate-utils( list, list-style-type, $kendo-utils-list-style-type );

    }
}

// #endregion
// #region @import "./_text-align.scss"; -> scss/typography/_text-align.scss
/// This is equivalent to `text-align: left;`.
/// @example text-align: left;
/// @name .k-text-left
/// @group text-align
/// @contextType css

/// This is equivalent to `text-align: right;`.
/// @example text-align: right;
/// @name .k-text-right
/// @group text-align
/// @contextType css

/// This is equivalent to `text-align: center;`.
/// @example text-align: center;
/// @name .k-text-center
/// @group text-align
/// @contextType css

/// This is equivalent to `text-align: justify;`.
/// @example text-align: justify;
/// @name .k-text-justify
/// @group text-align
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-text-align"));

@mixin kendo-utils--typography--text-align() {
    @include module-render("utils-typography-text-align") {

        // Text align utility classes
        $kendo-utils-text-align: k-map-get( $kendo-utils, "text-align" ) !default;

        @include generate-utils( text, text-align, $kendo-utils-text-align );

    }
}

// #endregion
// #region @import "./_text-color.scss"; -> scss/typography/_text-color.scss
// TODO: docs

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-text-color"));

@mixin kendo-utils--typography--text-color() {
    @include module-render("utils-typography-text-color") {

        // Text color utility classes
        $kendo-utils-text-color: k-map-get( $kendo-utils, "text-color" ) !default;
        @include generate-utils( text, color, $kendo-utils-text-color, $css-var: 'color' );

        // Legacy aliases
        @include generate-utils( color, color, $kendo-utils-text-color, $css-var: 'color' );

    }
}

// #endregion
// #region @import "./_text-decoration.scss"; -> scss/typography/_text-decoration.scss
/// This is equivalent to `text-decoration: underline;`.
/// @example text-decoration: underline;
/// @name .k-text-underline
/// @group text-decoration
/// @contextType css

/// This is equivalent to `text-decoration: overline;`.
/// @example text-decoration: overline;
/// @name .k-text-overline
/// @group text-decoration
/// @contextType css

/// This is equivalent to `text-decoration: line-through;`.
/// @example text-decoration: line-through;
/// @name .k-text-line-through
/// @group text-decoration
/// @contextType css

/// This is equivalent to `text-decoration: none-decoration;`.
/// @example text-decoration: none-decoration;
/// @name .k-text-no-underline
/// @group text-decoration
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-text-decoration"));

@mixin kendo-utils--typography--text-decoration() {
    @include module-render("utils-typography-text-decoration") {

        // text-decoration utility classes
        $kendo-utils-text-decoration: k-map-get( $kendo-utils, "text-decoration" ) !default;
        @include generate-utils( text, text-decoration, $kendo-utils-text-decoration );

    }
}

// #endregion
// #region @import "./_text-overflow.scss"; -> scss/typography/_text-overflow.scss
/// This is equivalent to `text-overflow: clip;`.
/// @example text-overflow: clip;
/// @name .k-text-clip
/// @group text-overflow
/// @contextType css

/// This is equivalent to `text-overflow: ellipsis; white-space: nowrap; overflow: hidden;`.
/// @example text-overflow: ellipsis; white-space: nowrap; overflow: hidden;
/// @name .k-text-ellipsis
/// @group text-overflow
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-text-overflow"));

@mixin kendo-utils--typography--text-overflow() {
    @include module-render("utils-typography-text-overflow") {

        // Text overflow utility classes
        $kendo-utils-text-overflow: k-map-get( $kendo-utils, "text-overflow" ) !default;
        @include generate-utils( text, text-overflow, $kendo-utils-text-overflow );


        // Text truncate utility classes
        .#{$kendo-prefix}text-truncate {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .\!#{$kendo-prefix}text-truncate {
            white-space: nowrap !important; // stylelint-disable-line declaration-no-important
            overflow: hidden !important; // stylelint-disable-line declaration-no-important
            text-overflow: ellipsis !important; // stylelint-disable-line declaration-no-important
        }

        // Legacy aliases
        .#{$kendo-prefix}text-ellipsis { @extend .#{$kendo-prefix}text-truncate !optional; }
        .\!#{$kendo-prefix}text-ellipsis { @extend .\!#{$kendo-prefix}text-truncate !optional; }

    }
}

// #endregion
// #region @import "./_text-transform.scss"; -> scss/typography/_text-transform.scss
/// This is equivalent to `text-transform: lowercase;`.
/// @example text-transform: lowercase;
/// @name .k-text-lowercase
/// @group text-transform
/// @contextType css

/// This is equivalent to `text-transform: uppercase;`.
/// @example text-transform: uppercase;
/// @name .k-text-uppercase
/// @group text-transform
/// @contextType css

/// This is equivalent to `text-transform: capitalize;`.
/// @example text-transform: capitalize;
/// @name .k-text-capitalize
/// @group text-transform
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-text-transform"));

@mixin kendo-utils--typography--text-transform() {
    @include module-render("utils-typography-text-transform") {

        // Text transform utility classes
        $kendo-utils-text-transform: k-map-get( $kendo-utils, "text-transform" ) !default;
        @include generate-utils( text, text-transform, $kendo-utils-text-transform );

    }
}

// #endregion
// text indent
// #region @import "./_vertical-align.scss"; -> scss/typography/_vertical-align.scss
/// This is equivalent to `vertical-align: baseline;`.
/// @example vertical-align: baseline;
/// @name .k-align-baseline
/// @group vertical-align
/// @contextType css

/// This is equivalent to `vertical-align: top;`.
/// @example vertical-align: top;
/// @name .k-align-top
/// @group vertical-align
/// @contextType css

/// This is equivalent to `vertical-align: middle;`.
/// @example vertical-align: middle;
/// @name .k-align-middle
/// @group vertical-align
/// @contextType css

/// This is equivalent to `vertical-align: bottom;`.
/// @example vertical-align: bottom;
/// @name .k-align-bottom
/// @group vertical-align
/// @contextType css

/// This is equivalent to `vertical-align: text-top;`.
/// @example vertical-align: text-top;
/// @name .k-align-text-top
/// @group vertical-align
/// @contextType css

/// This is equivalent to `vertical-align: text-bottom;`.
/// @example vertical-align: text-bottom;
/// @name .k-align-text-bottom
/// @group vertical-align
/// @contextType css

/// This is equivalent to `vertical-align: sub;`.
/// @example vertical-align: sub;
/// @name .k-align-sub
/// @group vertical-align
/// @contextType css

/// This is equivalent to `vertical-align: super;`.
/// @example vertical-align: super;
/// @name .k-align-super
/// @group vertical-align
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-vertical-align"));

@mixin kendo-utils--typography--vertical-align() {
    @include module-render("utils-typography-vertical-align") {

        // vertical-align utility classes
        $kendo-utils-vertical-align: k-map-get( $kendo-utils, "vertical-align" ) !default;
        @include generate-utils( align, vertical-align, $kendo-utils-vertical-align );

    }
}

// #endregion
// #region @import "./_white-space.scss"; -> scss/typography/_white-space.scss
/// This is equivalent to `white-space: normal;`.
/// @example white-space: normal;
/// @name .k-white-space-normal
/// @group white-space
/// @contextType css

/// This is equivalent to `white-space: nowrap;`.
/// @example white-space: nowrap;
/// @name .k-white-space-nowrap
/// @group white-space
/// @contextType css

/// This is equivalent to `white-space: pre;`.
/// @example white-space: pre;
/// @name .k-white-space-pre
/// @group white-space
/// @contextType css

/// This is equivalent to `white-space: pre-wrap;`.
/// @example white-space: pre-wrap;
/// @name .k-white-space-pre-wrap
/// @group white-space
/// @contextType css

/// This is equivalent to `white-space: pre-line;`.
/// @example white-space: pre-line;
/// @name .k-white-space-pre-line
/// @group white-space
/// @contextType css

/// This is equivalent to `white-space: break-spaces;`.
/// @example white-space: break-spaces;
/// @name .k-white-space-break-spaces
/// @group white-space
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-typography-white-space"));

@mixin kendo-utils--typography--white-space() {
    @include module-render("utils-typography-white-space") {

        // White space utility classes
        $kendo-utils-white-space: k-map-get( $kendo-utils, "white-space" ) !default;

        @include generate-utils( white-space, white-space, $kendo-utils-white-space );
        @include generate-utils( whitespace, white-space, $kendo-utils-white-space );


        // Legacy aliases
        .#{$kendo-prefix}text-nowrap { @extend .#{$kendo-prefix}white-space-nowrap !optional; }

    }
}

// #endregion


@mixin kendo-utils--typography() {
    @include kendo-utils--typography--font-family();
    @include kendo-utils--typography--font-size();
    @include kendo-utils--typography--font-style();
    @include kendo-utils--typography--font-weight();
    @include kendo-utils--typography--letter-spacing();
    @include kendo-utils--typography--line-height();
    @include kendo-utils--typography--list-style-type();
    @include kendo-utils--typography--text-align();
    @include kendo-utils--typography--text-color();
    @include kendo-utils--typography--text-decoration();
    @include kendo-utils--typography--text-overflow();
    @include kendo-utils--typography--text-transform();
    @include kendo-utils--typography--vertical-align();
    @include kendo-utils--typography--white-space();
}

// #endregion
// #region @import "./background/index.import.scss"; -> scss/background/index.import.scss
// #region @import "./_background-clip.scss"; -> scss/background/_background-clip.scss
/// This is equivalent to `background-clip: border-box;`.
/// @example background-clip: border-box;
/// @name .k-bg-clip-border
/// @group background-clip
/// @contextType css

/// This is equivalent to `background-clip: padding-box;`.
/// @example background-clip: padding-box;
/// @name .k-bg-clip-padding
/// @group background-clip
/// @contextType css

/// This is equivalent to `background-clip: content-box;`.
/// @example background-clip: content-box;
/// @name .k-bg-clip-content
/// @group background-clip
/// @contextType css

/// This is equivalent to `background-clip: text;`.
/// @example background-clip: text;
/// @name .k-bg-clip-text
/// @group background-clip
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-background-clip"));

@mixin kendo-utils--background--background-clip() {
    @include module-render("utils-background-clip") {

        // Background color utility classes
        $kendo-utils-background-clip: k-map-get( $kendo-utils, "background-clip" ) !default;
        @include generate-utils( bg-clip, background-clip, $kendo-utils-background-clip );

    }
}

// #endregion
// #region @import "./_background-color.scss"; -> scss/background/_background-color.scss
/// This is equivalent to `background-color: inherit;`.
/// @example background-color: inherit;
/// @name .k-bg-inherit
/// @group background-color
/// @contextType css

/// This is equivalent to `background-color: transparent;`.
/// @example background-color: transparent;
/// @name .k-bg-transparent
/// @group background-color
/// @contextType css

/// This is equivalent to `background-color: black;`.
/// @example background-color: black;
/// @name .k-bg-black
/// @group background-color
/// @contextType css

/// This is equivalent to `background-color: white;`.
/// @example background-color: white;
/// @name .k-bg-white
/// @group background-color
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-background-color"));

@mixin kendo-utils--background--background-color() {
    @include module-render("utils-background-color") {

        // Background color utility classes
        $kendo-utils-background-color: k-map-get( $kendo-utils, "background-color" ) !default;
        @include generate-utils( bg, background-color, $kendo-utils-background-color, $css-var: 'color' );

    }
}

// #endregion
// #region @import "./_background-position.scss"; -> scss/background/_background-position.scss
/// This is equivalent to `background-position: center;`.
/// @example background-position: center;
/// @name .k-bg-center
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: top;`.
/// @example background-position: top;
/// @name .k-bg-top
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: right;`.
/// @example background-position: right;
/// @name .k-bg-right
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: bottom;`.
/// @example background-position: bottom;
/// @name .k-bg-bottom
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: left;`.
/// @example background-position: left;
/// @name .k-bg-left
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: top left;`.
/// @example background-position: top left;
/// @name .k-bg-top-left
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: top right;`.
/// @example background-position: top right;
/// @name .k-bg-top-right
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: bottom left;`.
/// @example background-position: bottom left;
/// @name .k-bg-bottom-left
/// @group background-position
/// @contextType css

/// This is equivalent to `background-position: bottom right;`.
/// @example background-position: bottom right;
/// @name .k-bg-bottom-right
/// @group background-position
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-background-position"));

@mixin kendo-utils--background--background-position() {
    @include module-render("utils-background-position") {

        // Background position utility classes
        $kendo-utils-background-position: k-map-get( $kendo-utils, "background-position" ) !default;
        @include generate-utils( bg, background-position, $kendo-utils-background-position );

    }
}

// #endregion
// #region @import "./_background-size.scss"; -> scss/background/_background-size.scss
/// This is equivalent to `background-size: auto;`.
/// @example background-size: auto;
/// @name .k-bg-auto
/// @group background-size
/// @contextType css

/// This is equivalent to `background-size: cover;`.
/// @example background-size: cover;
/// @name .k-bg-cover
/// @group background-size
/// @contextType css

/// This is equivalent to `background-size: contain;`.
/// @example background-size: contain;
/// @name .k-bg-contain
/// @group background-size
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-background-size"));

@mixin kendo-utils--background--background-size() {
    @include module-render("utils-background-size") {

        // Background size utility classes
        $kendo-utils-background-size: k-map-get( $kendo-utils, "background-size" ) !default;
        @include generate-utils( bg, background-size, $kendo-utils-background-size );

    }
}

// #endregion


@mixin kendo-utils--background() {
    @include kendo-utils--background--background-clip();
    @include kendo-utils--background--background-color();
    @include kendo-utils--background--background-position();
    @include kendo-utils--background--background-size();
}

// #endregion
// #region @import "./border/index.import.scss"; -> scss/border/index.import.scss
// #region @import "./_border-color.scss"; -> scss/border/_border-color.scss
/// This is equivalent to `border-color: inherit;`.
/// @example border-color: inherit;
/// @name .k-border-inherit
/// @group border-color
/// @contextType css

/// This is equivalent to `border-color: currentColor;`.
/// @example border-color: currentColor;
/// @name .k-border-currentColor
/// @group border-color
/// @contextType css

/// This is equivalent to `border-color: transparent;`.
/// @example border-color: transparent;
/// @name .k-border-transparent
/// @group border-color
/// @contextType css

/// This is equivalent to `border-color: black;`.
/// @example border-color: black;
/// @name .k-border-black
/// @group border-color
/// @contextType css

/// This is equivalent to `border-color: white;`.
/// @example border-color: white;
/// @name .k-border-white
/// @group border-color
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-border-color"));

@mixin kendo-utils--border--border-color() {
    @include module-render("utils-border-color") {

        // Border color utility classes
        $kendo-utils-border-color: k-map-get( $kendo-utils, "border-color" ) !default;
        @include generate-utils( border, border-color, $kendo-utils-border-color, $css-var: 'color' );

    }
}

// #endregion
// #region @import "./_border-radius.scss"; -> scss/border/_border-radius.scss
/// This is equivalent to `border-radius: 0.25rem;`.
/// @example border-radius: 0.25rem;
/// @name .k-rounded
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-radius: 0;`.
/// @example border-radius: 0;
/// @name .k-rounded-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-radius: 0.125rem;`.
/// @example border-radius: 0.125rem;
/// @name .k-rounded-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-radius: 0.25rem;`.
/// @example border-radius: 0.25rem;
/// @name .k-rounded-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-radius: 0.5rem;`.
/// @example border-radius: 0.5rem;
/// @name .k-rounded-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-radius: 9999px;`.
/// @example border-radius: 9999px;
/// @name .k-rounded-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-left-radius: 0.25rem;`.
/// @example border-top-left-radius: 0.25rem;
/// @name .k-rounded-tl
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-left-radius: 0;`.
/// @example border-top-left-radius: 0;
/// @name .k-rounded-tl-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-left-radius: 0.125rem;`.
/// @example border-top-left-radius: 0.125rem;
/// @name .k-rounded-tl-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-left-radius: 0.25rem;`.
/// @example border-top-left-radius: 0.25rem;
/// @name .k-rounded-tl-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-left-radius: 0.5rem;`.
/// @example border-top-left-radius: 0.5rem;
/// @name .k-rounded-tl-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-left-radius: 9999px;`.
/// @example border-top-left-radius: 9999px;
/// @name .k-rounded-tl-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-right-radius: 0.25rem;`.
/// @example border-top-right-radius: 0.25rem;
/// @name .k-rounded-tr
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-right-radius: 0;`.
/// @example border-top-right-radius: 0;
/// @name .k-rounded-tr-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-right-radius: 0.125rem;`.
/// @example border-top-right-radius: 0.125rem;
/// @name .k-rounded-tr-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-right-radius: 0.25rem;`.
/// @example border-top-right-radius: 0.25rem;
/// @name .k-rounded-tr-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-right-radius: 0.5rem;`.
/// @example border-top-right-radius: 0.5rem;
/// @name .k-rounded-tr-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-right-radius: 9999px;`.
/// @example border-top-right-radius: 9999px;
/// @name .k-rounded-tr-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-right-radius: 0.25rem;`.
/// @example border-bottom-right-radius: 0.25rem;
/// @name .k-rounded-br
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-right-radius: 0;`.
/// @example border-bottom-right-radius: 0;
/// @name .k-rounded-br-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-right-radius: 0.125rem;`.
/// @example border-bottom-right-radius: 0.125rem;
/// @name .k-rounded-br-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-right-radius: 0.25rem;`.
/// @example border-bottom-right-radius: 0.25rem;
/// @name .k-rounded-br-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-right-radius: 0.5rem;`.
/// @example border-bottom-right-radius: 0.5rem;
/// @name .k-rounded-br-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-right-radius: 9999px;`.
/// @example border-bottom-right-radius: 9999px;
/// @name .k-rounded-br-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-left-radius: 0.25rem;`.
/// @example border-bottom-left-radius: 0.25rem;
/// @name .k-rounded-bl
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-left-radius: 0;`.
/// @example border-bottom-left-radius: 0;
/// @name .k-rounded-bl-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-left-radius: 0.125rem;`.
/// @example border-bottom-left-radius: 0.125rem;
/// @name .k-rounded-bl-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-left-radius: 0.25rem;`.
/// @example border-bottom-left-radius: 0.25rem;
/// @name .k-rounded-bl-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-left-radius: 0.5rem;`.
/// @example border-bottom-left-radius: 0.5rem;
/// @name .k-rounded-bl-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-right-radius: 9999px;`.
/// @example border-bottom-right-radius: 9999px;
/// @name .k-rounded-bl-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-radius: 0.25rem;`.
/// @example border-top-radius: 0.25rem;
/// @name .k-rounded-t
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-radius: 0;`.
/// @example border-top-radius: 0;
/// @name .k-rounded-t-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-radius: 0.125rem;`.
/// @example border-top-radius: 0.125rem;
/// @name .k-rounded-t-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-radius: 0.25rem;`.
/// @example border-top-radius: 0.25rem;
/// @name .k-rounded-t-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-radius: 0.5rem;`.
/// @example border-top-radius: 0.5rem;
/// @name .k-rounded-t-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-top-radius: 9999px;`.
/// @example border-top-radius: 9999px;
/// @name .k-rounded-t-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-right-radius: 0.25rem;`.
/// @example border-right-radius: 0.25rem;
/// @name .k-rounded-r
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-right-radius: 0;`.
/// @example border-right-radius: 0;
/// @name .k-rounded-r-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-right-radius: 0.125rem;`.
/// @example border-right-radius: 0.125rem;
/// @name .k-rounded-r-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-right-radius: 0.25rem;`.
/// @example border-right-radius: 0.25rem;
/// @name .k-rounded-r-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-right-radius: 0.5rem;`.
/// @example border-right-radius: 0.5rem;
/// @name .k-rounded-r-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-right-radius: 9999px;`.
/// @example border-right-radius: 9999px;
/// @name .k-rounded-r-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-radius: 0.25rem;`.
/// @example border-bottom-radius: 0.25rem;
/// @name .k-rounded-b
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-radius: 0;`.
/// @example border-bottom-radius: 0;
/// @name .k-rounded-b-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-radius: 0.125rem;`.
/// @example border-bottom-radius: 0.125rem;
/// @name .k-rounded-b-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-radius: 0.25rem;`.
/// @example border-bottom-radius: 0.25rem;
/// @name .k-rounded-b-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-radius: 0.5rem;`.
/// @example border-bottom-radius: 0.5rem;
/// @name .k-rounded-b-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-bottom-radius: 9999px;`.
/// @example border-bottom-radius: 9999px;
/// @name .k-rounded-b-full
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-left-radius: 0.25rem;`.
/// @example border-left-radius: 0.25rem;
/// @name .k-rounded-l
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-left-radius: 0;`.
/// @example border-left-radius: 0;
/// @name .k-rounded-l-0
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-left-radius: 0.125rem;`.
/// @example border-left-radius: 0.125rem;
/// @name .k-rounded-l-sm
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-left-radius: 0.25rem;`.
/// @example border-left-radius: 0.25rem;
/// @name .k-rounded-l-md
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-left-radius: 0.5rem;`.
/// @example border-left-radius: 0.5rem;
/// @name .k-rounded-l-lg
/// @group border-radius
/// @contextType css

/// This is equivalent to `border-left-radius: 9999px;`.
/// @example border-left-radius: 9999px;
/// @name .k-rounded-l-full
/// @group border-radius
/// @contextType css

// #region @import "@progress/kendo-theme-core/scss/border-radii/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/border-radii/index.import.scss
// File already imported_once. Skipping output.
// #endregion

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-border-radius"));

@mixin kendo-utils--border--border-radius() {
    @include module-render("utils-border-radius") {

        // Border radius utility classes
        @include generate-utils( rounded, border-radius, $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-tl, border-top-left-radius, $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-tr, border-top-right-radius, $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-br, border-bottom-right-radius, $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-bl, border-bottom-left-radius, $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-t, ( border-top-left-radius, border-top-right-radius ), $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-r, ( border-top-right-radius, border-bottom-right-radius ), $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-b, ( border-bottom-left-radius, border-bottom-right-radius ), $kendo-border-radii, $css-var: "border-radius" );
        @include generate-utils( rounded-l, ( border-top-left-radius, border-bottom-left-radius ), $kendo-border-radii, $css-var: "border-radius" );

    }
}

// #endregion
// #region @import "./_border-style.scss"; -> scss/border/_border-style.scss
/// This is equivalent to `border-style: solid;`.
/// @example border-style: solid;
/// @name .k-border-solid
/// @group border-style
/// @contextType css

/// This is equivalent to `border-style: dashed;`.
/// @example border-style: dashed;
/// @name .k-border-dashed
/// @group border-style
/// @contextType css

/// This is equivalent to `border-style: dotted;`.
/// @example border-style: dotted;
/// @name .k-border-dotted
/// @group border-style
/// @contextType css

/// This is equivalent to `border-style: double;`.
/// @example border-style: double;
/// @name .k-border-double
/// @group border-style
/// @contextType css

/// This is equivalent to `border-style: hidden;`.
/// @example border-style: hidden;
/// @name .k-border-hidden
/// @group border-style
/// @contextType css

/// This is equivalent to `border-style: none;`.
/// @example border-style: none;
/// @name .k-border-none
/// @group border-style
/// @contextType css

/// This is equivalent to `border-top-style: solid;`.
/// @example border-top-style: solid;
/// @name .k-border-t-solid
/// @group border-style
/// @contextType css

/// This is equivalent to `border-top-style: dashed;`.
/// @example border-top-style: dashed;
/// @name .k-border-t-dashed
/// @group border-style
/// @contextType css

/// This is equivalent to `border-top-style: dotted;`.
/// @example border-top-style: dotted;
/// @name .k-border-t-dotted
/// @group border-style
/// @contextType css

/// This is equivalent to `border-top-style: double;`.
/// @example border-top-style: double;
/// @name .k-border-t-double
/// @group border-style
/// @contextType css

/// This is equivalent to `border-top-style: hidden;`.
/// @example border-top-style: hidden;
/// @name .k-border-t-hidden
/// @group border-style
/// @contextType css

/// This is equivalent to `border-top-style: none;`.
/// @example border-top-style: none;
/// @name .k-border-t-none
/// @group border-style
/// @contextType css

/// This is equivalent to `border-right-style: solid;`.
/// @example border-right-style: solid;
/// @name .k-border-r-solid
/// @group border-style
/// @contextType css

/// This is equivalent to `border-right-style: dashed;`.
/// @example border-right-style: dashed;
/// @name .k-border-r-dashed
/// @group border-style
/// @contextType css

/// This is equivalent to `border-right-style: dotted;`.
/// @example border-right-style: dotted;
/// @name .k-border-r-dotted
/// @group border-style
/// @contextType css

/// This is equivalent to `border-right-style: double;`.
/// @example border-right-style: double;
/// @name .k-border-r-double
/// @group border-style
/// @contextType css

/// This is equivalent to `border-right-style: hidden;`.
/// @example border-right-style: hidden;
/// @name .k-border-r-hidden
/// @group border-style
/// @contextType css

/// This is equivalent to `border-right-style: none;`.
/// @example border-right-style: none;
/// @name .k-border-r-none
/// @group border-style
/// @contextType css

/// This is equivalent to `border-bottom-style: solid;`.
/// @example border-bottom-style: solid;
/// @name .k-border-b-solid
/// @group border-style
/// @contextType css

/// This is equivalent to `border-bottom-style: dashed;`.
/// @example border-bottom-style: dashed;
/// @name .k-border-b-dashed
/// @group border-style
/// @contextType css

/// This is equivalent to `border-bottom-style: dotted;`.
/// @example border-bottom-style: dotted;
/// @name .k-border-b-dotted
/// @group border-style
/// @contextType css

/// This is equivalent to `border-bottom-style: double;`.
/// @example border-bottom-style: double;
/// @name .k-border-b-double
/// @group border-style
/// @contextType css

/// This is equivalent to `border-bottom-style: hidden;`.
/// @example border-bottom-style: hidden;
/// @name .k-border-b-hidden
/// @group border-style
/// @contextType css

/// This is equivalent to `border-bottom-style: none;`.
/// @example border-bottom-style: none;
/// @name .k-border-b-none
/// @group border-style
/// @contextType css

/// This is equivalent to `border-left-style: solid;`.
/// @example border-left-style: solid;
/// @name .k-border-l-solid
/// @group border-style
/// @contextType css

/// This is equivalent to `border-left-style: dashed;`.
/// @example border-left-style: dashed;
/// @name .k-border-l-dashed
/// @group border-style
/// @contextType css

/// This is equivalent to `border-left-style: dotted;`.
/// @example border-left-style: dotted;
/// @name .k-border-l-dotted
/// @group border-style
/// @contextType css

/// This is equivalent to `border-left-style: double;`.
/// @example border-left-style: double;
/// @name .k-border-l-double
/// @group border-style
/// @contextType css

/// This is equivalent to `border-left-style: hidden;`.
/// @example border-left-style: hidden;
/// @name .k-border-l-hidden
/// @group border-style
/// @contextType css

/// This is equivalent to `border-inline-style: solid;`.
/// @example border-inline-style: solid;
/// @name .k-border-x-solid
/// @group border-style
/// @contextType css

/// This is equivalent to `border-inline-style: dashed;`.
/// @example border-inline-style: dashed;
/// @name .k-border-x-dashed
/// @group border-style
/// @contextType css

/// This is equivalent to `border-inline-style: dotted;`.
/// @example border-inline-style: dotted;
/// @name .k-border-x-dotted
/// @group border-style
/// @contextType css

/// This is equivalent to `border-inline-style: double;`.
/// @example border-inline-style: double;
/// @name .k-border-x-double
/// @group border-style
/// @contextType css

/// This is equivalent to `border-inline-style: hidden;`.
/// @example border-inline-style: hidden;
/// @name .k-border-x-hidden
/// @group border-style
/// @contextType css

/// This is equivalent to `border-inline-style: none;`.
/// @example border-inline-style: none;
/// @name .k-border-x-none
/// @group border-style
/// @contextType css

/// This is equivalent to `border-block-style: solid;`.
/// @example border-block-style: solid;
/// @name .k-border-y-solid
/// @group border-style
/// @contextType css

/// This is equivalent to `border-block-style: dashed;`.
/// @example border-block-style: dashed;
/// @name .k-border-y-dashed
/// @group border-style
/// @contextType css

/// This is equivalent to `border-block-style: dotted;`.
/// @example border-block-style: dotted;
/// @name .k-border-y-dotted
/// @group border-style
/// @contextType css

/// This is equivalent to `border-block-style: double;`.
/// @example border-block-style: double;
/// @name .k-border-y-double
/// @group border-style
/// @contextType css

/// This is equivalent to `border-block-style: hidden;`.
/// @example border-block-style: hidden;
/// @name .k-border-y-hidden
/// @group border-style
/// @contextType css

/// This is equivalent to `border-block-style: none;`.
/// @example border-block-style: none;
/// @name .k-border-y-none
/// @group border-style
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-border-style"));

@mixin kendo-utils--border--border-style() {
    @include module-render("utils-border-style") {

        // Border style utility classes
        $kendo-utils-border-style: k-map-get( $kendo-utils, "border-style" ) !default;
        @include generate-utils( border, border-style, $kendo-utils-border-style );
        @include generate-utils( border-t, border-top-style, $kendo-utils-border-style );
        @include generate-utils( border-r, border-right-style, $kendo-utils-border-style );
        @include generate-utils( border-b, border-bottom-style, $kendo-utils-border-style );
        @include generate-utils( border-l, border-left-style, $kendo-utils-border-style );
        @include generate-utils( border-x, border-inline-style, $kendo-utils-border-style );
        @include generate-utils( border-y, border-block-style, $kendo-utils-border-style );

    }
}

// #endregion
// #region @import "./_border-width.scss"; -> scss/border/_border-width.scss
/// This is equivalent to `border-width: 1px;`.
/// @example border-width: 1px;
/// @name .k-border
/// @group border-width
/// @contextType css

/// This is equivalent to `border-width: 0;`.
/// @example border-width: 0;
/// @name .k-border-0
/// @group border-width
/// @contextType css

/// This is equivalent to `border-width: 2px;`.
/// @example border-width: 2px;
/// @name .k-border-2
/// @group border-width
/// @contextType css

/// This is equivalent to `border-width: 4px;`.
/// @example border-width: 4px;
/// @name .k-border-4
/// @group border-width
/// @contextType css

/// This is equivalent to `border-width: 8px;`.
/// @example border-width: 8px;
/// @name .k-border-8
/// @group border-width
/// @contextType css

/// This is equivalent to `border-top-width: 1px;`.
/// @example border-top-width: 1px;
/// @name .k-border-t
/// @group border-width
/// @contextType css

/// This is equivalent to `border-top-width: 0px;`.
/// @example border-top-width: 0px;
/// @name .k-border-t-0
/// @group border-width
/// @contextType css

/// This is equivalent to `border-top-width: 2px;`.
/// @example border-top-width: 2px;
/// @name .k-border-t-2
/// @group border-width
/// @contextType css

/// This is equivalent to `border-top-width: 4px;`.
/// @example border-top-width: 4px;
/// @name .k-border-t-4
/// @group border-width
/// @contextType css

/// This is equivalent to `border-top-width: 8px;`.
/// @example border-top-width: 8px;
/// @name .k-border-t-8
/// @group border-width
/// @contextType css

/// This is equivalent to `border-right-width: 1px;`.
/// @example border-right-width: 1px;
/// @name .k-border-r
/// @group border-width
/// @contextType css

/// This is equivalent to `border-right-width: 0px;`.
/// @example border-right-width: 0px;
/// @name .k-border-r-0
/// @group border-width
/// @contextType css

/// This is equivalent to `border-right-width: 2px;`.
/// @example border-right-width: 2px;
/// @name .k-border-r-2
/// @group border-width
/// @contextType css

/// This is equivalent to `border-right-width: 4px;`.
/// @example border-right-width: 4px;
/// @name .k-border-r-4
/// @group border-width
/// @contextType css

/// This is equivalent to `border-right-width: 8px;`.
/// @example border-right-width: 8px;
/// @name .k-border-r-8
/// @group border-width
/// @contextType css

/// This is equivalent to `border-bottom-width: 1px;`.
/// @example border-bottom-width: 1px;
/// @name .k-border-b
/// @group border-width
/// @contextType css

/// This is equivalent to `border-bottom-width: 0px;`.
/// @example border-bottom-width: 0px;
/// @name .k-border-b-0
/// @group border-width
/// @contextType css

/// This is equivalent to `border-bottom-width: 2px;`.
/// @example border-bottom-width: 2px;
/// @name .k-border-b-2
/// @group border-width
/// @contextType css

/// This is equivalent to `border-bottom-width: 4px;`.
/// @example border-bottom-width: 4px;
/// @name .k-border-b-4
/// @group border-width
/// @contextType css

/// This is equivalent to `border-bottom-width: 8px;`.
/// @example border-bottom-width: 8px;
/// @name .k-border-b-8
/// @group border-width
/// @contextType css

/// This is equivalent to `border-left-width: 1px;`.
/// @example border-left-width: 1px;
/// @name .k-border-l
/// @group border-width
/// @contextType css

/// This is equivalent to `border-left-width: 0px;`.
/// @example border-left-width: 0px;
/// @name .k-border-l-0
/// @group border-width
/// @contextType css

/// This is equivalent to `border-left-width: 2px;`.
/// @example border-left-width: 2px;
/// @name .k-border-l-2
/// @group border-width
/// @contextType css

/// This is equivalent to `border-left-width: 4px;`.
/// @example border-left-width: 4px;
/// @name .k-border-l-4
/// @group border-width
/// @contextType css

/// This is equivalent to `border-left-width: 8px;`.
/// @example border-left-width: 8px;
/// @name .k-border-l-8
/// @group border-width
/// @contextType css

/// This is equivalent to `border-inline-width: 1px;`.
/// @example border-inline-width: 1px;
/// @name .k-border-x
/// @group border-width
/// @contextType css

/// This is equivalent to `border-inline-width: 0px;`.
/// @example border-inline-width: 0px;
/// @name .k-border-x-0
/// @group border-width
/// @contextType css

/// This is equivalent to `border-inline-width: 2px;`.
/// @example border-inline-width: 2px;
/// @name .k-border-x-2
/// @group border-width
/// @contextType css

/// This is equivalent to `border-inline-width: 4px;`.
/// @example border-inline-width: 4px;
/// @name .k-border-x-4
/// @group border-width
/// @contextType css

/// This is equivalent to `border-inline-width: 8px;`.
/// @example border-inline-width: 8px;
/// @name .k-border-x-8
/// @group border-width
/// @contextType css

/// This is equivalent to `border-block-width: 1px;`.
/// @example border-block-width: 1px;
/// @name .k-border-y
/// @group border-width
/// @contextType css

/// This is equivalent to `border-block-width: 0px;`.
/// @example border-block-width: 0px;
/// @name .k-border-y-0
/// @group border-width
/// @contextType css

/// This is equivalent to `border-block-width: 2px;`.
/// @example border-block-width: 2px;
/// @name .k-border-y-2
/// @group border-width
/// @contextType css

/// This is equivalent to `border-block-width: 4px;`.
/// @example border-block-width: 4px;
/// @name .k-border-y-4
/// @group border-width
/// @contextType css

/// This is equivalent to `border-block-width: 8px;`.
/// @example border-block-width: 8px;
/// @name .k-border-y-8
/// @group border-width
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-border-width"));

@mixin kendo-utils--border--border-width() {
    @include module-render("utils-border-width") {

        // Border width utility classes
        $kendo-utils-border-width: k-map-get( $kendo-utils, "border-width" ) !default;
        @include generate-utils( border, border-width, $kendo-utils-border-width );
        @include generate-utils( border-t, border-top-width, $kendo-utils-border-width );
        @include generate-utils( border-r, border-right-width, $kendo-utils-border-width );
        @include generate-utils( border-b, border-bottom-width, $kendo-utils-border-width );
        @include generate-utils( border-l, border-left-width, $kendo-utils-border-width );
        @include generate-utils( border-x, border-inline-width, $kendo-utils-border-width );
        @include generate-utils( border-y, border-block-width, $kendo-utils-border-width );


        // Legacy aliases
        @include generate-utils( border-top, border-top-width, $kendo-utils-border-width );
        @include generate-utils( border-right, border-right-width, $kendo-utils-border-width );
        @include generate-utils( border-bottom, border-bottom-width, $kendo-utils-border-width );
        @include generate-utils( border-left, border-left-width, $kendo-utils-border-width );

    }
}

// #endregion
// #region @import "./_outline-color.scss"; -> scss/border/_outline-color.scss
/// This is equivalent to `outline-color: inherit;`.
/// @example outline-color: inherit;
/// @name .k-outline-inherit
/// @group outline-color
/// @contextType css

/// This is equivalent to `outline-color: currentColor;`.
/// @example outline-color: currentColor;
/// @name .k-outline-currentColor
/// @group outline-color
/// @contextType css

/// This is equivalent to `outline-color: transparent;`.
/// @example outline-color: transparent;
/// @name .k-outline-transparent
/// @group outline-color
/// @contextType css

/// This is equivalent to `outline-color: black;`.
/// @example outline-color: black;
/// @name .k-outline-black
/// @group outline-color
/// @contextType css

/// This is equivalent to `outline-color: white;`.
/// @example outline-color: white;
/// @name .k-outline-white
/// @group outline-color
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-outline-color"));

@mixin kendo-utils--border--outline-color() {
    @include module-render("utils-outline-color") {

        // Outline color utility classes
        $kendo-utils-outline-color: k-map-get( $kendo-utils, "outline-color" ) !default;
        @include generate-utils( outline, outline-color, $kendo-utils-outline-color, $css-var: 'color' );

    }
}

// #endregion
// #region @import "./_outline-offset.scss"; -> scss/border/_outline-offset.scss
/// This is equivalent to `outline-offset: 1px;`.
/// @example outline-offset: 1px;
/// @name .k-outline-offset
/// @group outline-offset
/// @contextType css

/// This is equivalent to `outline-offset: 0;`.
/// @example outline-offset: 0;
/// @name .k-outline-offset-0
/// @group outline-offset
/// @contextType css

/// This is equivalent to `outline-offset: 2px;`.
/// @example outline-offset: 2px;
/// @name .k-outline-offset-2
/// @group outline-offset
/// @contextType css

/// This is equivalent to `outline-offset: 4px;`.
/// @example outline-offset: 4px;
/// @name .k-outline-offset-4
/// @group outline-offset
/// @contextType css

/// This is equivalent to `outline-offset: 8px;`.
/// @example outline-offset: 8px;
/// @name .k-outline-offset-8
/// @group outline-offset
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-outline-offset"));

@mixin kendo-utils--border--outline-offset() {
    @include module-render("utils-outline-offset") {

        // Outline offset utility classes
        $kendo-utils-outline-offset: k-map-get( $kendo-utils, "outline-offset" ) !default;
        @include generate-utils( outline-offset, outline-offset, $kendo-utils-outline-offset );

    }
}

// #endregion
// #region @import "./_outline-style.scss"; -> scss/border/_outline-style.scss
/// This is equivalent to `outline-style: solid;`.
/// @example outline-style: solid;
/// @name .k-outline-solid
/// @group outline-style
/// @contextType css

/// This is equivalent to `outline-style: dashed;`.
/// @example outline-style: dashed;
/// @name .k-outline-dashed
/// @group outline-style
/// @contextType css

/// This is equivalent to `outline-style: dotted;`.
/// @example outline-style: dotted;
/// @name .k-outline-dotted
/// @group outline-style
/// @contextType css

/// This is equivalent to `outline-style: double;`.
/// @example outline-style: double;
/// @name .k-outline-double
/// @group outline-style
/// @contextType css

/// This is equivalent to `outline-style: hidden;`.
/// @example outline-style: hidden;
/// @name .k-outline-hidden
/// @group outline-style
/// @contextType css

/// This is equivalent to `outline-style: none;`.
/// @example outline-style: none;
/// @name .k-outline-none
/// @group outline-style
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-outline-style"));

@mixin kendo-utils--border--outline-style() {
    @include module-render("utils-outline-style") {

        // Outline style utility classes
        $kendo-utils-outline-style: k-map-get( $kendo-utils, "outline-style" ) !default;
        @include generate-utils( outline, outline-style, $kendo-utils-outline-style );

    }
}

// #endregion
// #region @import "./_outline-width.scss"; -> scss/border/_outline-width.scss
/// This is equivalent to `outline-width: 1px;`.
/// @example outline-width: 1px;
/// @name .k-outline
/// @group outline-width
/// @contextType css

/// This is equivalent to `outline-width: 0;`.
/// @example outline-width: 0;
/// @name .k-outline-0
/// @group outline-width
/// @contextType css

/// This is equivalent to `outline-width: 2px;`.
/// @example outline-width: 2px;
/// @name .k-outline-2
/// @group outline-width
/// @contextType css

/// This is equivalent to `outline-width: 4px;`.
/// @example outline-width: 4px;
/// @name .k-outline-4
/// @group outline-width
/// @contextType css

/// This is equivalent to `outline-width: 8px;`.
/// @example outline-width: 8px;
/// @name .k-outline-8
/// @group outline-width
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-outline-width"));

@mixin kendo-utils--border--outline-width() {
    @include module-render("utils-outline-width") {

    // Outline width utility classes
    $kendo-utils-outline-width: k-map-get( $kendo-utils, "outline-width" ) !default;
    @include generate-utils( outline, outline-width, $kendo-utils-outline-width );

    }
}

// #endregion


@mixin kendo-utils--border() {
    @include kendo-utils--border--border-color();
    @include kendo-utils--border--border-radius();
    @include kendo-utils--border--border-style();
    @include kendo-utils--border--border-width();
    @include kendo-utils--border--outline-color();
    @include kendo-utils--border--outline-offset();
    @include kendo-utils--border--outline-style();
    @include kendo-utils--border--outline-width();
}

// #endregion
// #region @import "./effects/index.import.scss"; -> scss/effects/index.import.scss
// box shadow
// box shadow color
// #region @import "./_opacity.scss"; -> scss/effects/_opacity.scss
/// This is equivalent to `opacity: 0;`.
/// @example opacity: 0;
/// @name .k-opacity-0
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 1;`.
/// @example opacity: 1;
/// @name .k-opacity-1
/// @group opacity
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-effects-opacity"));

@mixin kendo-utils--effects--opacity() {
    @include module-render("utils-effects-opacity") {

        // opacity utility classes
        $kendo-utils-opacity: k-map-get( $kendo-utils, "opacity" ) !default;
        @include generate-utils( opacity, opacity, $kendo-utils-opacity );

    }
}

// #endregion

@mixin kendo-utils--effects() {
    @include kendo-utils--effects--opacity();
}

// #endregion
// #region @import "./filter/index.import.scss"; -> scss/filter/index.import.scss
// #region @import "./_backdrop.scss"; -> scss/filter/_backdrop.scss
/// This is equivalent to `backdrop-filter: blur(8px);`.
/// @example backdrop-filter: blur(8px);
/// @name .k-backdrop-blur
/// @group backdrop-blur
/// @contextType css

/// This is equivalent to `backdrop-filter: blur(0);`.
/// @example backdrop-filter: blur(0);
/// @name .k-backdrop-blur-none
/// @group backdrop-blur
/// @contextType css

/// This is equivalent to `backdrop-filter: blur(4px);`.
/// @example backdrop-filter: blur(4px);
/// @name .k-backdrop-blur-sm
/// @group backdrop-blur
/// @contextType css

/// This is equivalent to `backdrop-filter: blur(6px);`.
/// @example backdrop-filter: blur(6px);
/// @name .k-backdrop-blur-md
/// @group backdrop-blur
/// @contextType css

/// This is equivalent to `backdrop-filter: blur(12px);`.
/// @example backdrop-filter: blur(12px);
/// @name .k-backdrop-blur-lg
/// @group backdrop-blur
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-filter-backdrop"));

@mixin kendo-utils--filter--backdrop() {
    @include module-render("utils-filter-backdrop") {

        // backdrop utility classes
        $kendo-utils-backdrop-blur: k-map-get( $kendo-utils, "backdrop-blur" ) !default;
        @include generate-utils( backdrop-blur, backdrop-filter, $kendo-utils-backdrop-blur );

    }
}

// #endregion

@mixin kendo-utils--filter() {
    @include kendo-utils--filter--backdrop();
}

// #endregion
// #region @import "./table/index.import.scss"; -> scss/table/index.import.scss
// #region @import "./_border-collapse.scss"; -> scss/table/_border-collapse.scss
/// This is equivalent to `border-collapse: collapse;`.
/// @example border-collapse: collapse;
/// @name .k-border-collapse
/// @group border-collapse
/// @contextType css

/// This is equivalent to `border-collapse: separate;`.
/// @example border-collapse: separate;
/// @name .k-border-separate
/// @group border-collapse
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-table-border-collapse"));

@mixin kendo-utils--table--border-collapse() {
    @include module-render("utils-table-border-collapse") {

        // Border collapse utility classes
        $kendo-utils-border-collapse: k-map-get( $kendo-utils, "border-collapse" ) !default;
        @include generate-utils( border, border-collapse, $kendo-utils-border-collapse );

    }
}

// #endregion
// #region @import "./_table-layout.scss"; -> scss/table/_table-layout.scss
/// This is equivalent to `table-layout: auto;`.
/// @example table-layout: auto;
/// @name .k-table-auto
/// @group table-layout
/// @contextType css

/// This is equivalent to `table-layout: fixed;`.
/// @example table-layout: fixed;
/// @name .k-table-fixed
/// @group table-layout
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-table-table-layout"));

@mixin kendo-utils--table--table-layout() {
    @include module-render("utils-table-table-layout") {

        // Table layout utility classes
        $kendo-utils-table-layout: k-map-get( $kendo-utils, "table-layout" ) !default;
        @include generate-utils( table, table-layout, $kendo-utils-table-layout );
        @include generate-utils( table-layout, table-layout, $kendo-utils-table-layout );

    }
}

// #endregion


@mixin kendo-utils--table() {
    @include kendo-utils--table--border-collapse();
    @include kendo-utils--table--table-layout();
}

// #endregion
// transition
// #region @import "./transform/index.import.scss"; -> scss/transform/index.import.scss
// #region @import "./_flip.scss"; -> scss/transform/_flip.scss
/// This is equivalent to `transform: scaleX( -1 );`.
/// @example transform: scaleX( -1 );
/// @name .k-flip-h
/// @group transform
/// @contextType css

/// This is equivalent to `transform: scaleY( -1 );`.
/// @example transform: scaleY( -1 );
/// @name .k-flip-v
/// @group transform
/// @contextType css

// TODO: consider globally horizontal vs h vs x

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-transform-flip"));

@mixin kendo-utils--transform--flip() {
    @include module-render("utils-transform-flip") {

        // Flip utility classes
        $kendo-utils-flip: k-map-get( $kendo-utils, "flip" ) !default;
        @if $kendo-utils-flip {
            .#{$kendo-prefix}flip-h { transform: scaleX( -1 ); }
            .\!#{$kendo-prefix}flip-h { transform: scaleX( -1 ) !important; } // stylelint-disable-line declaration-no-important
            .#{$kendo-prefix}flip-v { transform: scaleY( -1 ); }
            .\!#{$kendo-prefix}flip-v { transform: scaleY( -1 ) !important; } // stylelint-disable-line declaration-no-important
            .#{$kendo-prefix}flip-h.#{$kendo-prefix}flip-v { transform: scale( -1, -1 ); }
            .\!#{$kendo-prefix}flip-h.\!#{$kendo-prefix}flip-v { transform: scale( -1, -1 ) !important; } // stylelint-disable-line declaration-no-important

            // Legacy aliases
            .#{$kendo-prefix}flip-x { @extend .#{$kendo-prefix}flip-h !optional; }
            .\!#{$kendo-prefix}flip-x { @extend .\!#{$kendo-prefix}flip-h !optional; }
            .#{$kendo-prefix}flip-y { @extend .#{$kendo-prefix}flip-v !optional; }
            .\!#{$kendo-prefix}flip-y { @extend .\!#{$kendo-prefix}flip-v !optional; }
        }

    }
}

// #endregion
// #region @import "./_origin.scss"; -> scss/transform/_origin.scss
/// This is equivalent to `transform-origin: center;`.
/// @example transform-origin: center;
/// @name .k-origin-center
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: top;`.
/// @example transform-origin: top;
/// @name .k-origin-top
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: right;`.
/// @example transform-origin: right;
/// @name .k-origin-right
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: bottom;`.
/// @example transform-origin: bottom;
/// @name .k-origin-bottom
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: left;`.
/// @example transform-origin: left;
/// @name .k-origin-left
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: top-left;`.
/// @example transform-origin: top-left;
/// @name .k-origin-top-left
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: top-right;`.
/// @example transform-origin: top-right;
/// @name .k-origin-top-right
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: bottom-left;`.
/// @example transform-origin: bottom-left;
/// @name .k-origin-bottom-left
/// @group transform-origin
/// @contextType css

/// This is equivalent to `transform-origin: bottom-right;`.
/// @example transform-origin: bottom-right;
/// @name .k-origin-bottom-right
/// @group transform-origin
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-transform-origin"));

@mixin kendo-utils--transform--origin() {
    @include module-render("utils-transform-origin") {

        // Transform origin utility classes
        $kendo-utils-origin: k-map-get( $kendo-utils, "origin" ) !default;
        @include generate-utils( origin, transform-origin, $kendo-utils-origin );

    }
}

// #endregion
// #region @import "./_rotate.scss"; -> scss/transform/_rotate.scss
/// This is equivalent to `transform: rotate( 0 );`.
/// @example transform: rotate( 0 );
/// @name .k-rotate-0
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 45deg );`.
/// @example transform: rotate( 45deg );
/// @name .k-rotate-45
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 90deg );`.
/// @example transform: rotate( 90deg );
/// @name .k-rotate-90
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 135deg );`.
/// @example transform: rotate( 135deg );
/// @name .k-rotate-135
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 180deg );`.
/// @example transform: rotate( 180deg );
/// @name .k-rotate-180
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 225deg );`.
/// @example transform: rotate( 225deg );
/// @name .k-rotate-225
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 270deg );`.
/// @example transform: rotate( 270deg );
/// @name .k-rotate-270
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 315deg );`.
/// @example transform: rotate( 315deg );
/// @name .k-rotate-315
/// @group transform
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-transform-rotate"));

// stylelint-disable scss/at-function-pattern
@function _rotate( $val ) {
    @return rotate( $val );
}
// stylelint-enable scss/at-function-pattern

@mixin kendo-utils--transform--rotate() {
    @include module-render("utils-transform-rotate") {

        // Rotate utility classes
        $kendo-utils-rotate: k-map-get( $kendo-utils, "rotate" ) !default;
        @include generate-utils( rotate, transform, $kendo-utils-rotate, _rotate );

    }
}

// #endregion
// #region @import "./_scale.scss"; -> scss/transform/_scale.scss
/// This is equivalent to `transform: scale( 0, 0 );`.
/// @example transform: scale( 0, 0 );
/// @name .k-scale-0
/// @group transform
/// @contextType css

/// This is equivalent to `transform: scale( 1, 1 );`.
/// @example transform: scale( 1, 1 );
/// @name .k-scale-1
/// @group transform
/// @contextType css

/// This is equivalent to `transform: scale( 2, 2 );`.
/// @example transform: scale( 2, 2 );
/// @name .k-scale-2
/// @group transform
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-transform-scale"));

// stylelint-disable scss/at-function-pattern
@function _scale( $val ) {
    @return scale( $val );
}
@function _scale-x( $val ) {
    @return scaleX( $val );
}
@function _scale-y( $val ) {
    @return scaleY( $val );
}
// stylelint-enable scss/at-function-pattern

@mixin kendo-utils--transform--scale() {
    @include module-render("utils-transform-scale") {

        // Scale utility classes
        $kendo-utils-scale: k-map-get( $kendo-utils, "scale" ) !default;
        @include generate-utils( scale, transform, $kendo-utils-scale, _scale );
        @include generate-utils( scale-x, transform, $kendo-utils-scale, _scale-x );
        @include generate-utils( scale-y, transform, $kendo-utils-scale, _scale-y );

    }
}

// #endregion
// #region @import "./_skew.scss"; -> scss/transform/_skew.scss
/// This is equivalent to `transform: skewX(0deg);`.
/// @example transform: skewX(0deg);
/// @name .k-skew-x-0
/// @group skew
/// @contextType css

/// This is equivalent to `transform: skewX(1deg);`.
/// @example transform: skewX(1deg);
/// @name .k-skew-x-1
/// @group skew
/// @contextType css

/// This is equivalent to `transform: skewY(0deg);`.
/// @example transform: skewY(0deg);
/// @name .k-skew-y-0
/// @group skew
/// @contextType css

/// This is equivalent to `transform: skewY(1deg);`.
/// @example transform: skewY(1deg);
/// @name .k-skew-y-1
/// @group skew
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-transform-skew"));

// stylelint-disable scss/at-function-pattern
@function _skew-x( $val ) {
    @return skewX( $val );
}
@function _skew-y( $val ) {
    @return skewY( $val );
}
// stylelint-enable scss/at-function-pattern

@mixin kendo-utils--transform--skew() {
    @include module-render("utils-transform-skew") {

        // Transform skew utility classes
        $kendo-utils-skew: k-map-get( $kendo-utils, "skew" ) !default;
        @include generate-utils( skew-x, transform, $kendo-utils-skew, _skew-x );
        @include generate-utils( skew-y, transform, $kendo-utils-skew, _skew-y );

    }
}

// #endregion
// #region @import "./_translate.scss"; -> scss/transform/_translate.scss
/// This is equivalent to `transform: translate( 0, 0 );`.
/// @example transform: translate( 0, 0 );
/// @name .k-translate-0
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 0, 50% );`.
/// @example transform: translate( 0, 50% );
/// @name .k-translate-0-50
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 0, 100% );`.
/// @example transform: translate( 0, 100% );
/// @name .k-translate-0-100
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 50%, 0 );`.
/// @example transform: translate( 50%, 0 );
/// @name .k-translate-50-0
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 50%, 50% );`.
/// @example transform: translate( 50%, 50% );
/// @name .k-translate-50-50
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 50%, 100% );`.
/// @example transform: translate( 50%, 100% );
/// @name .k-translate-50-100
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 100%, 0 );`.
/// @example transform: translate( 100%, 0 );
/// @name .k-translate-100-0
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 100%, 50% );`.
/// @example transform: translate( 100%, 50% );
/// @name .k-translate-100-50
/// @group transform
/// @contextType css

/// This is equivalent to `transform: translate( 100%, 100% );`.
/// @example transform: translate( 100%, 100% );
/// @name .k-translate-100-100
/// @group transform
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-transform-translate"));

// stylelint-disable scss/at-function-pattern
@function _translate( $val ) {
    @return translate( $val );
}
@function _translate-x( $val ) {
    @return translateX( $val );
}
@function _translate-y( $val ) {
    @return translateY( $val );
}
// stylelint-enable scss/at-function-pattern

@mixin kendo-utils--transform--translate() {
    @include module-render("utils-transform-translate") {

        // Translate utility classes
        $kendo-utils-translate: k-map-get( $kendo-utils, "translate" ) !default;
        $kendo-utils-translate-xy: (
            "0": ( 0, 0 ),
            "0-50": ( 0, 50% ),
            "0-100": ( 0, 100% ),
            "50-0": ( 50%, 0 ),
            "50-50": ( 50%, 50% ),
            "50-100": ( 50%, 100% ),
            "100-0": ( 100%, 0 ),
            "100-50": ( 100%, 50% ),
            "100-100": ( 100%, 100% )
        ) !default;
        @include generate-utils( translate, transform, $kendo-utils-translate-xy, _translate );
        @include generate-utils( translate-x, transform, $kendo-utils-translate, _translate-x );
        @include generate-utils( translate-y, transform, $kendo-utils-translate, _translate-y );

    }
}

// #endregion


@mixin kendo-utils--transform() {
    @include kendo-utils--transform--flip();
    @include kendo-utils--transform--origin();
    @include kendo-utils--transform--rotate();
    @include kendo-utils--transform--scale();
    @include kendo-utils--transform--skew();
    @include kendo-utils--transform--translate();
}

// #endregion
// #region @import "./interactivity/index.import.scss"; -> scss/interactivity/index.import.scss
// #region @import "./_accent-color.scss"; -> scss/interactivity/_accent-color.scss
// TODO: docs

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-accent-color"));

@mixin kendo-utils--interactivity--accent-color() {
    @include module-render("utils-interactivity-accent-color") {

        // Accent color utility classes
        $kendo-utils-accent-color: k-map-get( $kendo-utils, "accent-color" ) !default;
        @include generate-utils( accent-color, accent-color, $kendo-utils-accent-color );

    }
}

// #endregion
// #region @import "./_appearance.scss"; -> scss/interactivity/_appearance.scss
/// This is equivalent to `appearance: none;`.
/// @example appearance: none;
/// @name .k-appearance-none
/// @group appearance
/// @contextType css

/// This is equivalent to `appearance: auto;`.
/// @example appearance: auto;
/// @name .k-appearance-auto
/// @group appearance
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-appearance"));

@mixin kendo-utils--interactivity--appearance() {
    @include module-render("utils-interactivity-appearance") {

        // Appearance utility classes
        $kendo-utils-appearance: k-map-get( $kendo-utils, "appearance" ) !default;
        @include generate-utils( appearance, appearance, $kendo-utils-appearance );

    }
}

// #endregion
// #region @import "./_caret-color.scss"; -> scss/interactivity/_caret-color.scss
// TODO: docs

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-caret-color"));

@mixin kendo-utils--interactivity--caret-color() {
    @include module-render("utils-interactivity-caret-color") {

        // Caret color utility classes
        $kendo-utils-caret-color: k-map-get( $kendo-utils, "caret-color" ) !default;
        @include generate-utils( caret, caret-color, $kendo-utils-caret-color );

    }
}

// #endregion
// #region @import "./_cursor.scss"; -> scss/interactivity/_cursor.scss
/// This is equivalent to `cursor: none;`.
/// @example cursor: none;
/// @name .k-cursor-none
/// @group cursor
/// @contextType css

/// This is equivalent to `cursor: auto;`.
/// @example cursor: auto;
/// @name .k-cursor-auto
/// @group cursor
/// @contextType css

/// This is equivalent to `cursor: default;`.
/// @example cursor: default;
/// @name .k-cursor-default
/// @group cursor
/// @contextType css

/// This is equivalent to `cursor: pointer;`.
/// @example cursor: pointer;
/// @name .k-cursor-pointer
/// @group cursor
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-cursor"));

@mixin kendo-utils--interactivity--cursor() {
    @include module-render("utils-interactivity-cursor") {

        // Cursor utility classes
        $kendo-utils-cursor: k-map-get( $kendo-utils, "cursor" ) !default;
        @include generate-utils( cursor, cursor, $kendo-utils-cursor );

    }
}

// #endregion
// #region @import "./_pointer-events.scss"; -> scss/interactivity/_pointer-events.scss
/// This is equivalent to `pointer-events: none;`.
/// @example pointer-events: none;
/// @name .k-pointer-events-none
/// @group pointer-events
/// @contextType css

/// This is equivalent to `pointer-events: auto;`.
/// @example pointer-events: auto;
/// @name .k-pointer-events-auto
/// @group pointer-events
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-pointer-events"));

@mixin kendo-utils--interactivity--pointer-events() {
    @include module-render("utils-interactivity-pointer-events") {

        // Pointer events utility classes
        $kendo-utils-pointer-events: k-map-get( $kendo-utils, "pointer-events" ) !default;
        @include generate-utils( pointer-events, pointer-events, $kendo-utils-pointer-events );

    }
}

// #endregion
// #region @import "./_resize.scss"; -> scss/interactivity/_resize.scss
/// This is equivalent to `resize: both;`.
/// @example resize: both;
/// @name .k-resize
/// @group resize
/// @contextType css

/// This is equivalent to `resize: none;`.
/// @example resize: none;
/// @name .k-resize-none
/// @group resize
/// @contextType css

/// This is equivalent to `resize: horizontal;`.
/// @example resize: horizontal;
/// @name .k-resize-x
/// @group resize
/// @contextType css

/// This is equivalent to `resize: vertical;`.
/// @example resize: vertical;
/// @name .k-resize-y
/// @group resize
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-resize"));

@mixin kendo-utils--interactivity--resize() {
    @include module-render("utils-interactivity-resize") {

        // Resize utility classes
        $kendo-utils-resize: k-map-get( $kendo-utils, "resize" ) !default;
        @include generate-utils( resize, resize, $kendo-utils-resize );

    }
}

// #endregion
// #region @import "./_scroll.scss"; -> scss/interactivity/_scroll.scss
/// This is equivalent to `scroll-behavior: auto;`.
/// @example scroll-behavior: auto;
/// @name .k-scroll-auto
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-behavior: smooth;`.
/// @example scroll-behavior: smooth;
/// @name .k-scroll-smooth
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-type: x var(--k-scroll-snap-strictness);`.
/// @example scroll-snap-type: x var(--k-scroll-snap-strictness);
/// @name .k-scroll-snap-snap-x
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-type: y var(--k-scroll-snap-strictness);`.
/// @example scroll-snap-type: y var(--k-scroll-snap-strictness);
/// @name .k-scroll-snap-snap-y
/// @group scroll
/// @contextType css

/// This is equivalent to `--k-scroll-snap-strictness: mandatory;`.
/// @example --k-scroll-snap-strictness: mandatory;
/// @name .k-scroll-snap-mandatory
/// @group scroll
/// @contextType css

/// This is equivalent to `--k-scroll-snap-strictness: proximity;`.
/// @example --k-scroll-snap-strictness: proximity;
/// @name .k-scroll-snap-proximity
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-stop: normal;`.
/// @example scroll-snap-stop: normal;
/// @name .k-scroll-snap-stop-normal
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-stop: always;`.
/// @example scroll-snap-stop: always;
/// @name .k-scroll-snap-stop-always
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-align: start;`.
/// @example scroll-snap-align: start;
/// @name .k-scroll-snap-align-start
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-align: end;`.
/// @example scroll-snap-align: end;
/// @name .k-scroll-snap-align-end
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-align: center;`.
/// @example scroll-snap-align: center;
/// @name .k-scroll-snap-align-center
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-snap-align: none;`.
/// @example scroll-snap-align: none;
/// @name .k-scroll-snap-align-none
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin: 0;`.
/// @example scroll-margin: 0;
/// @name .k-scroll-m-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin: 1px;`.
/// @example scroll-margin: 1px;
/// @name .k-scroll-m-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin: 0.25rem;`.
/// @example scroll-margin: 0.25rem;
/// @name .k-scroll-m-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-top: 0;`.
/// @example scroll-margin-top: 0;
/// @name .k-scroll-m-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-top: 1px;`.
/// @example scroll-margin-top: 1px;
/// @name .k-scroll-m-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-top: 0.25rem;`.
/// @example scroll-margin-top: 0.25rem;
/// @name .k-scroll-m-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-right: 0;`.
/// @example scroll-margin-right: 0;
/// @name .k-scroll-mr-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-right: 1px;`.
/// @example scroll-margin-right: 1px;
/// @name .k-scroll-mr-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-right: 0.25rem;`.
/// @example scroll-margin-right: 0.25rem;
/// @name .k-scroll-mr-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-bottom: 0;`.
/// @example scroll-margin-bottom: 0;
/// @name .k-scroll-mb-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-bottom: 1px;`.
/// @example scroll-margin-bottom: 1px;
/// @name .k-scroll-mb-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-bottom: 0.25rem;`.
/// @example scroll-margin-bottom: 0.25rem;
/// @name .k-scroll-mb-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-left: 0;`.
/// @example scroll-margin-left: 0;
/// @name .k-scroll-ml-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-left: 1px;`.
/// @example scroll-margin-left: 1px;
/// @name .k-scroll-ml-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-left: 0.25rem;`.
/// @example scroll-margin-left: 0.25rem;
/// @name .k-scroll-ml-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-inline: 0;`.
/// @example scroll-margin-inline: 0;
/// @name .k-scroll-x-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-inline: 1px;`.
/// @example scroll-margin-inline: 1px;
/// @name .k-scroll-x-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-inline: 0.25rem;`.
/// @example scroll-margin-inline: 0.25rem;
/// @name .k-scroll-x-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-block: 0;`.
/// @example scroll-margin-block: 0;
/// @name .k-scroll-y-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-block: 1px;`.
/// @example scroll-margin-block: 1px;
/// @name .k-scroll-y-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-margin-block: 0.25rem;`.
/// @example scroll-margin-block: 0.25rem;
/// @name .k-scroll-y-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding: 0;`.
/// @example scroll-padding: 0;
/// @name .k-scroll-p-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding: 1px;`.
/// @example scroll-padding: 1px;
/// @name .k-scroll-p-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding: 0.25rem;`.
/// @example scroll-padding: 0.25rem;
/// @name .k-scroll-p-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-top: 0;`.
/// @example scroll-padding-top: 0;
/// @name .k-scroll-p-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-top: 1px;`.
/// @example scroll-padding-top: 1px;
/// @name .k-scroll-p-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-top: 0.25rem;`.
/// @example scroll-padding-top: 0.25rem;
/// @name .k-scroll-p-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-right: 0;`.
/// @example scroll-padding-right: 0;
/// @name .k-scroll-pr-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-right: 1px;`.
/// @example scroll-padding-right: 1px;
/// @name .k-scroll-pr-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-right: 0.25rem;`.
/// @example scroll-padding-right: 0.25rem;
/// @name .k-scroll-pr-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-bottom: 0;`.
/// @example scroll-padding-bottom: 0;
/// @name .k-scroll-pb-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-bottom: 1px;`.
/// @example scroll-padding-bottom: 1px;
/// @name .k-scroll-pb-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-bottom: 0.25rem;`.
/// @example scroll-padding-bottom: 0.25rem;
/// @name .k-scroll-pb-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-left: 0;`.
/// @example scroll-padding-left: 0;
/// @name .k-scroll-pl-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-left: 1px;`.
/// @example scroll-padding-left: 1px;
/// @name .k-scroll-pl-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-left: 0.25rem;`.
/// @example scroll-padding-left: 0.25rem;
/// @name .k-scroll-pl-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-inline: 0;`.
/// @example scroll-padding-inline: 0;
/// @name .k-scroll-x-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-inline: 1px;`.
/// @example scroll-padding-inline: 1px;
/// @name .k-scroll-x-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-inline: 0.25rem;`.
/// @example scroll-padding-inline: 0.25rem;
/// @name .k-scroll-x-1
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-block: 0;`.
/// @example scroll-padding-block: 0;
/// @name .k-scroll-y-0
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-block: 1px;`.
/// @example scroll-padding-block: 1px;
/// @name .k-scroll-y-1px
/// @group scroll
/// @contextType css

/// This is equivalent to `scroll-padding-block: 0.25rem;`.
/// @example scroll-padding-block: 0.25rem;
/// @name .k-scroll-y-1
/// @group scroll
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-scroll"));

@mixin kendo-utils--interactivity--scroll() {
    @include module-render("utils-interactivity-scroll") {

        // Scroll behavior utility classes
        $kendo-utils-scroll-behavior: k-map-get( $kendo-utils, "scroll-behavior" ) !default;
        @include generate-utils( scroll, scroll-behavior, $kendo-utils-scroll-behavior );


        // Scroll snap type utility classes
        $kendo-utils-scroll-snap-type: k-map-get( $kendo-utils, "scroll-snap-type" ) !default;
        @include generate-utils( scroll-snap, scroll-snap-type, $kendo-utils-scroll-snap-type );

        // Custom scroll snap type utility classes
        .#{$kendo-prefix}scroll-snap-mandatory { #{--#{$kendo-prefix}scroll-snap-strictness}: mandatory; }
        .#{$kendo-prefix}scroll-snap-proximity { #{--#{$kendo-prefix}scroll-snap-strictness}: proximity; }


        // Scroll snap stop utility classes
        $kendo-utils-scroll-snap-stop: k-map-get( $kendo-utils, "scroll-snap-stop" ) !default;
        @include generate-utils( scroll-snap-stop, scroll-snap-stop, $kendo-utils-scroll-snap-stop );


        // Scroll snap align utility classes
        $kendo-utils-scroll-snap-align: k-map-get( $kendo-utils, "scroll-snap-align" ) !default;
        @include generate-utils( scroll-snap-align, scroll-snap-align, $kendo-utils-scroll-snap-align );


        // Scroll margin utility classes
        $kendo-utils-scroll-margin: k-map-get( $kendo-utils, "scroll-margin" ) !default;
        @include generate-utils( scroll-m, scroll-margin, $kendo-utils-scroll-margin );
        @include generate-utils( scroll-mt, scroll-margin-top, $kendo-utils-scroll-margin );
        @include generate-utils( scroll-mr, scroll-margin-right, $kendo-utils-scroll-margin );
        @include generate-utils( scroll-mb, scroll-margin-bottom, $kendo-utils-scroll-margin );
        @include generate-utils( scroll-ml, scroll-margin-left, $kendo-utils-scroll-margin );
        @include generate-utils( scroll-mx, scroll-margin-inline, $kendo-utils-scroll-margin );
        @include generate-utils( scroll-my, scroll-margin-block, $kendo-utils-scroll-margin );


        // Scroll padding utility classes
        $kendo-utils-scroll-padding: k-map-get( $kendo-utils, "scroll-padding" ) !default;
        @include generate-utils( scroll-p, scroll-padding, $kendo-utils-scroll-padding );
        @include generate-utils( scroll-pt, scroll-padding-top, $kendo-utils-scroll-padding );
        @include generate-utils( scroll-pr, scroll-padding-right, $kendo-utils-scroll-padding );
        @include generate-utils( scroll-pb, scroll-padding-bottom, $kendo-utils-scroll-padding );
        @include generate-utils( scroll-pl, scroll-padding-left, $kendo-utils-scroll-padding );
        @include generate-utils( scroll-px, scroll-padding-inline, $kendo-utils-scroll-padding );
        @include generate-utils( scroll-py, scroll-padding-block, $kendo-utils-scroll-padding );

    }
}

// #endregion
// #region @import "./_touch-action.scss"; -> scss/interactivity/_touch-action.scss
/// This is equivalent to `touch-action: none;`.
/// @example touch-action: none;
/// @name .k-touch-action-none
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: auto;`.
/// @example touch-action: auto;
/// @name .k-touch-action-auto
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: pan-x;`.
/// @example touch-action: pan-x;
/// @name .k-touch-action-pan-x
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: pan-y;`.
/// @example touch-action: pan-y;
/// @name .k-touch-action-pan-y
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: pan-left;`.
/// @example touch-action: pan-left;
/// @name .k-touch-action-pan-left
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: pan-right;`.
/// @example touch-action: pan-right;
/// @name .k-touch-action-pan-right
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: pan-up;`.
/// @example touch-action: pan-up;
/// @name .k-touch-action-pan-up
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: pan-down;`.
/// @example touch-action: pan-down;
/// @name .k-touch-action-pan-down
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: pinch-zoom;`.
/// @example touch-action: pinch-zoom;
/// @name .k-touch-action-pinch-zoom
/// @group touch-action
/// @contextType css

/// This is equivalent to `touch-action: manipulation;`.
/// @example touch-action: manipulation;
/// @name .k-touch-action-manipulation
/// @group touch-action
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-touch-action"));

@mixin kendo-utils--interactivity--touch-action() {
    @include module-render("utils-interactivity-touch-action") {

        // Touch-action utility classes
        $kendo-utils-touch-action: k-map-get( $kendo-utils, "touch-action" ) !default;
        @include generate-utils( touch-action, touch-action, $kendo-utils-touch-action );

    }
}

// #endregion
// #region @import "./_user-select.scss"; -> scss/interactivity/_user-select.scss
/// This is equivalent to `user-select: none;`.
/// @example user-select: none;
/// @name .k-user-select-none
/// @group user-select
/// @contextType css

/// This is equivalent to `user-select: auto;`.
/// @example user-select: auto;
/// @name .k-user-select-auto
/// @group user-select
/// @contextType css

/// This is equivalent to `user-select: text;`.
/// @example user-select: text;
/// @name .k-user-select-text
/// @group user-select
/// @contextType css

/// This is equivalent to `user-select: all;`.
/// @example user-select: all;
/// @name .k-user-select-all
/// @group user-select
/// @contextType css

/// This is equivalent to `user-select: contain;`.
/// @example user-select: contain;
/// @name .k-user-select-contain
/// @group user-select
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-user-select"));

@mixin kendo-utils--interactivity--user-select() {
    @include module-render("utils-interactivity-user-select") {

        // User select utility classes
        $kendo-utils-user-select: k-map-get( $kendo-utils, "user-select" ) !default;
        @include generate-utils( user-select, user-select, $kendo-utils-user-select );

    }
}

// #endregion
// #region @import "./_will-change.scss"; -> scss/interactivity/_will-change.scss
// TODO: docs

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-interactivity-will-change"));

@mixin kendo-utils--interactivity--will-change() {
    @include module-render("utils-interactivity-will-change") {

        // Will change utility classes
        $kendo-utils-will-change: k-map-get( $kendo-utils, "will-change" ) !default;
        @include generate-utils( will-change, will-change, $kendo-utils-will-change );

    }
}

// #endregion


@mixin kendo-utils--interactivity() {
    @include kendo-utils--interactivity--accent-color();
    @include kendo-utils--interactivity--appearance();
    @include kendo-utils--interactivity--caret-color();
    @include kendo-utils--interactivity--cursor();
    @include kendo-utils--interactivity--pointer-events();
    @include kendo-utils--interactivity--resize();
    @include kendo-utils--interactivity--scroll();
    @include kendo-utils--interactivity--touch-action();
    @include kendo-utils--interactivity--user-select();
    @include kendo-utils--interactivity--will-change();
}

// #endregion
// #region @import "./svg/index.import.scss"; -> scss/svg/index.import.scss
// #region @import "./_fill.scss"; -> scss/svg/_fill.scss
/// This is equivalent to `fill: none;`.
/// @example fill: none;
/// @name .k-fill-none
/// @group fill
/// @contextType css

/// This is equivalent to `fill: inherit;`.
/// @example fill: inherit;
/// @name .k-fill-inherit
/// @group fill
/// @contextType css

/// This is equivalent to `fill: currentColor;`.
/// @example fill: currentColor;
/// @name .k-fill-currentColor
/// @group fill
/// @contextType css

/// This is equivalent to `fill: transparent;`.
/// @example fill: transparent;
/// @name .k-fill-transparent
/// @group fill
/// @contextType css

/// This is equivalent to `fill: black;`.
/// @example fill: black;
/// @name .k-fill-black
/// @group fill
/// @contextType css

/// This is equivalent to `fill: white;`.
/// @example fill: white;
/// @name .k-fill-white
/// @group fill
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-svg-fill"));

@mixin kendo-utils--svg--fill() {
    @include module-render("utils-svg-fill") {

        // fill utility classes
        $kendo-utils-fill: k-map-get( $kendo-utils, "fill-stroke" ) !default;
        @include generate-utils( fill, fill, $kendo-utils-fill );

    }
}

// #endregion
// #region @import "./_stroke.scss"; -> scss/svg/_stroke.scss
/// This is equivalent to `stroke: none;`.
/// @example stroke: none;
/// @name .k-stroke-none
/// @group stroke
/// @contextType css

/// This is equivalent to `stroke: inherit;`.
/// @example stroke: inherit;
/// @name .k-stroke-inherit
/// @group stroke
/// @contextType css

/// This is equivalent to `stroke: currentColor;`.
/// @example stroke: currentColor;
/// @name .k-stroke-currentColor
/// @group stroke
/// @contextType css

/// This is equivalent to `stroke: transparent;`.
/// @example stroke: transparent;
/// @name .k-stroke-transparent
/// @group stroke
/// @contextType css

/// This is equivalent to `stroke: black;`.
/// @example stroke: black;
/// @name .k-stroke-black
/// @group stroke
/// @contextType css

/// This is equivalent to `stroke: white;`.
/// @example stroke: white;
/// @name .k-stroke-white
/// @group stroke
/// @contextType css

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-svg-stroke"));

@mixin kendo-utils--svg--stroke() {
    @include module-render("utils-svg-stroke") {

        // stroke utility classes
        $kendo-utils-stroke: k-map-get( $kendo-utils, "fill-stroke" ) !default;
        @include generate-utils( stroke, stroke, $kendo-utils-stroke );

    }
}

// #endregion

@mixin kendo-utils--svg() {
    @include kendo-utils--svg--fill();
    @include kendo-utils--svg--stroke();
}

// #endregion

// #region @import "./elevation/index.import.scss"; -> scss/elevation/index.import.scss
// #region @import "@progress/kendo-theme-core/scss/elevation/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/elevation/index.import.scss
// File already imported_once. Skipping output.
// #endregion

// Register
// #region @import "@progress/kendo-theme-core/scss/module-system/index.import.scss"; -> /home/runner/work/kendo-themes/kendo-themes/node_modules/@progress/kendo-theme-core/scss/module-system/index.import.scss
// File already imported_once. Skipping output.
// #endregion
@include module-register((name: "utils-elevation"));

@mixin kendo-utils--elevation {
    @include module-render("utils-elevation") {
        @include generate-utils(elevation, box-shadow, $kendo-elevation, $css-var: "elevation");
    }
}

// #endregion


// Mixin for all styles
@mixin kendo-utils() {
    @include kendo-utils--accessibility();
    @include kendo-utils--layout();
    @include kendo-utils--responsive-layout();
    @include kendo-utils--flex-grid();
    @include kendo-utils--spacing();
    @include kendo-utils--sizing();
    @include kendo-utils--typography();
    @include kendo-utils--background();
    @include kendo-utils--border();
    @include kendo-utils--effects();
    @include kendo-utils--filter();
    @include kendo-utils--table();
    @include kendo-utils--transform();
    @include kendo-utils--interactivity();
    @include kendo-utils--svg();

    @include kendo-utils--elevation();

    // Responsive utils
    @each $key, $val in $kendo-breakpoints {
        @include kendo-breakpoint-up($key) {
            @include kendo-utils--layout--responsive($key);
            @include kendo-utils--flex-grid--responsive($key);
            @include kendo-utils--spacing--responsive($key);
        }
    }
}

// #endregion

@include kendo-utils();
